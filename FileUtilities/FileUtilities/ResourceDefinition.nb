Notebook[{

Cell[CellGroupData[{
Cell["PeterBurbery/FileUtilities", "Title",
 Deletable->False,
 TaggingRules->{},
 CellTags->{"Name", "TemplateCell", "Title"},
 CellID->45815207,ExpressionUUID->"960fb85f-c584-4f7e-86d8-ed2bdea199e1"],

Cell["\<\
This paclet contains functions for organizing files and directories\
\>", "Text",
 Deletable->False,
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8949997748019505`*^9, 3.8949997854875193`*^9}, 
   3.8949998349034157`*^9},
 CellTags->{"DefaultContent", "Description", "TabNext", "TemplateCell"},
 CellID->840423204,ExpressionUUID->"4c77382f-bb31-4297-9ec0-370ef3cf3d71"],

Cell[CellGroupData[{

Cell["Paclet Manifest", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PacletManifest"},
 CellTags->{"Paclet Manifest", "PacletManifest", "TemplateCellGroup"},
 CellID->196832285,ExpressionUUID->"84d3722b-67c0-4e60-bbbf-92d83a691d0d"],

Cell[BoxData[
 TemplateBox[{},
  "PacletDirectoryChooserTemplate"]], "PacletDirectoryChooser",
 TaggingRules->{"PacletDirectoryType" -> "Notebook", "Refreshing" -> False},
 CellTags->"PacletManifestPanel",
 CellID->115408480,ExpressionUUID->"2cb58d4c-0401-424d-9bf2-1a582bc2c400"],

Cell[CellGroupData[{

Cell["", "FileManagerTopSpacer",
 CellGroupingRules->{"SectionGrouping", 99},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->91516886,ExpressionUUID->"ed5e8d9c-7e7a-43a2-83ab-33dd7b4fc2bf"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Documentation\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"83f9dbc2-65ce-41df-8da4-916a37437e29"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDocumentationIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->74948765,ExpressionUUID->"9154f21a-677e-4d97-9217-a3064fb0e9fd"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"English\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"72280222-1051-4029-bcc1-6095ec709c1a"]], \
"FileManagerDirectory",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->456127202,ExpressionUUID->"6637c515-160c-4822-baa3-7af68c0c0238"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Guides\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Guides"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"a4473f5a-1f43-417e-923d-d26fa34d4ca2"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->25844735,ExpressionUUID->"1ff6019e-bdd3-4200-9bf3-64e02869d092"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"FileUtilities.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "Guides", 
       "FileUtilities.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Guides", 
    "FileUtilities.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->214574758,ExpressionUUID->"3e3f1471-2f98-405f-ac43-b62eb8624494"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"ReferencePages\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"274d7384-979e-4492-9055-35b9c595fc5c"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->241063243,ExpressionUUID->"493b42c2-defd-42f3-82d1-f7ba36be0d0e"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Symbols\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"047a200b-78ec-4e72-82a9-6644191f45f8"]], \
"FileManagerDirectory",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->597359070,ExpressionUUID->"7c621e46-192d-449c-91d2-f557b9c70663"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"SayHello.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "Documentation", "English", "ReferencePages", 
       "Symbols", "SayHello.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "ReferencePages", 
    "Symbols", "SayHello.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->89016897,ExpressionUUID->"174cc7c0-8430-4b61-9449-3f24b64e77f2"]
}, Closed]]
}, Closed]],

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Tutorials\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation", "English", "Tutorials"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"83f60e50-ecc0-4a1f-b90d-aeea12cef293"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerEmptyDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->28834440,ExpressionUUID->"c8af05ab-c0fc-429f-b422-35964a01c268"]
}, Closed]]
}, Closed]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"FileUtilities  Definition Notebook-0.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "FileUtilities  Definition Notebook-0.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "FileUtilities  Definition Notebook-0.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->67297359,ExpressionUUID->"b6da7302-05a8-4f33-aab8-f8518c1b47b3"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"FileUtilities  Definition Notebook.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "FileUtilities  Definition Notebook.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "FileUtilities  Definition Notebook.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->49108028,ExpressionUUID->"0fe8a1c8-5372-4157-9b76-2ed14b36b27f"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Kernel\"\>",{
    "\"Open/Close Group\"" :> (
      SelectionMove[ParentCell[EvaluationCell[]], All, Cell]; 
      FrontEndTokenExecute[EvaluationNotebook[], "OpenCloseGroup"]), 
     "\"Open Directory\"" :> 
     DefinitionNotebookClient`FileTreeOpen[ParentCell[EvaluationCell[]]], 
     "\"Un/Mark as Excluded\"" :> 
     DefinitionNotebookClient`FileTreeExclusionToggle[
      ParentCell[EvaluationCell[]]], "\"Copy Path to Clipboard\"" :> 
     DefinitionNotebookClient`FileTreeCopy[ParentCell[EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"887d1cd6-71b0-4090-a3ed-b82c36aa6ca7"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerKernelIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1080616,ExpressionUUID->"18c5b9e1-3838-48e3-8602-982c58800eb7"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"BackupFile.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "BackupFile.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "BackupFile.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->146320357,ExpressionUUID->"510a9f30-90f6-4b1b-9c2d-aba243ac82a9"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"CreateRandomFile.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "CreateRandomFile.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "CreateRandomFile.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->110023382,ExpressionUUID->"bb012574-d776-432f-ac06-83c41985f12d"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"DirectorySize.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "DirectorySize.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "DirectorySize.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->177843632,ExpressionUUID->"64dc1da6-16d1-4c16-b316-523899dbddf7"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"FileNameEdit.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "FileNameEdit.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "FileNameEdit.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->42361990,ExpressionUUID->"1f53514a-c95d-4838-a009-600aeda0c9ce"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"FileQ.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "FileQ.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "FileQ.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->326364470,ExpressionUUID->"7f0d112c-1e11-428d-bc96-3e79861bcb67"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"FileTreePicker.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "FileTreePicker.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "FileTreePicker.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->57765935,ExpressionUUID->"98be3316-b627-46ae-a15b-ab560ec6b6d7"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"FileUtilities.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "FileUtilities.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "FileUtilities.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->428152105,ExpressionUUID->"bd6d0b87-43b9-4e1c-944f-d72939c85882"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ImageRead.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "ImageRead.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "ImageRead.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->97460868,ExpressionUUID->"ce9a778d-a50f-4b14-92d1-0313ec83db5c"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ReadPNG.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "ReadPNG.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "ReadPNG.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->293131598,ExpressionUUID->"170fa90a-8cf5-4597-8bc9-ca5f2ab259ba"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"RelativePath.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "RelativePath.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "RelativePath.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->394735614,ExpressionUUID->"3e381ac7-6076-40fe-bca9-be1f5d6101bf"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"PacletInfo.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "PacletInfo.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "PacletInfo.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerPacletInfoIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->121752542,ExpressionUUID->"03e58e81-c524-4a88-80a2-e63a89c139d2"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ResourceDefinition.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "ResourceDefinition.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "ResourceDefinition.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->110515964,ExpressionUUID->"e612b615-8fb9-48e6-a6be-598d598dbb57"],

Cell["", "FileManagerBottomSpacer",
 CellGroupingRules->{"SectionGrouping", 100},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->184775595,ExpressionUUID->"99cc6703-74d3-459b-b643-d0d0aae74081"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Web Content",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"WebContent", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Provide content that you want to display on the main landing page \
for your paclet.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoWebContent"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "97d432c6-89e3-44ac-baa8-07e3c1d03d5c"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "WebContent"},
 CellTags->{"TemplateSection", "Web Content", "WebContent"},
 CellID->184208365,ExpressionUUID->"f9379e91-8ab3-44e5-9783-b3997d7431c0"],

Cell[CellGroupData[{

Cell[TextData[{
 "Headline Image",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"HeroImage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Provide an image that you want to display on the main landing page \
for your paclet. This will be displayed along side the basic description \
that's given below. The image can be given directly (i.e. pasted from the \
clipboard) or as code that generates the desired image. \n\nIf importing the \
image from a local file, use notebook-relative paths when possible (e.g. ", 
           Cell[
            BoxData[
             StyleBox[
              RowBox[{
                TagBox[
                 ButtonBox[
                  StyleBox[
                  "Import", "SymbolsRefLink", ShowStringCharacters -> True, 
                   FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/Import", 
                  ContentPadding -> False], 
                 MouseAppearanceTag["LinkHand"]], "[", 
                RowBox[{
                  TagBox[
                   ButtonBox[
                    StyleBox[
                    "FileNameJoin", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/FileNameJoin", 
                    ContentPadding -> False], 
                   MouseAppearanceTag["LinkHand"]], "[", 
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "NotebookDirectory", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/NotebookDirectory", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], "[", "]"}], ",", 
                    StyleBox["\[Ellipsis]", "TR"]}], "}"}], "]"}], "]"}], 
              ShowStringCharacters -> True, FontFamily -> 
              "Source Sans Pro"]]], ") rather than absolute file names."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoHeroImage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "0317ce99-1908-4fe8-99d4-b8d23258f252"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "HeroImage"},
 CellTags->{"Headline Image", "HeroImage", "TemplateCellGroup"},
 CellID->509724307,ExpressionUUID->"ab4ad129-f735-4214-8891-90de011668b8"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQmYXedVpntkGydOyAAhEIYkzdBwGdLQQANN6CbN0PTtwOW5ATo00Fyg
G5rQD8MNDU03fYG+N3iSLdnyIMmWZUueJM/zJNuSqkrWUKW5NEtnqOHsfUry
kJDEiRP73LX+vf+91z/tvc+p4VRJ3/s8y+fUmapUVZbOt/5vfevbf+9PP/EH
F9VqtT9/O/3nE7/73/7Vpz/9u//9V95LH/zan/z5p/7zn/z+f/rf/+S//v5/
/v1P/8TvXUw31i5Jii8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
APPPK6+8Uvvc5z5Xm5mZuSSO48uiKHoP1TdQfSCK2t9Glx+KYqoo+iDd/y1U
76d6b6fTeefZs2cvffXVV5fRc2vdbnfQfxQAAAAAAAAAAOCCh7R67bXXXlvW
brffMT09/cGpqal/RvUJqj+luoLqNqpHJicnt1LtpjpAdYTqGNVxqqN0/yGq
MXr+ENUT9Fp3RlG0Io7jv6D691Qf7XQ6306X74qi+CKqQf+xAQAAAAAAAACA
85p2O1Zn8qTbL5uYmPieidbEr1JdTtcfa7Va41QzzWbzdao3qbqNRiOrer2u
6swZrjPe4vv5sfzc1sTEW/R5vjQ9Pf1yu90+EUXRM3Ecr6T6rU6n84NU76br
y+hy0N8WAAAAAAAAAABgyUP6u0banDT/xGWk7z/SbLX+C+nzB6nOkFZ/3afx
c62fa/vTp0+rOsV16pSqk1wnT6o6ceIElb5Mim/nx/PzuScwOTnZpa/njSiK
pkj7P0fa/39SfXSm03nP1NSU+loBAAAAAAAAAABQnYmJiRpp6mWk+b+FtPcn
qe4mjd+k+orW+smlq/tt/X9a6n+t/U+eEro/qeMnjnePHz/ePXbsmLf4Mfxc
/rz09XWn2+23oiiaieP4qU6n84edmc53xJ3ORfAEAAAAAAAAAAAAxdQb9Rpp
/Uup/gnp7L+m2k31xZDGL9P+rv4/ner/k4b+Z91va/+jR4+qOnLkiFF8Gz/2
1OlTyhcwNTXVjaLojTiOD5P2/zuq7505O3NxZwZ9AAAAAAAAAAAAQBO/+vna
qSOHaq1W692kp3+eam161v+m8vaLM3515m94/qUXINX+1py/ff7v+v5d/X/0
6LFU++f6f3x83Cl+DL8Of/6pyalu1I7ejOP4RKfT+X84N/DszIzaJQAAAAAA
AAAAAFyosMd/uj3Nuv8bSfP/e6pHSUe/LGf6y8rXC7Bz/rT+t+f+5by/1P/6
3F+e/Wu9f/jw4awOHTrUPZRe58fwa7IfYDrxA3wljjtjnU7n96jeSx+rfQUA
AAAAAAAAAMCFQrPRqLUajYtIK3+YivP8hqi+oDP7mz3o/1D+3xk9A3DaN/sf
Pvs/GvD9J9p/XGj/VP9THTx4UBVf5+fx5+J8gHa73Y3j+Auk/x+g+imqS+jj
QX/7AQAAAAAAAACAeYXP+ycmJy5utVrfQ/XfSe/vp3qDdX9RNVQ13NsbzWAP
wJv9X0X/e8/+Tf2f6/5c+x84cCArfgy/npoJSLwA3AeYTLMBPjgdtWvICAQA
AAAAAAAAcL5BWp+1/yW8v4/qM1THqL5K1eXSel5dFx9X6gtYswB+/X8mqP/d
uf/Q2b/l+xfn/lr/79/PtV8V38bPtbwAX6EajuPOJ0j/XwYvAAAAAAAAAACA
8wHW/VSs+3+Q6iqq01Rvat1fpSr1AUIzAOL8P8/9N2f/Df2fZf4dCc79a99/
pvvF2b/W/nkdUM/lvAH+s0xPT2svwCtUa6i+vxN3lsUxvAAAAAAAAAAAAJYe
pMlrpMVZ9/8Q1XKqOtVbStNPtNR5eKj66Qf4/f91f/af5+w/9/7n+n/c0P7j
wbN/W/vv27fPKL6Nn6ezAcU8wFtU41R/QPXec2fP1eh7M+gfHQAAAAAAAAAA
UMrkxCQXz/f/ANWVVGdY99saf3JysjvBNaGrnz5Ay5kDMPz/6fl/0ex/rv2P
e73/7tn/Ie/Zf679Xf0vewD8OXUmQDuKdB/gC1QPUH200+lcjFwAAAAAAAAA
AACLFZXrNzFx0URr4rtJm/+viVbrFH38ptT7VatqH8CXA6j1v7H7T8z+nzzl
5v5l2v+Y6f0ft+b+QzP/Wv/vs87+9+7l2qsq2ANot1UPIIpVH6BF9ddU33Lu
7EwtQjYAAAAAAAAAAIBFAun12vT09LJms/Uh0uR/QXp9nOqr2Rm/1v6kdadK
ih9TtQ8gz/7tPQDG2b8z+1+e++9m/lf1/dv6f69RZg/gpNsDSIrzAV+k+njc
id+GfEAAAAAAAAAAAIOkcbJZi89GnO33ftLmf0CXe+jyDaXVJ83zfkfrT0/T
5XRxLyDrAeR9gJbTA/Brf2P23+P99+b+Wfo/NPfv2/Xnm/nf69H/qtIegMoE
PBnsAXTjKD5L2n8l1XdNTEzV0AcAAAAAAAAAALCQkF6tTU4qr/+7SIP/6kSr
9Txdf116/G0tz5n3VUvqf/vcP7Tzryjzv+rZ/zHb+8/a3zr7P1gx82/vvr2J
9z/UA6Di5/Dn4a9LZwJyD6AdtWUv4E3S/Xup/kNnpvMu5AIAAAAAAAAAAFgI
6qT9m43G20iLf2xiorWJtPlnfbrf1vRK1wZKaf5U92utz3pY63jW7r6s/rwS
LX/yxMlU35/Kzvpl5dr/pJj7P2Zp/6OG7197//W+P33+f+BAceZfov/Li1/D
2wOwvABRHP9DHMcbqX447sQXwQsAAAAAAAAAAGA+ULv8ms2L0kz/6ydaE5HW
/T7NL/V9omEtvc9afzLR+nx2r8/qE32e6PIjInvPl7vnq0OHDqrH8XP4uazp
+bVY6yea3zPzX5j57//8Zfv+Qnp/jGvM7gEcVJ+b//z8/XD6JXImII5PUv0Z
1fs6UVxrdaYH/asBAAAAAAAAAOA8gL3+R44dYf3/raRN/5J0/3HS/W/Zut8+
s7a1Pj/ep/W1Bj9C+nfc0PvhPXt2aQ0ua5+4zo9JegNJX4D1vdb7dvkz//Tc
/yFL+4e8/2H97yt+Dr8ufx/4e+P0ACIrFyCOv0T1ONW/mul0vgYzAQAAAAAA
AAAA+qV+ul6bmJxg3c8z/r9Omn+YNPwbRXo/P9efNDz8OntPn7sfPZro/SPW
bj1b98sy9u15egH7Pf0A25OvK+kJ6H5Acs5vn/sb+t+T+2dq/+LMf+f8X9ZY
3gPgz3HseNIDYG+FOzcRGV4Aquk4jv8/qg+2ow7yAQEAAAAAAAAAFEJavfbq
q6/yDr+LSFO+k+rbSEv+CNWvku68l+pzrtZvG+f65rz+KWNe387V82frmzn7
9r49pwcQOP9XWtzjx8/P5bU+17drf8Ah53P7ff8HPZ/TmvsvmP3Xut++nvUA
6HPy94y/l/4eQNp3yX8evCtwuBN3/s+ZmZnL2AtAl4P+lQIAAAAAAAAAMEBa
rWat3qyzzv8a0o3vofowaccfp/oVqj+nupnqKapDVB26/3XWmNPt1MM/4dP6
MpvP1Pv2TL3S/Va2nnne7tP/tg4/FNi9t9/x3o+NjWVn7Op6oGQ/QPcCivoO
+z1z/3tl5l/AA6C+Dvtj6za9F5C/nzwrwf2VYH5ilGcD0M/rFf75deL4e2dm
4mWdDrwAAAAAAAAAAHC+wz7w9Cz/HXEUfRN9/L1UPxvH0e/S5d9R3UG1leoY
1QzV61RvZWf7bdPHL2f2q+zQK9L/drZ+lR5AyAfgy+DT2nss1f+jXKOjTu3Z
k163+wF7x9RryNwAee5fLfNvn3Pm7+8HyM/t9gD4e6x7AEX7E8SOgLfS3s1/
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
xhPAaAEIdm1Yg+8nB+kHaLJPDq8h1KKD+oAlet9i+RB+X6ZcgKsN8OPv6j02
BqvXY/lPZRxPflcT9Pt2m2mUKu7xY4l3LH93zG9PyVOdzV77Ezdu3Bz3JZiG
hoaGhsZY4tTEKcjfOtFuvwu1tkHxv9EAzCMfAPi/2WoAEK4J1u4xpl+gt74a
/tjxfHT6cWF+zZMwT/+0xJI+PMkwvVlWvb7CsHZbicsZbOVMxvweeAYg1wN4
v7ea9OH/WD3AULA/udaO4AAEDcC1mnmARR/AHO0DyPC/9QLMNQBFH4BvHqDx
Ajx8mHoBQh8AaABi+wBqfQAb4fdYHcAulH49QMUHPEZ1ALDPJZfx9O7dOU9y
1ngBMB3AvID/6/3/yh4Ajv0R/jccAHzH8L3fKPsBsBZgWL5/Ma/jvnpN8T/f
X2kbkt48qHfH+07q9tXrfHV9GcdzHfx4MHyF4z01efx/Ufk7ZnhKjOULDlHu
IbrGcLz5HTG/JSbNuVj1rVTzLMz5nS3/Tradf/5//cI/amXbHfclmIaGhoaG
xoZHpz2V4f/cC/Bnsuvsfz+MWQBGAwD//5r+UKghUg8z6gOIe/+x5xnxAUzo
cl4T3TQ5SN03xTiy6fv4dQM+zLoR2Hwj8fhGfaYEvZ/lUnjfRr/nQOL2tfB5
GX7Mj7UATeYA1M0CCOF/mQNwfQAoB3DxouAFePacnQfINQAnT5YagOPH19//
4IP1d0sOgHsB4j6A3AuwnAeQzwTcvSfYBxDG/ztHpAEosD/sT8gTwHoDMF3A
ozvpPu/dR/0Az2H8j7G+hwfw+f6LCXjrgssB5J4A2TkA50bT+QDDwP8xmgCu
RyC4e5ni82X2mGr0Gc/gweOONqAvrF2P86Gnvj8MH6jHlzje/J9j/h/GPiKE
D0QzQa9H4niO5Smev0jOu6In5bxz7prz/FzJJxpO0cwZNf0x2boTly9d/q2X
Ll4c9yWYhoaGhobGWCK7vm51Jjs/lOH/N4eB/+GaHa7f4f9j+D8c/q8nGgDH
DzCxmn5JE0C8AaWs6f/vx/tf1hIM0tM/jMQ1fsQTGB4gFWrPgsa/DiMnHmwd
hYsT97X9bmvYWF3al9C+mefqj5fLvaTpML/3SPx/W15W5wEQwv8xHAD3AQzq
cSM0ALOlBsDOA8x+T9rtei9A2wdQegHm8wDACxD1AYAXQKUBeMLW1B+xfQB1
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
GgCM1+XkfQA4zAX9BGPq9dCjfeOYvFXG1rLJOginc7gZvsaP4UNeAc37AR0C
xPCN9h/0MMBlkEuwj2doe77PLfEE3XyvIBt+C/hUsLMA8+YCRPv/RXIAwRmA
AQ5goQGob2O9ACUOwOKDeu5YXRON4QA4LQDlAd65nBNgdOsNF7DkA0zG+NhJ
9fnkuvyLQo98CoaPrs0LeJ7zwzNY/sfiavNcnf6WV3+/w/rmORr85W9b99rT
ej3F+D49vs39oD6/7sM/uIt78fFMvWUN/4GL7fn5egGcjzz0nmKs/xT771m8
D3ryj3ltv/l7Q5gfYHzI2fnS8Hloxifh9aS/a8gDUC0A1fsg78JH8+/mx6t1
vriu/4+OR5u+ZNLQ0NDQ0LjycfvOTq8YFL3q+uqLq2upyeK6qR3+NxqA+n+8
rAGwHMCM4QJiOAC2H0DgBkq6bsncb5nboxGQsDBX03dfD/G72xuPsX2TcFuw
Pg/xtoO7oZ7fg89J3X+xbLmvRK8A3wd/DvnzrjSBvgUdp+aYaY3/w/3/rhdg
Pv4PegAQHYCDF8YnSEvs5wBkP8C7cC5AlbvIE6CwHIDEAyyxsMHLsI99oY/n
cXrjUy/0x0fX6TnvOwnPR/bJh3rmQz73BtPz8+y4PnrJA3+J65k6vavDLxj/
PM5Hb1es27u4fj+A693+e76Gz/TiM3p9rid/ge8fkTr+Y8cn/ynC+E8vXa/9
Qx7rE7x/LPTxO7V+Aff7ND1R2h6G2xuCv2u2J4DxCUSeBrZP4L3V879Dvf80
NDQ0NDS6i0Ex6O33d19VXXP9j9U11iumbtKGBzA+APX/e58GAPXoc8sFXARx
Pa31+3wCnNo+h/2ZZWXpWf9KJemvl54nOP05xN7m+eU2KPZHGn6zDtL+L/G7
g+v5HgK0r2LdnmoXmO1uMOmMiqanZSbh/jAfkOoFEOoHwP5/6dg/NA/Q4AW+
Xrj0AojhAMhswFgtgPEHhDwA5gLe1fS5v+Md70TY3OB1VJd/MeB7563VWz/7
d8bU5lkMv0gOx9c6+1B9/taSF6F99E4vvfHIu8Pjeb63vljW7EP1+l10P6zH
J9j+4MDbd+/F9xHY3u3HX9TxH+LZ9HMNu4Tx61o+xfi4nn/Ia/gFrB/y7YPa
fE7j78P99YwP39/9GfX5YLk9Vwdg+b0j3A8A9D6cFkLxv4aGhoaGxuqi9gGo
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
gjmymU/lW4RvpR4AMk7Ie8gEAAAAAF2P/Xv3ljZPbKHzAO8j/KGn/9PUBGx4
ALa5HoADrAcg5rpSZ+rx5cGw6+rVa+5+hsV0B2vl8ftk5rdW6PewbfzXQmLY
Zcficu57+ln4f+tvvbpywRwBCl0urvlLro336Kv8A+HzBDLvA5sLIHCcMP+/
rO/DYjBUxxE9DAmfycb5FXNKkmPrnjP1s6uYAwK7kBnNa4Vu39jnYcKXwAMA
AAAAANnA9QBUqy8zLfOxKA+AzpwA1f+uB2BhwdnvegCW1LUAWN9/7nq/XXUI
Yu6PWIj2MEZ8tPp/KbVK1jHfHm1129R569Sa3zs2d81S7c5rb52+FWOBouIM
ZPH3ct0u6Heh/a1cg5L8g2yMQF1xbUIsgniMOM9KWD7GqHiOTJ7NvNf48z4/
WHiy3hzy84fk+X7/0aO10hNfeiLvIRMAAAAAdD2qRP9XDKNkmua7Lcv6HjsH
MDkl5gPUqxHAeQAOHHA9AEePHo05rs17PqBd7NXrWhnsVO60TPScRJvyue69
v21uLqG1b9D7zsUESPS3v62kfQFtG9WXEq9/4Hh1/tjStX32/0IfN44djL8Q
vQiy2o6BGgW2rH+zyQWpfDY01u21nlnVHFKc5z2qHXHak5admmPoprmMLmqr
JDZnplarvYbGAQAAAAAAkB5E89N8gC82LfMBy/L0P6/349UHbHkA9u3bF+4B
ULJbdXL8djdiHbr1esEwyvzkHDMck6vPER5Tb9vBdvLr5uxaueQ4iph88dh1
hfb31teD1xJRM0/iKVfOR4T4F2Rr7lz9P/Y1yX2V+wIi6gFEanZ1bYQGdfwW
4duI8xFJ5ycy0fNdpE3BzlCIL3qKcM3Xvv6DEnkt7yETAAAAAHQ9dmzfXqpU
jJJpWX9nWdZ3ZHEAk/48QDAnYPs8AJS9rouPOb2UA3GlMbH2yWBtWHddl/sp
7svpWLn3XvTWS88hzA+Ix+auV+r5F9snz4nIxsfzXgR+X84LUA+uJ3p9HurT
Z/dn/ADSWP+62AbJ9YTcx0BuhZDYjMyeXcXvqQktD7aB5D10gPCNNA8AfAAA
AAAAkB5Vy6R8gWmad1uWFZ4HQPP1melpZwfjATh85LBTqy23aXzQPfoZdQKK
yzjzU5lqpgTnD6V0bbwe1GYS3RynHWy8PRtfnzafHKfz67zmDqzZ25LXJH0a
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
hPd5eQDS+AAa9QBFD0Dn8wCAYNuZVud2iU7uSSbp+xT5/3Woqwc7PUcU+3yR
uQh0ayHk8Fxk/Uy42zC+fE57p3gGuHPza/xeH0vz/kty+R06fCjg75+fnyff
45POpk2bnM997nPO9dff4Fx66aXO+eefT3X/M+ede+5Oovv/cXh4+MSRkZG8
hzEAAAAAAMTAt7/6RKlcLtM5gP9jGMa3G/rfSl0TcGZmxvUA0DHFwV71AIAr
l92gTbK4lgyvsyh6Tjcff97PhKq/itKPOv2RSd7BojHOdTB5G9gcfTYzJ1Cv
J/ECMH/XxbV+2VwD1ft8/n6Vv7+Rw/9e51Of+pRzxRVXuGv9Td3vnHvuud8j
vOmCCy54wz++/V0laH8AAAAA6E5YVatEdPsLiP7/XMsDQFhNPgcwNTXlriHQ
scXi0iI8ACDYbRT1WxvI1xwvwDVnfN2irpPnjAvrn2LMmbbz3hThGhNdnx1P
t/Ns6XRlfwhzA+zcgf++iVjjl/r7F3l/P83Z6/n7b7vtNueaaz7uXHzxJb7m
b+r+Zwj3bNiw4X1jY2MvIMx72AIAAAAAQAq4dQAa/KuKYXy9lQswvQeAegld
DwAZd8ADABaWRdGeHWb2ufjbt33bNGio/k6bt19RQyGBB6FbPjsTr/m3qy5g
Sr+HjsYPzvPo7GMH6lwq9/PW9OsynS9b629o/kb+/kOu5hfz99N8vRs3bqR1
+5wbbmj4+y+44AJf81NuOHeDQzT/Nwg/Pjo6+oY3/dEfls44/bS8hywAAAAA
AGSA8sREacuWLSdWKpVbDMYDkC4PQMMDQMccdPxBPQB0TNIt41gQ7DrmMI8h
aphWW3J6n3ew5nziPitYe7Lqq6jPdi9nXe7XmPT6NPtP9Odr7xs4n+33mUzn
14XXWH+/F9PP+vtpfZ7Nmzc799xzj3PTTTc5lwf9/S6J3qf83vjY2P3j4+P/
ewRx/gAAAADQc7jv3rtKhmFSD8CfG4bxVS8OII7mtyRzANPTQQ/ASo0DKPSY
v8hMm1dtJc03iTXsi/bMZdEe8RhaOdjyve5oXRznWAW4j0nbWNC2Z9mnKp0f
u8aAmNM/ombfEbZm3759rubfsWOH68Mj3+vO/fff79xyyy3O1Vdd7Vx00UUB
ze/pfqL3vz06OvrF4eHhdwwMDL6or6+/NDQ8nPcQBQAAAACANqBquXkAnkP0
/w1J9L8qD8A2eABAEIzLuBqySz5Tsl7/LupnqRjHHvx/vnMZWeecYK9Hlds/
UMMvtG2yOH+9mH5as49+fz/88MPOZz7zGefaa691LrnkkoC//7zzqOZ3df/T
Y2NjT4yMjNw8NDT0N+vWrTvpoYceyntIAgAAAABAB2AYlRLR/m8yDONLaWsB
tjwA087Czp3OvqYH4MgR5AHoChZ0rQ4sHnv6/dzu90EeMRvtqoEQ9/q04uTb
2AdZHi9Bv4o1AdhrDaz112wupl9Ws49+3z766KPO5+/6vHPjjZ9wLrvsMlfz
s7n8vDX/xlr/2A9HR0fmh4eGhgcGBn53cGjwuYR5D0MAAAAAAOggiPYvGaZx
QsWoXGkYxrNiHgDVfIDlMugX8PIA0HxDQQ9A58e9oGIcinvRmwzEA6TU6W7M
cXdp/cz1Y1iMRZHeRyFr0UViJ+eOOD99PegBSPOsRO1rc+dsan2u/oUtze8n
xvSLNfu2Tk87W7a0avZdeeWVvL//vHMbpJqfcHx8nK71Pzk8PPw5ovnfs27d
2l94+9vftuqDH/xA3sMPAAAAAABywD133+POAVTK5d8h+r9mZpQL0PUALCy4
HsWGB+BIb+QBKPjYGuwAs3oGuvVZCqthFue62pTnoS36N6vc/VHHiXueTl1/
B6mjq3W2DXjv/dx5ydrR0uzx5i/Y/Vifv8zff1iI6af+fhrTT2v2NWL6H3Bu
vfVW55prrnEuvvjihub3yKzzUxLN/73R0dEpovuJ7B/4vdWrV594xRVXlN72
trflPewAAAAAACBnWFWrNDs3exzR/xcQPpM6D4DgAaBjGepfRB6AYrLb9QIY
gyvtXmc1VxFzW9V7Suu9lrWHQ/d8Xf5sROZcTHC/2H3lcy3qc7bi/1V5/OxW
TH+zZp8spv+RRx5xPvvZO5zrrruuWbPvQt7ffy7r7x//6cjIyCGi+W8cGBx4
6/r161/x/vf/26qPnHpq3sMMAAAAAAAKhopRofx1wkMtD0C6XACsB2AJHgAQ
BDNgnDVcfr8Y2yd8jys1Zps0fE/O3TXr3KU/Tob9XJev/WvH8kv8/YeYmn1s
TD+dO6cx/XfddZfziU98wrn88su5mn3BmP7xZ0ZHx75KdP/9Q8NDJxPN/8tn
nXnmCcjhDwAAAABAGKa2TpUOHVxaValUhg3DeFrbAxAyR0DjAOgaBl3POLC4
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
spvHj8b0Ly4KMf2zM06Fiem/5uprnEsuuaSp+Xl/P6P5nyKavzY8PHzb0NDQ
e9b3rX/t6aeffvzq1avz/loEAAAAAADoaRgVo7T2xqtpLsD+ilH5eSAOgFnz
j6wTyHgAZmdnfQ8A9YfS8WMi/VOkcX+R2iKO4btYW3b1fer0M2HncM42MnF9
vMye92Ptua4k15nmXHay87C1+ti2cjH9B5sx/c2afQs7aUz/Nvcz/+GHH3Y+
+9nPOtdeG4zpl9Tse2Z8fPxro6OjDw8ODp3W19f3RqL5n3v11VeX3vKWt+T9
VQgAAAAAALBiQGsBEL6+UqnsNiJrAah1P8sp1gOwtJQsD0DR2EO6C8R9z5Ns
/vjE98Lbv4CfKZ2sFcjn5g+vXcjm8ufi+5m1/iPNmH76uU1j+qm/f+euXc48
jemfmnJj+j//+c/7Mf0XXXgRt9Yvien/7sjo6NahoaGR/v7+P1q3bt1J46Oj
pTVr1+T91QcAAAAAALAiMTk1WRpc0089AKsJfxaWC1CWG6BqBfW/3ANwNJ3+
hw4DVyCR867edt9DO/rYFnIXxt4/8vg2F7Mfdhw2X78qj9/hsJj+zZudL3zh
C86nPvUpN6b/4osulubx82v2jY//eHR0dP/IyMg1Q4NDb1m/fv0rTj315FVn
nHF63l93AAAAAAAAQKnpAagY/53o/200D4Bpplv/dz0AU1PO9h3b3bEk6wFI
Pp7u/DpfW7RXAdcrQbBwjP0+Kcj7qiDzNazu919jND/19x8mn8k0pp9qfjam
n87d0pj++++/37nl1lucq6++2rn4Yqr5L/T1fmud31/r//nY2NgxovnvHBwc
/Jd169f90plnnnn8RRddlPfXGwAAAAAAACBg566dpU2PbKIegFMJfxLHA8DW
B/TqATbqATQ8ALsYD0BX1wIAQTBTdstngWwesN0ef9nxg3kF1P3aoiSm/xAf
0+/W7BNi+q+7jsb0X9aI6efW+c8XYvrHvj46OrppaHjorP7+/t9cs2bNc/v6
1pdWr/5Y3l9rAAAAAAAAgAKO45QmJiZKW7ZseRXR/5ORtQBCawVW/bkA1wOw
veUBoB7ThgegOOP+yHF8QdbzwN5kofz9adtSpGspSN95OfZiPxda29j+T7ZG
g7/OT0g1/9FmTP/i0mIrpp9ofi+m/9FHH23E9H/iE42Y/osuamj+Zly/mL9/
fHz8e0Tzzw0PD28YHBz8s3Xr1r2Ifo+8813vzvurDAAAAAAAANBEuVx24wAq
lfIHKkblR9QDECcOQB4XMOnMzMy4saR03JlJHgAQ9LgC9aaYr70X+0v3+th8
dpmeP0TL5903/jPg5+6PiOk/GIzpn56edrZs2eLH9F911VVNf/8FzVx+zZp9
TC4/ovl/MjY2tjQyMnL94NDg365bv+6/vfuf3r3q3z7wr3l/dQEAAAAAAAAJ
UalUShXDeAX5OdHIAxAnF6AkNyDNBTg15cxLPACdrCneKT0Cglkyy+eu4QOP
sU9BtG6n22lncMxE6/1CTYSwGoJcLr+6HfD3izH9CwsLXEz/rbfe6lxzzTXO
JZdc4vr7L1D7+38+Nj72xMjoyF3Dw8P/1tfX9z8+8pGPHE9+5v1VBQAAAAAA
AGSAudnZ0mOPPUbnAf6J8L9c/a/tAagGX2vmAmQ9AHRs6nsAukVjRGiOoqwL
di2zzO+Oe5G6/wLPc8pc9t3INO/pLPIF8Hn7xHX+kJh+ovlpTP+CJKb/+uuu
cy677LKA5vdz+RFuOPdcWrPvm6OjoxNE839scHDgd845Z/XzBgb68/56AgAA
AAAAANoAGgNQLpdfTPT/I54HwEzi/2fqAroegPl51wNAx6jUA7BMPQC6cQB5
6A7Nc8IbkC85rdXN+rTAz3hR2Kl5tnZ4k8S1/VZ+/uC5Wlo/WLevxvj7qean
nio/pn/XLvdzdsqL6b/rLucTTEx/wN/PxPRv2LDhB2NjY9tHRoYvGBwa/H/7
+/tf/Btv/I3Su975zry/kgAAAAAAAIA2guYBaPLtlUrlu408AMniANw5AKvl
AaA5pwIegALoipVObV2Vl16MOq+wVlq49nW4Dwp3/4rG0H6w9T6XUnqA2NwF
Yk4HUfMrY/r37XPrq/gx/RNbnHvvvde5+eabnSuvvLJVs4/195/Paf6fEs1/
aGR4+Kbh4eG39/f3vXr12WetGhsbyftrCAAAAAAAAOggXP0/UX4h+Xmv7wFI
nAug6QGYbHgAqDdV9ABgDT2OPikuY8eYxzhu192LuHnfi3DPi9AG9r7nct5m
Tn1R3yv6Srp+bwu5+IVj+Pn7/GO0thM1PxfT3/T305j+HQs73Jh++vl8/wMP
OLfddpvz8Y9/3I3pv8Dz9wtr/U3N//T4+PiXR0dH7x0cGvrQ+vXrf+X0M04/
YfXqs/P+2gEAAAAAAAByQrk84eYCLFcqbyE/v5W2FoBXD4CuUYkegEY9wPy1
Rla6KTOtWjAtthJpC3kJkOeh+8lpcMU9F3PxqZ8Pm6vvF/xbPj/g5Vjg1/hD
YvrJ5yWdN6WfnXNuTH/VeeSRR5w7PnuHc/311zMx/cJaf8vfT2P6vz02NmYM
DQ2tHxwc/P31feuf/41vf7P03ve+N++vGwAAAAAAAKAAmJiYKG3ZMvH8cqV8
h18LIGU9wMnJSTcnFecBIGPdbooD6Oq8hSAIJqIbkx94jf8p34/5ncnXL3J5
WR7Tv0uI6b/Li+m/4opmTL+w1u/qfb9m3w9Hx0Z3Dg8PX9Lf3/+XA4ODLznj
tNNK69auy/vrBQAAAAAAACggXA9AufyX5OfX08UAtOIAqAdgQZUHYCXp6h68
1sj18R685iJROY9W1LwNXUTPsy++VmdfZ/38dTuQR1D0+PMx/XzNvu07drif
lRMTE35M/1VXXdWM6ffy+En9/T8bGxtbHh0dvWVwcPAf+vr6XnPm2Wced/bq
1Xl/nQAAAAAAAAAFB9X/hCeWK+WbfQ9AUv1PtL9VZA9Ar+aNA1c8V0zcQsbX
mbTf+BiCYB4/Lqb/QDOmn9bsW1hwZucaMf0PsDH9l17aqtkXiOk/j2r+Z8bH
x786MjLywNDw0Cn9/f1vWN/X95yhocHSaaednvfXCAAAAAAAANAl2LJlwvMA
/Bn5+ZV06/+tOICtW6fdsS4d99IxMB0LtzsPQObzC1lojQ7rsrbk5+vANSA/
JJg3o57BgM9fqNkXFtNP50OtqtWI6b9DjOkPan4mpv87o6Oj1eHh4UGCPzxn
9TknPbrp0dJHPvKRvL86AAAAAAAAgC7Floktpc2bNz+nXKlcV6lUHC8XoJki
DoB6AObm5tzx74FOeACS5HDrVK3xItSOKzqL3P4it023vd12DSHMYq5I5z3p
zaXJcvj5mr/WiulfZGP6d7Zi+h977DE/pv8KP6ZfqfnpWv+Px8bG9o6OjF5J
NP/fnPOxc17+z+99z6oPn3Jy3l8VAAAAAAAAQA/g3e/5hxLR7dQD8AflSuXx
Vj3A5HMADQ/AVmdH0wOwtNT0AOQdA9AO9pC2Arub8FHUE9dzsNn97XqgVh8f
078ciOnfRWv2sTH9993Xium/5GK3Zt/5bEw/r/mfGhsfs0dGRj5DNP8/9fX1
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
4IdfQdS513ge2kZb+F3m6/f9/WEx/eSzg43pv6EZ09/Q/Bf66/2S/P0/Ghsb
2zUyMnIZ0f1/RTT/y9729retOuXUU/L+mAUAAAAAAACAQsAwyqUtE249wHcR
fo96AIzm2j+XD0CSG1DlEXA9ANPTAQ+Aq9XtoD5IpDWYY+US150noWHBLmHA
36+I6Z9nY/rvucf55Cc/ycX0N3L4STU/jelfHhkduXV4ePjdg4MD/318w/hx
5O+8P1oBAAAAAAAAoJColMulSqX8IqL/769UKsE8AFT3M/UA2fh/f05AiAlw
PQDbtvEegJR5ABKv5UMvoy96gN3kZaE1/ETN78b0U3+/JKb/i1/8onPLLbf4
Mf0XCjH9fu7+Rh6/Z8bHx/99dHT0QaL5PzIwMPDGj5522nPP3XBu6a/e/Oa8
P04BAAAAAAAAoNCYm58tbX5sM/UA/G25Uv5OMBdgOFVxAHQ9j8bwcnkAOrBW
HzcmoLC5CbuFGerSQsbDd5Hubhej4vzVMf2HmjH9DX8/G9P/0EMPCTH9F7rx
/GIePy+mf3x8w3fHxsamiOYf7u/v/6O1a9ecNDu3p3TKKSfn/REKAAAAAAAA
AF2FcrlSqpQrLyiXy58PegD09L8YC0A9AHNz2XoAwnUaW0s8f820Ypiir1Pd
J9zjeH1db6zLJ9mv9bcdiOWXxvST93sjpn9vI6Z/2zanOll1Nm7a5Nx55+fc
mP7LL7/cuaiZx0+M56c/XX//uBvTv3d0dPSqoaGhN69f//+3dyfQcZ313cev
nYWEAGnKnlIoS3ugtGUr5SWQU6CnBAgJkBRDXkziJJatXZr1zibbiuXdchLb
idfE+75LmrkzkizbiuM93h0v45KW5n15Q9kKgSSQ5L7Pc2fuzL2zaBmNPVq+
n3OeI0W2tc7o5Pc8////cf75hPLxo6pqKkv9KxMAAAAY0kTuV6Kx2FeisehL
mTUAqX5/2/0A9tez6gAsNQCy5jc9B6B4dwEMy3zY38+7r3PvSv39yPHxE7Ph
LP890n7WV3EVq7airz39B5M9/WHZ078u3dM/dWqTJfM32mb3T07U9/8pGAxd
Fpl/hcj8Y0Tm/8t6R/01dXV1yrpn15X61yQAAAAwLIgcr3R2dtwQjUaX9bcG
wJgTkKsPwKgB2G/c53XqatQAsAaU6/r2d/v5syvlz3qE7QsUu+7FrBfIl/mz
evoPy57+Z4ye/k2bNxk9/c3NzbaefvOcf4ol80+aNEn29P9MZP5dPr+v3O12
f7yyqvL6UDCkjL1/bKl/NQIAAADDjsjvSlTT5DzA28T/v7+Yfw5AjloAyx6A
fR8gWQNwKF0DcP78BSNDDKacU+z3OxT7D4bi59zr1zPMvqYeV7Eeu5ez7+sz
e/qfN3r6zyZ6+sXz2byzz9rT//TTT+uPWXr6s87605lfnvX/JhgMdvv9/qDX
6/1CXV3d23RdVz7/hc+U+tchAAAAMOxpkYgSDrddr2naAlkD0N7Xs39rn0BG
L4CcBWjUABw7pp86dVo/d66fNQBFP9O8eh9rqK5C9wLMvFjqz5/Vh5+V+Xo8
Oa8/R2+/vaf/TKKn/7js6T+qHzhwwJjx0dLSoq9evVpfsGBBoqd/6tSszJ9x
Z98rIvOfFpn/MVVVv+FwON5dU1MzSqxS//oDAAAARpR1za3yHgC5PifWf2TX
AOQ7+8+xUrUAiRoAed+XPDOUfcIyU/T1LoDhdi6d9TUNkq+v1+/zIPk8Wf34
meZ5Pftnn6u+/1yPPf3r16d7+puamtL1/Y2Wnv5k7pc9/aFQ8AWR+Verqu8+
l8v1wQkTyq5xuZyl/pUHAAAAjGgy/8eisWvFyzl9rwHIyP0d9jsBZA3AM888
k6wBOGWcJxY6B2A47gcUtK7294Hv+5Bc5nMsfjm9B2Bk/cs99PSL52iqp//Q
Ib37mW6jp3/z5s36EtnTP9fe05/rzr6GBnlnX+ilYDAY9vl81W63+5N1dXVv
qa2vK/WvOAAAAAAW8i4Asf5e/D9/PP8cgDz3Acrs39GZNRNwz549qRqAxByA
832bAxC3ZJh4f+bUXZ1cNWxXsfI++waDZmVm/sw7+8ye/sOHj+j7n33WeN6a
Pf2PJnv67Xf2NWbN8gs1NPw2EAgc8Pv9U1Sfepvb7XnHN755h/LgQw+W+tca
AAAAgBw6OzqUfXv2jI5Fo4/EYrE3+rcH0JlamXMAUjUAp+01AL3dTWbN//3K
lFc4exbrTrWev4Yi9NQX8H0YybMQh9sy982M3H/xkn7h/AXj+Sfr+2VPv6zv
P3K0l55+61l/Y2NmT/+rwWDwnMj9C71e7511dXXvefCBcaMmTpxY6l9lAAAA
AHpx9PgxJaoZcwA+Lta5WHvv9wF2duaYD9CZXQMge4htcwAuXepXvh325+7D
YZH5i77y7TXZ3m5k/PTbU3P8LPX91p5+uReX7umP6OvXb9CffHJRVk9/o7Wn
P13f/3ooFPpPkfnXq6r6Y4/X8+Ha2ppr66nvBwAAAIac9vZ2Zd+efaNE/g9E
Y7HX+9sHYLsTsCNdA9Dd3W3MEjt5MlEDIHOJNdMX60x9ROwTFDFnD+pz+sH8
ufXne3wl3meyfiZdI5Ovp/+0paf/sFGLI+d7yJ7+pbKnvzm7p78xe36/7On/
hcj8MZ/P5/B4PP9QV1d34969e5V77rmn1L+yAAAAAAyAFtUUTdM+Eo1GT8is
0P/832HcB2jeDShXV1eiBkCeP9pqAC4P0VmAg+FzYA351Z+9ASPrx5OP/3i6
r9/a03822dNv3Nkne/qPpHv6d+zYYfT0P/bYY/r06TOSmd8+v99a3x9qaPhd
MBg8LDL/NK/Xe7vL5br5ru/drUwop74fAAAAGC46OzuUu//tHiUa1RzRaPSP
hdUApGcCZNYAmHcBZNYADDgrxa1ZqfTZri+f51BaZv4caV/3wL9vBf67yxmz
+zOWdY6ftaf/aLKnX/bdtLS0pnr6Z82clejpN8/5rZl/Sqqn/zWR+c/7A4HF
qqp+R2T+900omzC6oqKi1L+WAAAAAFwh8j5Asf5SrMMxkf/b2wvJ/x22WYBy
xtiBAzlqAAawB3BVZvH1mO36+rmPgL4Ec43QnF/MZczuu2zv58+s77f29B89
dlQ/eOiQvnffPj0ciegbNmzQFy1apM+eM0ef2tSU85zfyP2TjNz/RigUejEQ
CGzx+XwPisz/serq6uvEn5f61xAAAACAq6AtHFY62zsUTYtWRKPRV2UNQHuh
NQCpPYDd+j5zDsCpkwXVACRW/r8/Ivr/r1DeHNi/5/telJ9B3D63P1dP/2mR
+dM9/YdSPf1btmzRly7L7unPyvzpnv5f+v3+TlVVPcJn6usdb22c9IhSW1tb
6l8/AAAAAK4ykSmU9vbY+6OxaLfMF4XWAJh3AqRrAA6kagBkpil0DkBqxfO8
zrpyOXUQfB7DYdnn+Nvn+KV6+mXmlz39J8ye/sO2nv4VK1YYPf0zZszQpz4y
NZn5LXnffmffy8Fg8JjI/TO9qverTqfjlh/825hRE8rKSv3rBgAAAEAJidyu
tLS2yD6AcWL9oZA5AJ2WewDMtW/fPv3IkSNGv/JZSw1AIblyyGfR5JlvyT+P
kfQ9v9Lfn8t960sxs771dXlnn62n/5TI/MePG88XuW/WZfT0t+hr1qxJ9PTP
Mnv6M+7sE3k/kfnlnX0NfwyFQvFAILBc9an3OF3OvxhfVja6opKefgAAAABp
ES2ihMNt79KiWkeiBqDA+wAtswBlDcCzzz5rnGXKc01ZA3Dx0sVk3XM/M2g8
O3dd0Vr0AWTfoVwjHy/2bMVhuIcQz3jZ89eevr8vX0+/Wd8v98silp7+OXPm
6E22nv6cZ/2yp///isy/w+/3l3k93r+prKq83uVwKWUTOesHAAAAkG3zthaj
D0DTtB9Go9GXC58DkK4HkHcBJGoADidqAM6eLXAOwNBdnKGPrJWe42/J/BfT
Pf2neujpX7ZsWXZP/5ScPf26yPy/DgYCe3w+n9/tdv9jVXXVTU8/tUK593v3
lvpXCQAAAIAhQItG5bpF07S2gc4BMHsAdueqAbh4saA9gHznrb29r4IzeBGy
+1Xf62C/4aqu9Nz+3D39584le/pPmj39R4znQ66e/kceSd/ZN8WS/S09/X8I
BoInfX5/s1dV/9XpcLzzvh/+cNQDDzxQ6l8dAAAAAIaYtrZWJdbeLmsAvhuN
Rn9j9AAUvAeQngOwd+9e/fDhw/qJZA3A+QsX9EvxS/260y9Xhrf2VA/6LDwU
9xJY+fecLl/OyPxxS+Y/l8r8xp19R48mevq7uvSWllajp3/hwoWWnv5GS0+/
mfmnmD39fwoGQ//u9/tXqqo6xuVyfuD+B+6/xul0lvrXBQAAAIAhLhaNyj6A
d2iatjVa8ByA7D6A/fv368eee04/NcAagH7l6QIzd2lzNhl/KKzMO/vOZfT0
y8x/8ODBvD39Zn1/o+XOvvQsP6On//8FAoEWkfsrXG73J6qqqt7idDlK/esB
AAAAwDCydvUqJdYek/MAv6lFtV8WI//bagBOnEjNAZDZqeAMFo/3q36ANbTW
1Zyb0OdZlJft9f3pnv7TxuPaqO8Xj3FrT//yZcv1ec3zMnr6p+Tr6f+fQDC4
3+fzNXhV7/9yOBxvc7s9itfrLfWvBQAAAADDlJwDKNZbNU1bO9A5AGYvQKoG
4NgxowbgXB9qAHrK99Y71VisYq+4pQ7DyPzxdE+/zPyZPf379+fo6Z8+w3bO
n3nWn+zpfyUYDJ72+/2P+1T1Gx6P512V1VWjqO8HAAAAcDWI3K9EIhFFi0S+
Kl5/Se4BFD4HQKzORB3Anj17jJnnZg2AzFIDqQHob/5P/P1BsGcwmOYSsFIr
fa9f8pw/bvb0X8jq6T9y9IjR0y8f062tmT39TVl5P6O+X/b0vyAy/1pVVX/k
cro+VFZWdm11dXWpn/oAAAAARiAtkf9vEPl/WSwaLdocgGeeSdYAnDplZCqz
BsBWg00+LmzxfSt4Zc7vl/0pz9t6+k8kevoPHUr39G/cqC9atDjR0z9tmt5o
6+lvzMz8bzY0NPx3MBiM+P2+Go/H83eVlRU3vHDpJ8oN77ih1E93AAAAACNY
9769SjgclrUAX9Si0RdjIv+3D6gHILsGQGYrswag0F7+oToD4Er2txf1fQ/z
PYWszG/W9yd7+uVela2nf+tWfdmyZXpzc7Otpz99Z19GT39Dw28DwcBBv9/f
qKrql5xO5ztuv/1rysMPl5X6KQ4AAAAAKdFoVGmPtV+nadr8fHcB9Hc2QKdR
A/BMzhqAK5LxUu93ENT9D8UVvzzk9wBy7RFZ5/jl6uk/cuSI/uyz9p7+xx9/
XJ8xQ/b0T82Z+c3c39DQ8GooFDoXCASeUH2+bztdrveOHTt2dFnZhFI/pQEA
AAAgLy2qyRqAz4qXL8SSewAD6QUwawDk3WiyptpeA1DkjB63571S59CBfg1D
bRU6ozEzr/e3xiMet79u9peYn4+Z+eXek3z8mT39sr7/wIGDqZ7+tWvXWnr6
ZeZ/JDvzT05l/tdF5v+pP+DfqKrq/R6P5yNiXStWqZ/CAAAAANAn7bGYrAG4
RuT/mdFY9M32ovQB7Na7u7uNvHV1agB6zoh9zZRX8046VuErbl099PSb9f1m
T7+mafrGjRv1xYuTPf1NTenMP6Ux1xy/NxtCoV8EA8F2kfmdIut/qrq6+kbx
+Fa+8Y07Sv3UBQAAAIB+CbeFzRqAvxMvL5r3AQ7kTkBZA9DVZdYAHLfXAMi8
ZslxA86C8XjO13tdubJ+nDqCQvN40d+npbYgkfOtK26r75eZP19Pv9zP2rp1
q758+XJ93rx5+vTp01M9/VMsM/wnT7bd2fdyMBg84vf7pnu9nn921Dv+7NOf
/pTyox/9qNRPVwAAAAAYkKimKe0RbbSmaVOi0egbA68B6DT2APYlawBOJmsA
5PnsgPJ1D/k8frmXenTO9ku6+l/jH0/1i5g/17729Mt7KHbu3KmvXLky1dOf
qO9vzLq3z5L5XwsFgxf8Af9SVVW/63I63//www+NrqgoL/XTEwAAAACKSmR/
eR/g34iXZ8waANscwI7EnkD22/PUAHTIGoAu4w71544fFzntjDF7Xea3gjNk
L3sHPdXvF622n32Ewn52A/iZm5n/gtnTfzqzp/9A7p5+S31/VuaXPf2TJr0R
CoVe9Pv9W0Xmf8jj8Xxs4sQJ14k/U27/8m2lfkoCAAAAwBURDrcq27asHxXR
Imo0Gn3dNgewj5k/Vx+A7Ls+cuSokdfkee2AawCKlNuHbJ3/MF3yrN96zp/d
03821dN/9Ogx445Je0//klRPf7q+f0rW7H6jp7+h4VeBQKDL5/N5vV7PZx0O
x03+UECpr68v9dMQAAAAAK6KSCQi6wD+Sqxj1rsA0is74/c0J0Dm/927u4ya
bFmfLWu1ZZa7IncB9Ddvkv+vYJbv+/c/1dt/+XJW5jfr+3vr6Z82bVoq8zfm
7+n/fTAYfE5k/tmqqn7N6XTe8uC4saPKy8tK/bQDAAAAgKuuq6tT2bmtTYlG
ozVivWbN/h2ZMwHl632YEyD3APbu3Wv0ZsscZ9YADKwPoJ9/XuKa/YHOxyvl
vQTF3Kcxv47U/Md+9PTLx5HZ0z9//nyjp986xy/7nN/I/X8MhUJxf8D/lMj9
97o97r+oqq4aXVtXW+qnGgAAAACU1O9e+qPM/kosFrs1GtWeza4ByK79T9wV
0N7jHoCcx5ZZA1Cs+wBzZeNUzsz1/uM9/1vWQPYK8v93am6/JfebmV/29J/O
7Ok/eNDo6W9razN6+p944gmjpz9xZ5+Z+a09/Ync39DQ8EYwGPxZIBDYKdYE
j8fz8ZqamutVn6qMHz++1E8xAAAAABg0RL5Xdm7foWjR6MPRaPSV9lhmD0B7
9jyAXu4KNGsAZP22rQYgXngNQK48X0hGHcj7YvXxe563p/9Mqqdf1vcbPf3d
3Yme/k2yp3+xPnfOXH2a7Om3zfHLOb//N4FgcJ+qqgGXy/VPNTXVN9383ncq
9913X6mfUgAAAAAwaEW0iFjh94gc1plZA2Bm/3ZzDmCOewJy3QcoawD279+v
H3vumH6qyDUA9qzZ/2xa6nw8bJalj9+a+wvp6Z8+fbqtpz/HHD+Z+f8QCAZO
BgL+ZtWnft3pdLzzgQceGFVRWVHqpxAAAAAADAk7duxQYu3tSlTT7tM07eWs
OYCZdwBkzgbIUwMg67kPmTUAZ84atd+yBmDEZ/AhVneQr4bCOsPf1tNv1Pdn
9/TLPSGzp//xxx9P9vRPzcr7Zn1/MvP/KRQK/SQQCKxWVfWHDqfzg7V1NdfQ
0w8AAAAAhdGimhKNRW+JaFo4Gs0xB8DM/O3pHoCcdwRY5gOkagCOHTPqvmXf
t1kDMNAZeQPKs8nMWupcPRhXPM/r1relM7+9p1/W9xuZP1dP/7p0T//UqVNz
n/NPSff0i8z/ksj8bX6fr9Krqn9bV1//lmnTp5X6aQIAAAAAQ15M5P+2cESJ
RLTvapr2m+w5AJbZf6k9gHTtf7vlboD2zBqAQ4f04yeOG/nQqAHIcRdAn+r4
i5TZh1P2H+hMw56+F8b5vuWM38j8yTl+Rn3/uXRP//Hjifr+g4cO6vv2mT39
m4ye/jlz5uhNTek7+zJr+y31/f8jMv9+1adO8no9X3Q4HG//2lf+RSkr484+
AAAAACgmkdnkertYW6KxqG7bA7DkffNegOw+gfasfQG5ByD7veV5sFkDILNj
Zu4ceI4t3vsaaSt1P99ls48/vTeQr6ffnOMn6/uNnv79+42f+7Zt2/TlT1l6
+ht77el/NRgMnvH7/PNV1ftNp9P57jFjxowi8wMAAADAldPV2aG0hcNyD+AO
sX6RfR9g9n5Aujag3bI/0G7rFeja06UfPHjQuOtNnhfLDCnzZNHP4ZN3zg21
/vqrlvN7+b5Y835WT39yjt/JE33o6U/W90/Jf9Yve/r/w+/3r1NV9Udut/tD
1VXV19bX15f6KQAAAAAAI0YkElHCbeEbRf5fadQA5Mv/ve4JtNv6ALq7u40a
ANkffvbsudR9gIl74gvryU+fUxe+X9C3jzPwfYrC5x0U9rH78vHiyfn9l+M9
9PSfTvT0Hzd7+g8cSPX0r1u3Lqun37irrzFzlp+R+d8Umf/nwWBQ8wf8dV6v
9+9rampu8Lg9Sk1tTakf9gAAAAAwIiX7AG4X62c91gBkreyeALMPYHdXl5Ed
5dnx6eR9gLnmABT7vHvAewSlXkX8vOOWl5ln/WZP/7nnz6V6+mV9v8z8cn6D
3L+RPf2bNm3SlyxZos+dO1dvamrSG3Pc2Wft6Q+FGn4nMv8hn9831ePxfNnl
ct383TvvUiZQ3w8AAAAAJScyvxKNRq+PaJEnxEu9f3sA2cvcA9i7d59RN56o
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
AFJ1AJaZgPFe7s7Ld45fUF9AH+YKmv0J+TL/mYw5fgcPHtL37dtnfC9kT/+S
JUsSPf3TmvRGc36/Wd+f3dP/ajAYPOv3+Rf4/f5vicz/nokTykaVl08s9cMC
AAAAADAMibyutLa1vq8tHO4y6/fz5/7es39ra6veklzybeYegDkP4MxZ+70A
eWsB8t6vd4V6AzIyv6xVMDO/taf/ULKnX85J3Grr6Z9uu7Mvs7Y/mflfF5n/
P0Xe3+D1en/scrs+XFlZeW19fV2pHwYAAAAAgGGurbVNCUcich/gXpHXf51r
D8Da3x+xZP9wOGLL/Ub2b2kx+t7NJf/MmAdw4IBxZi5z9OnTZ4x5eTJnJ/J/
3FaD31t/QLH2AHJl/sw5frJ2Qc7x279/vzHbcOfOnfrKlSuNnv4ZM2ZkZX7r
WX8y88ue/v8OBAIxn89X73K6/qGiovzGUFBVJkzgrB8AAAAAcPWI3K60trTe
JLL6UzLPJ875M877c5z5t1nP/EXuN7O/zMg75Nqxw1jy7e0d7UaGlvPxZP18
YiZA9lzAeJ78b6vbLyD/W8/482X+XHP8ZP2C/PrWrFmrL1y4UJ81a5Zljl+j
ZY6fmfkTuV9k/t+JzH9YZP4mj8d9u8vluvlf7/i6Ul5RXuofNwAAAABghLrz
njuN+wBFlv+MWJfMGX65z/ytff5tljP/FpH7k9lfZP7t27fr27ZtN+69k2vH
zh1GLUF3d7d+6NAho5Zenq/L+nqzFuDSJXtG7/XsPtf9fJfts/6t7y81uz8j
88u+hOeOJzK/Mcdv717ja1y/fr2+aNEifc6cOXpTU1OO2v6snv7XgsHgeZH5
F7k97rtra2vfN3HixNGVlZWl/hEDAAAAAGCItIWVWFgbJfJ8vcj1rybyfq5a
f+uZv1i7LGf+Ru43s/82fevWrcbasmWLseTrreLfyjN1mbNl3n7uueP6yVOn
jH0AORcgsQ+Qng2Qb95fPMc8v9R8/z6c89vn+B20z/FbulSf29ysT5s2zTbD
z1bbb+npD4WC/+X3B7aoPnWc2+366MTyidcFAgHl7u/cXeofKwAAAAAAWYw+
gNbWd7a2tuyUGd8867fP92uz9fnL3J955r916zZ9SzL3b9682cjUcm3cuNF4
Kf+eWQsgs7fM4NaeAJnTL1zI2Afo47rUS+Z/zpr5xceXn4f8PJcvX27M8TMy
f2p2v6Wn33rOP2mS7On/pcj4nX6/3+1V1c9U11S/ddGiRcrYsWNL/WMEAAAA
AKBHItOb6zax/l3m/MR5f0aff3K2305Lj7/1zN/I/WJt2rRZZP5N+gaR+zds
2GDU069bt85Yci9Avo+Ojk5jnr51H8C4J+DMGWP+vlkTcFFk+kvGime8vGTL
+9a7+k6dSmZ+2c+fzPxyz0Hebyg/16eeflp/7LHH7HP8Umf8lp5+uRqMnv6X
ReY/6vf5Z3g8nq+4XK5bxnz/3lHjxz9c6h8dAAAAAAD9IrK+smdP96idu3ZW
inz+cmquf49n/tv0bVsT2X/z5vSZ/8aM3L927Vp9zZo1+urVq40lX0/sA7To
HR0dRjaXfQFy3r6cD2DuBcize3mGL3O9PM9//rxc543X5dvkn8m8n6rrT97V
Z/bzy9p+ec4vP7+nReZ//PHHbZnfnvvT5/yJOX5GT/9Fv8+3TFXV7zmcjlsf
euih0fX1jlL/qAAAAAAAGJBdLbvketuOnTueEDn/jUSPv73Pf4fs89+Wceaf
UetvZv+1yewvM/+qVauM+/NWrFhhZPGnnnraeF3uD8jZATKn79mzx6gJMPcC
ZF2APMOX+wFyZqDM+HKdOHHS+G/5djPvy9mC8p4BOWNAzi2Qn5Os7c91zp+r
tt/s6ReZ/0W/37/V6/U+7HS6/rqquvq6uro6pYJZfgAAAACAYWTrtq3K9u3b
PyDyfZs84zfr/O21/tnZv6czf2vul5l82bJl+tKlS/UlS5YYS74u/1z+e7nP
IOfx7d6925jHL/cD5H18ck9A1vEn1gHjbfLP5J5BNBYz7h2UH3Px4sV6c3Oz
Pn36dCPzT8mT+S2z+98Umf9XgUBgt6qqHpfL9bna2tqbZjc3K/d++9ul/nEA
AAAAAHBFrFm9WhFZXxGZ/pObt2x+Rub87SLzZ/X5G7k/0edvZv916xJn/mvW
yDP/NcaZ/4oVK5Pn/U/Zcr+8X+/JJ5/Un3jiCX3hwoX6ggULjCXfJv+e/Lfy
fcqPJ/cEWsx+hJYWYy9ik/j4cm9Bvq9HH3tMnzlzpj516lRLXX+jra5/8hQz
809O1vcbPf3H/H7/TI/H/VWR+W95aNz4URXlnPMDAAAAAEaG7Vu3KqvXrpF7
AJ8V2f6gzNrmXX65z/w32M78E7X+q4wzfVnnL8/8zdwvz+fN3C/z/vz5842+
fDmDf15zsz53rlxz9Tlz5hov5Vn+vHnz9Hniz5vFS/m2WbNmGef7U6c2GTP7
Uz38RsbPOOO33NknMv+rIvOf9/v8Szxez/fq6utufWDcuNGVVVWl/pYDAAAA
AFASW7ZuVJYsWaasW7f2s+vWr+vesHGDrcffyP7r19vq/c0+/3SPvzzzT2R/
mfvNM3/jvH/+glTub25O5PrZs2cb2V6e5ct8L+/kkxk/s3ffmu9zLfOM39LT
/1O/379ZVdUHnU7nx2rraq+rd9SX+lsMAAAAAMCgsHHTJmXF08vlHsDfrlmz
pkVk/NfXG5k/u8/fOt/PPPOXdfxLliy1n/mL7C/P/OVcPnmuL8/358yZkyP3
T03072f27Jvz+qyvm/89KdXT/4bI/D/3BwKaz+erd7lcn6qtrb1R13XlO9+5
s9TfVgAAAAAABp0nlixSVq9apYhc/wGR759cuWrVyzLvW+f7GWf+K7P7/Bcn
+/yfSJ75W2v9m5ubU2f+M2fOMmb0W8/7zdxv5Hkz46fWZNt/yz8PNYR0kfl/
7ff7n1F96mSPx/Mlkflv/ta3v6U8+NBDpf42AgAAAAAw6G3cuFFZumypIvL9
25cvX14t1gsy6yfO+3Od+YvcnzzzX7gw0edv5P7kmX+ivz9x5j8jeebf1CRz
f2J+X8adfGKJ1xsmJV4m8758eyhkZP6XReY/5vOps90e99dF5n/3gw8+MGrC
hPGl/rYBAAAAADAkyT2ApcuXXrN48eIvidUicv4rMu8nzvuXpeb7GWf+ybn+
WWf+c+Zaav1npGr9GxsTZ/6TJpuZP3uF0pn/9yLzn1K93oUi899dV1f3/srK
itHV1czxAwAAAACgGES2V+YvmK+IfP/OhQsXVC5YuOCkyPmvy7P+zPv8ZO7P
1eefqPU3z/wfsZ35m+f6mSsYMDL/Ga/Xu8jj8dzrcDg+OL5s/LVl4znnBwAA
AADgSlmwcKGyZMnSUY8+Ou+jc+bODc2dO/eMyPl/lHlfLuM+v4xa/8z5fvly
fzAY1AOBwJsi7/9W9fmOi8y/wOP23FNfX/+hisry62rrakr95QMAAAAAMKJM
njxJCTUER4s8/5GmpqbKadOaoiLj/3zGjBlvyLwvlzzvT+T+pqzcL/N+IGDk
fV3k/ddE3n9R5P1Ot9s91el03lFTU33rj8eOvaaysrLUXyoAAAAAACNeWdl4
5b77fqCoqnqzyPK3BYNBj8j2WxoaGk6L9ZJYvw81hP4UDAXfEH/+us/ne0X8
3V96vN5Lbo+70+lyPuZwOB6or6//tMj6N5dPnDiqvLy81F8WAAAAAADI4647
71T++cu3KyK/31hXV/cBkek/X1Nbe3d1Tc39tbW1ZdXV1ePEuqeqqurLVdVV
H6moqLh5zJgxoz1up/KXH/5oqT99AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAMAg9v8Bv3wcHA==
    "], {{0, 1024.}, {1024., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{72, 72}],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, 
    MetaInformation -> <|
     "Comments" -> {
       "Camera" -> "Main Camera", "cryptomatte/b608a45/conversion" -> 
        "uint32_to_float32", "cryptomatte/b608a45/hash" -> "MurmurHash3_32", 
        "cryptomatte/b608a45/manifest" -> "{\"File Plane\":\"c3aa3a9f\"}", 
        "cryptomatte/b608a45/name" -> "View Layer.CryptoObject", 
        "cycles.View Layer.render_time" -> "01:40.20", 
        "cycles.View Layer.samples" -> "900", 
        "cycles.View Layer.synchronization_time" -> "00:00.57", 
        "cycles.View Layer.total_time" -> "01:40.78", "Date" -> 
        "2021/09/14 21:12:48", "date:create" -> "2022-03-25T17:20:18+00:00", 
        "date:modify" -> "2022-03-25T17:20:18+00:00", "File" -> 
        "D:\\Workin\\blender\\3DIcons\\Final\\Release-version-draft\\files\\\
fav-file\\fav-file.blend", "Frame" -> "001", "RenderTime" -> "01:50.46", 
        "Scene" -> "Scene", "Time" -> "00:00:00:01"}|>],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{1024., 1024.},
  PlotRange->{{0, 1024.}, {0, 1024.}}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{
  3.894998557107541*^9, {3.8950042023863397`*^9, 3.895004246065776*^9}},
 CellTags->"DefaultContent",
 CellID->445097320,ExpressionUUID->"112bcd67-45c3-459c-be0d-17cde2402f68"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Description",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"LongDescription", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a short paragraph explaining your paclet. This is the first \
text that users will see when visiting the main landing page of your paclet.",
          "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLongDescription"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "567554eb-91dd-462c-a96d-aaa0b861f13a"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "LongDescription"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Basic Description", "LongDescription", "TemplateCellGroup"},
 CellID->433339604,ExpressionUUID->"59601d98-a422-4b6c-81b0-4a620cd99389"],

Cell["\<\
This paclet contains functions for modifying files, directories, and folders.\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8949985974863157`*^9, 3.8949986087252345`*^9}},
 CellTags->"DefaultContent",
 CellID->441612482,ExpressionUUID->"beec6562-c78f-4b5d-aa98-95870a2ffedc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Details", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Details may include a long description of the resource's contents, \
history, methodology or other relevant information. Give references here if \
they are directly relevant to the resource. The details will appear above the \
examples on the webpage for the resource.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDetails"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "aed2aba1-835b-4d20-bbd7-ef5cdf83d780"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Details"},
 DefaultNewCellStyle->"Notes",
 CellTags->{"Details", "TemplateCellGroup"},
 CellID->484110581,ExpressionUUID->"783fddb7-00f3-4c57-bcc5-c58a76c8f513"],

Cell["\<\
I think it helps to develop good code to look at how other people and \
developers defined things on the Wolfram Function Repository. For example, I \
learned that its a good idea to use ClearAll when you're defining a function \
by looking at code from other functions.\
\>", "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.895001677823831*^9, 3.8950017278829355`*^9}},
 CellID->324833681,ExpressionUUID->"f3da3c7d-3964-408a-9105-0decc730fac1"],

Cell["\<\
So far I have not written any of these functions but I am planning on adding \
a function to search for files by date. Ultrasearch requires you pay to \
filter by date.\
\>", "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.895001746177896*^9, 3.895001838090478*^9}},
 CellID->173104751,ExpressionUUID->"8b0eaac4-ca09-477a-b94a-5acf2903ab8c"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3QeYFFWi/30M67rufb373L27bnjvCmIgiIoBQUFFCSqskZyZGZicenJi
IgMMDDmNwKAo6qprDuiCigkjCoiKJAmiKGAABCTM/1RXT3V1dVWn6lA9/f08
5xmqq6tOne7qqv5xKnSbuMx7xp/eqlWrnLPFn3vGFvS02cYW3fsH8WBgRk5y
Ysa4hNsycscljrN1jTtDjJx3WqtWY8SANNwEAC3UqbUvUUJdIr2SgehzfjSI
9JsEAKES8ewUCyXSKxkAAMAPEc9OsVAivZIBAAD8EPHsFAsl0isZQMgdO3bs
s4O7p+58rt/6SW3eSfv9GyNFaf1OqngoRoqnxASRbiMA+Cri2SkWSqRXMoAQ
OnXq1Pr928s+vL/HhxPiP19Qv/P5J/e+/9qBjaKIgfqdz8V/vlA8JSYQk4mJ
I91eAPAu4tkpFkqkVzKAUBF5b9U363K3LL93Q33Vtide3Ld20+E9B349dPTE
cVHEgHgoRlZvf2LAhnoxmZiYiAjA+iKenWKhRHolAwiV9fu3525dPmj99Lm7
Vnx9ZP/B40e+O/bTl4e/2Xho145fvj984ujJUyePnvhVPCUmGLhhuphYzKJb
VXFxcRgaHJ6lAIh2Ec9OsVAivZIBhMSxY8fKPrx/wPr6ubteOn7yhAiHnx3a
9cz3H87b/fK0nc89sGf1+z9v3nvsx19PHj916tTJU6fm7l5x7/p6MYvuuYgL
FiwIQ5vDsxQA0S7i2SkWSqRXMoCQ+Ozg7u4fllVue2K31HP4y2sHPu2/bsot
H1clbVpUsOWhO9bX3fRx5dQdz3537Ec5H3599ICYWMzy+aHd7rUtX748DG0O
z1IARDu/cs6+1x7725/+2Mruv/+/3697bIFmpHq8h1nc56rPGW9Uj/grhuWR
Y+/sI8/uPlLMfnWHi8RfX5bb85rLf1nzjLqR7dv8Q91sUaeyLN0JQpEPf/nl
l549ez7//PPqkeKhGCmeEsNjxoypr683ucZFJcqbLIZN1mZE97V4bozgdXrA
Uup2Phv/+YIX93388/Ff1v284/Z1tdXb/71i3yefHdr15eE9a3/eVr/z+fQv
G2fufOGU3bETv764b238Zwum7nzWvTbyIQDr8DcfKjFJJDo5ZWmy0wtzqkUA
k3OanOLEGHWokx+6Jy7dDCYe/uOvf1ZGLqvOE5PpjlTnQ8/LlXOjaL/RosVA
765X3tXzOnXatFo+VI/3q351JmxoaPCrBn+X5Us+NJ94gUjpt37y9B3PbTq8
59ujPz6+990b11aI+Cey4qlmnx/aXbz1kREb54iRx0+eEGPExNN3PN9v3ST3
2siHAKwj4HyoDGuyk/rh2Dv7qGOYnB51U6WHfHjnTd3UfX1GI9X50OtyX19c
J1KiEiA1ixbzKqUl5cN169b93//9n/jr+ywBIx8iFrRZk/rU3vcO/Hroy8Pf
zNr14sjP5q4/+NUplZOnTk3f+UK/dZN3H91/7MSvYoyYWMzS5p1U99rIhwCs
I+j5UGQq5YCve6ZSUpyP+VAkOpHrNIeDdUd6qFn3WXU/p3oWUacIn2JYnUKt
lg81x4jlGZctW/ZXu3379okQeO6558oTKLOL8eJZo8wmapanFzMqGVK3HvfF
qWeXDxPL0zz++OPir6ZONfd86LlyTT1G44Hw+P0bo147sPHYyeNfHt4j5cPP
5647+NWJkyeVfHj0xK8zdr5w5/qp23/57qg9H4qJX/th4+/fGOleG/kQgHUE
nA/Vx5c1ZxIqvXxiYuUQraYGzVwirWnGKOFNXpaUT1wDoWakkgC9LtfzIXIl
FipB0YL5UDNenrF3795KRlq4cKE8rDmmLAcq9y47MUapTdSsBDPdetwXJ2ZX
ZhEjX331VXkaJbaJGXV7O43yoaZy3bYZjQfCRsmH+389+Nz3H7V/N/u5fR8d
OnFEyYfrD+7I2bxs2MbZv548ftKeG4OSDyv0+Dgv+RCAL/zNh0qE0+18UxJX
sPoP1UVUrg6NmpH+9h8q/ZDypTHql6BEXGU4KvKh0YFazZFopUtQmV7Eqnbt
2il5zOjQsFKPZnG63ZKaaUTlYhHu+U3dESoHPPfKddvmY5uBkFKOL4vUt/nw
N+lfNo79fH79judePbDhvR83/2vv26M/mzds48z7vl6pJEaOLwOICgH3HxqN
VK78VdKXemJ/zz9UF7lC5aRBzUglAfq1XOV0RN1eTSUGR0U+1MyoPuDr3ncn
JlauX5aHNZTa3OvRLE63704zjdGpj0b9h+rKddvmuc1AeCjXp4jgd+j4kbd+
/GLiV08Wb32kevu/RSne+vC9G6bfuaGuYvvjXx89cMx+F0SuTwEQFYKeDzXH
atXXEYsB9V1xfMmHYhb3i0R0R3q4ftnzcsWzrZrvgaPESPfwGbZ8qMlLAeRD
uUNPfexV99iuktmMDs4a1RPmfKjbNg4owwqU+9vI5xYK23/57tnvP5y649ny
bY/N3/3y/Xtez978wN0bpi3es2rHL98fPH4kWPe3UR9Q9v3gsr9LARCzgp4P
T7keCFbfqFB9dFg3H2r67kQwkxOaeowS2zQjNfc/9H25p+x9nnI+dL/wWb7c
xugcy+DmwyZ7Z53mnoRj7JRhX/Kh5mCu+jw9NeW4sFF4M6rHl+wXrHzooW1h
uxYbMKK+P7bzohRXGw/uqtz2+AVr0p7a+/76gzuCeH9sORb6FQ4DWAqA2BRY
hxglRPlQPjlQ3XumvjJXkw+VDjQPmUquUM51YjgzM1NZlvqiElGzuraSkhJ5
et163A9nq2dXX59iPh8atc3DeCBs1L+vZ5QPj5w4tvnwNw/vfWvL4W+n7XjW
w+/rBZDc/A2HgS0FQAyKeHaKheLXGlHfUkZz2xZ1mpJzVCvV/W3UmUo5aVC5
yYyYRu4wVHpBNcdn1ZeKKEvRrUf3dEdldrnNQcyHRm3zMB4Im/X7t+duXT5o
/fS5u1Z8fWS/cqBZ7efjv6z9eZs9HE4TE4tZdKvi/EMA1hHx7BQLJdIrGUCo
iPi36pt1uVuW37uhvmrbEy/uW7vp8J4Dvx46euK4KGJg0+Gvxcjq7U8M2FAv
JhMTi1l0qyIfArCOiGenWCiRXskAQki6z+H+7WUf3t/jwwnxXyyo3/n8k3vf
f+3ARlHEQP3O5+K/WCieEhOIyYzCYRP5EICVRDw7xUKJ9EoGEHLHjh377ODu
up3P9ls/uc2a1N+/MUoUMSAeipHiKd1zDgHAmiKenWKhRHolAwAA+CHi2SkW
SqRXMgAAgB8inp1ioUR6JQMAAPgh4tkpFkqkVzIAAIAfIp6dYqFEeiUDAAD4
IeLZKRZKpFcygJD4a9H7Lay0anE6tiCRfi8RW9q2bRvpJrRwvMNASxXxOEc+
9ErEqtYtAvkQYdamTZtIN6GF4x0GWqqIxznyoVfkQyAw//jHPyLdhBaOdxho
qSIe58iHXpEPgcD87W9/i3QTWjjeYaClinicIx96RT4EAkN6CTXeYaClinic
Ix96RT4EAkN6CTXeYaClinicIx96RT4EAkN6CTXeYaClinicIx96RT4EAkN6
CTXeYaClinicIx96RT4EAkN6CTXeYaClCnFam3VOq1bnDJIHOp2bRD4MRJDy
Ye7KpqaVufLAtob+wajSTyHIh2Me++GHx8YEu1ZrafGvUbzAtbXXhKTqv/71
ryGpN4RC+G6Ewl/+8pdINwFASAQ9DSrO6vWk61NWzofu+2QL7aUDyodSGlS4
xkElH4Y7KAacD8XK0AYknVFWJmW8Zr58riz08fOfv1tTCF9sQOklsnuD8K96
U9vSeeedF8SmALCOYOdDoxBIPgxcoPnQKPtFXz50/waLpnh4Te1adQeg5qE+
C338/GehfBhQeiEf+uHPf/5zEJsCwDpCnA+VMeqnnjz37/LCQ5IYA3obvHwj
OHt/XMatrR0jfdf/IH/dN0+k2tVe43ja3A4/SPnQNRbmNmxTuhftR51bt+7f
PEqZUTWlMqvrPGHKh9qvMOWhejVp323VPKrJxFThTZY63/fOUS6fIsdnR3kd
zg+Wnx9F7aRhjtKetyb3jUJ5Vu/dMOdPf/qT/zN5aL+nFirv99raWp3plRF6
a0Vv3lbediAG613vQ+JxWzCVDwN6hwFEgfDnwz92btWq8yzp2STbWX+3/cny
+VDaR6t2s827Uvs+WL3PVwKLegp5UFRhIiGGJB+69R8qpydKOdEx2h4HXSYJ
JBYqzJx/qAlJqhXiTFrad1v53rum9rG1jnHmVoXZhqtGOj8u6q9rl9yojU8+
fhSVmiPVw+ppa9LbKNTpS/fdCNwf//hH/2fynA/1W6gd1pve/kFUrdXmFWQw
r9cdiO56N/iQeNoWTH1UAnqHAUSBYOdDJ9fLUow6EoPfhRjQ26A+PUxznpjm
y0K350p3WNNnEvhXnfnzD10vS9HNh+phJSBqQqbZ49Gmrk9xSUm+vduqfx+r
dXQbOqNleEjf1u5fvrrNNhrvYWIPH8UIHqH2cWtS53jP70bg/ud//ieg9nvs
P/SyvjyMD7hO3R2IPx8ST9uCqW0ioHcYQBQIe/+hS4YMxSHmgN4Gz98ImkM3
Hr7BNRO4fz8GIiz9hy55ssnwBEXHZIF1I5q7flmb+nx4t+VJ5aNo8noMf6+a
1/5D9bPukamVuY9iBI4ue+9/MwyNRu9G4P7whz8Eu/1G68vrqnHMoPfyjeb1
vAPx60PiYVtQ9Wr6L6B3GEAUiEQ+DO2FKgG9DX71GATQf2hKuPKhe9+gUYdh
gB2JJu9vo3zDqd5WL++2fW2NeUzpLRkT7pMP9Q+TuhxuDbhL0OtH0WhMqPm+
NXl+Nghh/txzz/V/Jrc+X+cIX1ZBK8NX5PLITN+je3Xe38MQbQsBvcMAokDY
86Hq/MPoyIf2/8a7n8/jPR+qJzYl3Ocfes+B0pUsAXQhmr3/oRQNH3tsre6X
qcG7PUY62Uo1RSTOydNcsKz+PLm2yeuny8+PonPxkb4ix/Nqcu0x03k3Avdf
//VfAcyls8bUp3rqtVA77C0f6p9n6DKv13fArw+Jh23B1P8gAnuHAVhf+POh
yyHmaLg+pZX6SI/Of/89D5s/vBy6fNh8xbIj6qkOMTuvT9Gcf6h7Q8Vw5UOd
W8N4fbc1X8lh7klr5nJY0e3wX+1j7h8Sxxy+X79sfHpD2F+z563JfTW59n3p
vRsBO+ecc7xPpMfl4K5LVDRq4TWqq5o9HI9WZtW9Tlk9bytvOxDD/xcYrHuj
bcFUPgz4HQZgcaHrx4tUifQ7Gnz8vl7LFf6Dv1YW/Hfj7LPPDmZ1PrYw/F22
kRPsdxiAVUQ8zpEPvSIftlzkQ7XgvxtnnXVWMKvzqYU+3QC9xQj2OwzAKiIe
58iHXpEPWy7yoVoU50OD49EtH/kQaKkiHufIh16RD4HA/O///m+km9DC8Q4D
LVXE4xz50CvyIQAACKeIxznyoVfkQwAAEE4Rj3PkQ6/IhwAAIJwiHufIh16R
DwEAQDhFPM6RD70iHwIAgHDqiGgQ6WQXHJF+FwEAgE8iHRkAAAAAAAAAAAiH
nj17RroJiAxWPRBxbIYArIm9U8xi1QMRx2YIwJrYO8UsVj0QcWyGAKyJvVPM
YtUDEcdmCMCa2DvFLFY9EHFshgCsib1TzGLVm9Am0g1AC8FmCMCaLLJ3Or9Z
D7vzDWiejXSro5tFVn34te/Q4ar+Y/583WCdcr29uIwc5CzdBnW8dVTna7ra
qyEiIghidjMEYHFW2DuJpNe9e/dbb73tpptuyszMEqVXr9633Xb7bXZifN++
t/bu3btHjxsyMjJFueGGG8XDrl27ERHNsMKqD79L2rUfUPVwu4X7W5V/dZpL
2eEYmLBdKmXb7GWrVEq3nFa6+bSSzacVf/mP+j33TlvRHBEBs2JzMwRgfVbY
O4mYd/vt/Xr37iMSYHp6hkiAPXve3KdPX3uRiKduvvmW6667Pi0tQ5Tu3XuI
hyJDkg/NsMKqD7+LrurRbt7eVrZPTiv89LTCDa0KNpzmKOtFOT1/3WlS+eS0
PKmcnvvx6blrHSXno9NzPmyV8e4/pu3q2HdkpF8HWojY3AwBWJ8V9k4i5t12
2+1yPszMzMrKyhatkmNhbzsRBUVivO6668Sz2dm266+/XjwUyIdmWGHVNwvf
sdq/d+zWquRLkQyVTHianAmlQPixKKfnaTLhR2fkfHi67cMzbB+cYXv/jOz3
Ty/Y+OeuA8LWYLRsVtoMAcDJr73TLb7xtw1y/2GfPn1FY+x5sI8IhHLnoT0i
Sg9FGuzevYccC2+88Sb7wC3kQzN8WfVt27YdPio+p3BCpq0ow1aYnl2Qlp2f
lpWXmpmbnJGbnJ6TlGZLTMsen5o1PjlrXHJmQlJGfGJ6/Pi0sePSxiakjolP
HhOfNDpOVTQP45LExHffO+TCCy8Mw0sW/n5pt9OKvzituZ/wdHtX4elKLLQH
wtNFIJQy4QetMt9vlfZuq/R3T88WyfA9qWS9e2b+hj93vTc8rUWLRz4EYE3+
5sO/ehNAPhSSk1PGj08UZdy48QkJ48RfuYhhucTHJ4gydmycKHFx8eKvGBnA
glqWIXUrHrD1CHBmX1b9wEGDlz/+zEOPPfvAI08tXf7vJcseu+/+RxY2Lp+/
+ME5DffPXtA4Y96i+jkNdTMXTKmfN2na7JopM6omTa+omTqhakppeW3xhJqC
0qr84goPJa+ovLZu5uChwwJ8GX76e8dupxV9JgfC03LXnib1Ezozob2r8IMz
bB+cbntflNaVH9+xaNMVdet/a3vv9Mw1Z2SuOTPznTPz1pEPESzkQ8Ckd9dt
o2jKFX7SfWMtkg9TUlITE5NEkVOiKCL+ySFQlDFjRChMkAfkYRER3fKhCEtq
XoOTqXBlDSHPh4OHDH30388vffjJxoceX/zAvxqWPrxgyUPzFy0T4XDW/CXT
5y6aNrth6sz5k+vn1k6dU1M3s1qEw4nTJlTXlVVOKqmoLSqrLiipFAnQQ8kp
KJs8bdbQ4SMCfBl++nvHrqcXfCplwlx7JrSJWGgPhNnvy4eP5U5CUc7Kfu/p
dfubmpq27z96zdR1rVLePDPjLVF+k/vxn6+9JzytRYtHPgRMEnFo74/HrFzk
zBbOJbbyh8XzodJ/KHchigSYk5NbU1OblJScmJgsBrKzbSIZlpVNKC2dYI+I
uvlQFZbsabFuiIdlkg+9r/pLO3Uan5TW+NATjQ8+ft/9jy5sfHj+4gfnNjww
e+HSGfOW1M+5b9qsBVNmzJtUP2di3ayaKTOq5c7D6imlIh+W+5QP84srRo6O
79TpsgBfhp9EPjwjf4PcSdgcCKVMeKY9E56ZtUYqmWvOyHjnHNuan4+caLL7
58JPWyW+fmbaG79Jf+M3OR+dd+3d4WktWjzyIWAS+TAW8qFyWHn06DGVldXL
lz+SlpYuihioqKgaNmz4kiWNixYtGTFi5NixcfHxCa51uIUl9QhV56IUGnvY
HnB53Fo1yiBxaWpwG+2+qOYxejU7a2uuzH2MQZNU9dtCnQ9lw0fHL3nwscXL
/tWw5OEFi+R82Cjy4XSRD2cunDJ93qRpIh/OrJksHVwulw8uS/lwosiH+R7z
oUiPQ4aNvuCCtgG+Bv9J+TBvnbqfUARCx4FjUTLetpe3zkx/6zcZb1W+sGP/
4eMvbtzfuvTdVsmv/ybVXrI/OK8L+RDBQT4ETCIftux8mJSUrD7hUD7VUD7K
LIaVI8vyQWeRHu1nIXrLh84xPWx16vQmBzCX6Z2jRSjTyVy6NdgDnGPiHkOG
9NAdo1ezGKfp2nQfo98kVf1yfAxHPjz//PNHjRln7z9cPk/OhwsaZ8xdVD/7
vqmzFky258OaKTOrpXxYXz5R5MPJpZW1xeUTC0U+tJ9h6F5yC5VweEGALyAg
Uj7MWXuGvZPwTL1YeGb6m1I/oaOs/n3GG2enr7Ynw9d+k/LaWSmvnpX17nld
7gpg0SNGhOkYOqII+RAwiXzYsvNhYmKyHA7T0tJTU9Pi4uJFOBQDcj5MSUkV
z4p8KCYTpfksxHjXOjzkQ92Rmu5FZVg/IHqrwZc2KDUHa8aQH19WiBQ3ckxC
cz68f5YjHzZMnbnA3n8425EPa+vLa6aWiXwoXZwysbBU5EP9/sPC0qpBw0a1
bRu+nkPZ/114Zausj1ulvXO6HAilTPjmb6TiCIS/SV3t6Cd0ZMJXf5P86lkp
q85KFmWlVDLWnNflzgAWTT6EO/IhYBL5sKXnwyQRBUXkk48gDx48RD6+LCKi
CIfy8eWhQ4fJzw4fPkLkw7Fj41zr0I1Y2oPHqsO1BoefDQ4xG9TgtRvQqGbH
eNXUmjG6M2rqD18+FNq0aTNiTML8RQ/OWbhUnQ8n18+rnSpduezIh9V1Ih+W
OPJhlXv/YW6hFA4HDxsdnnva3HztlQl39i0ePaA2ccTkxBGlSYnDJr/crfQ/
52S80SrlzTM0mTDltdOSXm2VuMqeCV+VMmGSPRMm/+espP/8NumV3ya+8tv0
t8iHCBbyIWAS+bBl50P5UHJcXEJxcWlRUYlIgBkZmSITygedxUBaWvqIESPF
U4WFRWJg9OgxIiK61qENS1Ki0z+S7Ln/UI/3Gozq8Vyzh+k9d3761myPAvhi
EhFx5OiEudKdbZbKFy/XzZAvXp4tX5xSOdGeDysnl1RIN7eR8mGRNh8WlFQO
Cks4HNLnhkfKUj9pqN69rO7go/XHH595/PHZhx6d/fXyeZ8sX/bckkfTpjz7
h8xXT0t5XT5w/JuUVWelrOo6+YM+M9f+d8arp497RcqEif+RMqEo41+2lxVn
p75xXpc7AmgP+RDuyIcxJUT3EI5xEc+HK1asIB+GNB/KdzgU2U8UERRHjRo1
dOgw+VDy0KFDxUgxMGzYcFFEOPSaD13OzVM9oxpvcP6hLv0aXE5F1J5tqDPG
nTPDuo/RnVE90t7DGNZ82Fo+0Dw6wX7+4eJpsxZOlfNh3Wz54pTK2nrHzW3s
Nz8sLKlyC4dVQ0eOCfVh5T7XXf1Cbfbef007srzm0LzsA9NSvpuS9G1t0jcT
U76emLanNuO7OtsP8yr2PLTgnQeWD6p89rdJK09PXPnb5JUVz2797uCv+w8d
f3vrTx3L3jo9foUIhFImFH/HvXT2uBelkvL6eVcHMx9O8Y25twQWRT6MKaH7
Do1lrtHro4Z0We2Tm8MUDmXkwxB9tuV72owdGzdr1pyZM2eLZFhcXLpkSaN8
wqEYKC6WOhXlZDhq1GhR9PKh0SFi58Fh9TW/jrGOuKWa3ePhZderhp3jm1Ob
+xj3mp1jVBHWfeG6TVLXH+7+Q8WIUQnT5y6eOnNh3fR5k6fNnTh1VvXk6VW1
9fabH04prayVL14uVF287LggZUTIL0iJ++ctex6qPfLghJ+mj9s3acx3E8fu
rYnfU52wpzpxd1XyroqUnRWpX5WLkr6jPPPbmVXfPNRQPe2JP2WuKntm25Hj
Tb+ebDp2sunXU01rdx7qWPrGGXEvSJkwQfx9Qfqb8Pzvkl/9y9X/DKBhHvKh
1+2XfNhSkQ9jSljyoefeDi99ISEWkqWroteuJ2vSG9bYh9c0pqc3rg5XOPQc
EcmHpvNhvIh8IhzOmDFz0KDBhYVFixYtkW+aLQbEw2HDhsvJcJSdCIoBLAgK
M19MIuMNGxVfP7thipQP59TW2fPhJHs+rJpSWiFdvGy/+WFVmC9ISR1427cP
Vh2cm3Jg0oh9k0Z/Xxu3pyrum+pxX1dJ4fCr0nE7ylJEMtw+IWPbhKxtpVlb
SjK3VxV8tWDmK0+s+v7gr4eON/18rOknexHDb2356eKCV08b/czv4p8/O/65
s+Oe+13cc+ckrvzLVf0DaFsA+bCDXbDzYe7Kpm0Nvr4CvyY2V6F4RvC0NKN5
g97I8CEfxhTT36HGN/aVnon2O/oGyBm9Nr9YXfPiRvesGJZw6CEixkg+DNG5
E/KNa0QZOXKUfPnJiBEjlQ5DkQzFsBIOxTSikA9NMvnFJCLi8FHxU2cuqJ06
e6LIh9LB5WmOX9arsF+c0nzzw+YLUkaF+pzD8Xf1/rqx9PDcxAOThsvhcO/E
eDkc7ihP2lmesnvhlJ0zKrYWpWwtTNtSkrWlNGdzac6XxTlbJhR80zD7+4/W
7j9yav+Rpn2/2MuRpgNHm/714d7/y3r59JFP/y7umd+NFeXp341/JTz58Nxz
z33jjTe2bds2YMAAj/lQpKOVuX40xJr5sH/DNq8vg3yI6BaMfPjAAzp32JDu
caE3PiY4o9eaxvRFHykZafWi0OZD30tk8+F1bkKRD0Nn3Ljxcj4URT7nUE6G
6gPKSjKUz1EkH5pkftXbexHjJks3x54lX5xiz4eTS+WLU6R8WKHcBDvU4bDn
tVeun237dUHSD5OG7Z806vvasd9Ux31TM25PtUiGSTsrU7eWJB7c+sXhPbt+
/Pj9b558dGtd9aainC9L8jYV528qyvuitPCrBXO/3fzVt780fXO4ac+hpm8O
SQN7f2m6/509/3/Gi2eO/Pfvxjx1zugnzxm34i9X9Qughf7mw4ULF26zi418
6MuCyIeIbkHJh3V1Oqetq058cr3IcYjjjCTV+U4Gzzaf0OQ2pV9zubXX5Xwr
Rz2u9wPx8FsSPp1DpUSvjc/UVj+zS8lImocxmw81ETFE/Yehc8cdd8rXL8fF
xWuColLUWVEM9OsXnd8HlhGUVX/BBW1FRKydOrt6ssiHUv+h6uLl6sKSqoKS
KhEO27YN+dXKc1KHnFqS8dPkIQcmj9xXO+a7iXHf1kjnHH5dlbyrMnVHRfrG
vHGHvt1zoqnp+KlTx345fOTA/m9WvPh5SeHnxYWfFxV+VigGinc89sSuH47v
PNgklZ+bvvpZ+rv7UNOSt/b8Nfm5s0Y8fs6oJ36f8OJfrrw9gBZ6zYeZmZnn
nnuuPBwXFyeHw7q6ulZeji8r+dAek3Ibttl/E1AdGeUjt80Hb5U0pY5VLhFL
NX2Danx/R9WeDxA7F65bv0sjVVO6zqoe5dKuABqpWqLSBM3CIscie2CER1Dy
oa2H7o0s3O99obqEUeeHITTPrnC7MNIoH3qeS9Na9xu+Gf7MmcFvSfiRD+k/
NMqHSkTU7YuweD5E+AVr1bdp02bYqLEVE6dW1k4rr5EuXi6WfnlZyod5RRVD
h48WEwRlQR707d5l04ykX+qH/zB5+PcTR+6tGbN3Yvye6vE7yxN3VabsqEjb
Wp7xSc74g3t2nzh16lfh+PHjJ04cO3Lk87q6jQVFGwtLRPk0v+iLmslffbpl
68GmrT82bflBKpvtZetPTYve3POncU/9dvi//ivu+VDkQ5EDRRp8/vnnRUTs
0KGDHA7FQ3n79TkfqiOQI/xIgcmRlfrn5nrPh6rp5bDleOCsUozVSYju3ZhG
+bDJpX5n9c5K1W1QvZTAGumyRP+7W0OLPXBMCVI+dLnzRfOwbj406AD0dIc3
H2f3MKxtrfGYgH+lwoVLPnQ5/zBMlzBHRT70gHwIjSCu+osuujg9K9/+48v2
mx/aL04pLqtJyci56OKLg7UUD4qG9Glakrq/Vuo8/K5m9HcT47+tGfd1tf20
w4q0r8qlq1E+tiX+/PXuY8eOnWpqEilRJMRjR49unDN/fV7xhoIyqeSXbSwo
2/z4c5sOnPrih6bP9zvKRnv5/EDTxOe3nZfw5FkjnvpL59sCaKTnfDhgwAAl
E37yySdiQPxVuhP96D/U7a/rr5neQz7UTK87XjcgeliQv/W7T6N5gX410mhi
S2APHFOClQ/9HPD9Wd9n9zCsabDRMWvNPN5/pcKI4fXLzqwYksL1KWipgrjq
L7mkXXp2gZQPq+X+wxqRD4vKalIzci9p1y5YSzFyabuLn8obdGz68B+mjNg/
adTe6jF7axJ2V47bXZVsv5VNxrayzK1ltrW2lJ927Xjv/qVfrFz1zaYvjx49
erKpaf2sBZ/klq3LL5dKXvm6nNKNMxo+37Jvw4Gm9fua1n/ftM5ePvlO+rt+
f1PpE5t6Tfngyl4DA2in1+PLcheiQr5yORj50Khbz5fpXfv9nIzOA9QcIvaa
D3VTnIc2BNBI3eBqjaPL7IFjTPDyoaPbUNWRaM18aDy7do7Ab9fmEr02v1jt
uP9hyG9u4x4RjSYjHyK6BDkfZuVXSTfHnlJqz4eFZVVhy4fXdGr/We2oQ3XD
pDMPJ42Rr1neWWE/slyevqUsY3Np1ubS3A+yUn/cuePl5JSXk9P+U1S2atLU
tQ8/vqao6uOcik9yKz/OrRJlra18XdmUjR9s3fhL06c/NW34sWm9vayzl/U/
NW39tWnSfY+1veiSANrpy/UpSkQcMGCAevu1WP+hZ/7W76HxRtP41UhLX9XC
HjimBDEfNne4+ZsAfU96UvZ0DpnKh0qM1V2687W5ncPo5/mHkShewyH5EFEn
2P2H+ZVyPqyoLbL/sl5hWXVKRk4Y8mH3Kzrsnz7mx+bOw29r4ndXjt9dmbKz
Im17ecbWsuwtpTmfF+d+mJXx086dHxQUf5xbvCYjf+X4rFWp+Wuyyj7Kqfoo
p/qjnBp7qf6sZGrFqPFXXHtt1+49NeXa7j179OzVsWPHwNrp4/XLpXaa7ddE
PnQ5FdH1/EPnSXz6p/C5nrqnHu+Rcqca3frtVarrdzu30DHe4/mH/jTSKAf6
ckedkGMPHFOCmg81v78V9HzoPOSrd3G0h2F1azVHix2TaY4lG/9KRRTkw738
vh5anKD3H1bWSj+e4rx42X7+YRjy4Q2Xtzs2e+y+2uH2zkPpnjZfO44sp2+b
kLWlzPZFce6m4oIPMjN/lPLhhHX55Z/kSR2GH+ZUf5hT82HOxA9yat/NrhHl
A1vtFyUzcm+7OxTtDNnvp3jtguvverWw6qnm47EGlwCL6TV1eji8bHDBsbZ+
e4UNK/UmdanU2/XLvjfSvbPR0zHyMGMPHFP4/eVQiHg+9FrIh4guoeg/LKuS
b25TLfUfloap/7DHZZccrh9xYPKovTVy5+G43ZUp28tTtk/I3FqWvblUhMP8
z4sK38vMFvlwTXM4/EhKhrXv2Sa9ky3C4ZQ1otjqxN8NhTNtfe8JRTv5/WW4
Yw8MmEQ+JB8iuILffyj9uN7kkvLaQumX9SpFRAxPPux26cW7qoYcmCzd8/Cb
moSvq5J2VaZsK0/bNiF7S1nOFwW2z/JyP80rfDsp/ccdIh9Wrs2p+jBH6i18
zzZ5TXbdO9lT38qe9lbWtLey69+21b9rq0+8OZCfV/bKKB8ilrEHBkwiH8ZC
Pjz//NY9etxwww03Nj/UEs+KIiaDeUHPhxUTp5ZVTS4un9icD6tT0sORDzu3
u/At250/TpF+MGVP9fgd5Yk7K1K3lqVvLcveVGzb+dD9P6xf/8PGjZsefuzn
Pd+8k1tpD4cT12RPeVskw6z6N7Kmv5414/VMqbxpm/VSSu2AbiE5vkM+hDtL
7YGBaEQ+bNn5sE+fvgMHDurXr39OTm5ubt7dd98zePCQQYMGiyLGiyLG3Hbb
beJZUW6/vd8999xrkZZHr5Dkw0pnPiwoqQpPPrzkgjb3jeh1aFrC3okJe6oS
d1Um7yhPky5bLs7a/djDRw8ePN7UdKKp6egvvxw9fPjN7Mr3bbUiHL6VNc2e
DGe+ljlrVebslRlzVmbOedO24MEx5d0u7RyKdpIP4Y79GGAS+bBl58MhQ4aK
yCcSYHZ2js2Wc8cddw6wu/feAWK8KHfeeWfv3n2ys22i9O3bVzy8666QXEQQ
O4KfD+0/rlc8YWJhaXVBsciHleHJh8KYG6/+rjZu78Tx9oPL0j0PN5dmfVaY
+fPOr46ftP9giv0nU44dOfJGzsQ12ZPfyJyyOmv6yozpqzLn/Cdz3oq0OS+l
zXklY95q26IpAzND1EjyIdxZZA8MRC/yYcvOh4MHD5HzYW5unij//OcdSjK8
++57RBFjevXqnZOTm5eX36dPH/FQRMTzOdJsQnDzYVpWfnn11NKKSSX2m9vk
F1eEMx9e2f6iF1Pu+mlKyu6q5B0VqdsnZG4pzV5XnHto797jJ07+2uzYkaNv
Fk9/K6tOhMPXMmetzBSZcP6KjAUvpM1/Mb3h5YxFTyXP6n/NzSFqJPkQ7iyy
BwaiF/nQCvkwdNfmy/2H/fr1F8HvjjukvkH3fNi3b9/bb7+9X79+4g/50Lyg
58OK6rpS+81tCuz5UJSUdFt48qFgu637zsqEr6tTd1SkbynL3FyW81F22o7V
q080OfoPTzY17fnsy/+k1azOrF+VMeOV9Fkvp4tYuPCFtPueS1v0XNriFzOW
ThqYH7oWkg/hjnwImCSnL4q6XOEn3TfW33xo7t6ehrKzbRkZmaKkpWWIIgbS
0zPk4bS0dLmkpqaJkpKSKv8VEwSwoCgU+K8OeRb848vNN8eW8mGRnA/D1H8o
tL/wgsfH3bO3JkM+uLypJGdDQe7qwqKvPvjo+IkTJ5tO7Vy/8eWy6SvTJr+e
OVMKhxlSn+Fz6YueTVvydGrjM2n3L0+Y161Tl9C1kHwId+RDANZkmXyYk5mZ
JUfE5qCYLodAERGTk0UoTJMH5GFRxDSudfj7696hyl3e+LvcqMiHl6Rm5NrP
P5xkvz6lSr6/TVJatoiOwVqKV10vbfdK2rBdlVlby2xflOR8WlTwXlbOisy8
F4qrni+d9O/k4peSKl7Pks45fCl9rgiHz6Q2PJmy+Km0+59Oe+jBcQ39uvQN
afPIh3BHPgRgTZbJhzZ1OBTxr6ioePLkuqwsW1ZWthgoLCwSybCqqrqyslqO
iG79h645yp4Wtb/l6GH68GmB+VC48sqrhw4fO3jIyEHNZejwMWJkEBfhix6X
dXwpZdTOivzNpQWfFhZ+WlDyfnbx66kFr6aUrEqtfD2zblXGjP9kznspfeHz
aYueTF38ZOoDT6c/2piw8O7r7gh128iHcEc+BGBNFsmHIgfKyVCkPvE3MTF5
4sTa5csfkW9oIwZqamoTEsYtWbJ08eLGcePGy92JrnW45Sj3XzJXfunR/nPj
rr/8qIwyDGNKHfYp7LUPsc/kmEOvhkCXq1qWLSryoXV0vbTDQ2OHbizI2T5h
wqcFZevyKz7Orf5A+p2UqauzZqzMnLMiff4L6fc9k9b4bMbyZzIemzVyer9r
+4WhYeRDuGupmyGAaGedfCiSof1osuNUw+TkFOXkQ/FQJEb5zMOkpGTxlBgW
413rcO9nU8b0sNWpg6KczFymd44WeU0vjkkxrjkHDhnSw5HgNElQW0OAy1Ut
S46P5EP/tGvbNrVXr8fj478srtpUXLsur/Z92+S3sqZJ1yxnzHs5874VWQ88
n7F8zsj65D6JV3e8JjytIh/CXQveDAFENcvkw2w5H8odhiIHZmZmiQE5ImZn
52RkZIpMKCYTxf98qDtS072oDOsGRK+V+16D1+V6qDmYWvwX05Xt2g/vfuOU
e4Y+OjZrVVrVmpyZb+cseCFt9tIxkyvuyRva495rw5UMZeRDuGvxmyGAKGWd
fCiioIiF8hHkMWPGyseXbTbpdtkPP/yoeBgfnyA/m5AwTu5LdK1DN8JpD+Kq
juQaHH7WP8TsrMpgcfo1BLRczbLIh6ZcdMEFl13c7ur2l3bpcHmXDldc3eGK
yy+59JK2F4e/JeRDuIuRzRBA1LFIPszMzJLzYXl55YQJFSIB5ubm1dTUyicl
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
PR/myweXq6snVlZWiygoYuGkSVPEeFFEOBRBMSMjs7q6prKySj707DUf6vzO
pMsD32/Z5GHiMPQfGr3AUOdD1bFKxxWaqqzl/nu4nn+11i2dvf/++1vt1q1b
F/hriL6mAi7Ih4BJ5MOWng8LlCtT0tIyxEBmZpZIifI5h2JAzoTys/IJip7z
ocvpefr3CzU4/1Cf93s9STXonX+oHfb3/EPXRuhVFSA/+w/d++Lc7pTi4Vdr
9axZs0ZEr8BfQLQ2FXAiHwImyemLoi5X+En3jbVMPsyXjy/Pm7dg7tz5KSmp
NTUTGxvvz8+XTjgUA+KhHBGVu2Tr5UOjQ8Q69wt1jjW8Iaemcu/3AjW4ftm5
9LohPvYfGrVHt6oABTUfqod1f7U21KKoqYAT+RCANVkmHzrOP5w7d97s2XMT
E5MqK6uWLGmUL0hZvLhRPExPl3sObfbi3n8I/wQ7H6pZPB9GtqmAE/kQgDVZ
5PeXRT6U+wYzMjLT0tLl+9vYDyVLaVCMUe5vo0RE8qFJIes/1J091KKoqYAT
+RCANVlk75SfXyjf+bD5CLKHIvcf2qLz95ctJFTnH+rPHmpR1FTAySJ7YADQ
sMjeacSIkfn5Bbm5eT4WEQ6HDw/nr1G0QKbzofr3Z1t7+9XaUIuipgJOFtkD
A4AGe6eYxaoHIo7NEIA1sXeKWax6IOLYDAFYE3unmMWqByKOzRCANbF3ilms
eiDi2AwBWBN7p5jFqgcijs0QgDWxd4pZrHog4tgMAVgTe6eYxaoHIo7NEIA1
sXeKWax6IOLYDAFYE3unmMWqByKOzRCANbF3ilmseiDi2AwBWNPf/va3SDcB
kcGqByKOzRCANbF3ilmseiDi2AwBWBN7p5jFqgcijs0QgDWxd4pZrHog4tgM
AVgTe6eYxaoHIo7NEKE3sObpp2sGmpn76afvS+/urEcMSI/RsoV778QnzTL4
YrKAIH342ayiFpshgqx7+n1PNws8FLpU51aNsnsJ/n6meXnyTk2mLEI9Uj3e
/Vn9VokptK/FMUq3ZuPF6bzJmrqNGmMfr22d4200l+ODz23v5Pn9d+fXx4NP
moU+aXwxhZiHtab+EJr/zId7s0IQsRkimKSdgXN7756ebjpt6O5AQrZ7Ee13
1OesWfWaXBen/pKzf406d4Oah+qGu45tHuH5ZbouTv9NVlXtqTGO7wXXhSkL
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
tfcczr+6aJ7Ih50SCoOweAAAgKASQao5I+lkKpP5sOfiDy647OrLh9v6Pru3
77PfXdj15na97un1yJeag86+9x+KRd95193XXtvV+6syin6qEBysgNi9aLZ8
kfINExbfXLHk2PETTQbEU9eVLbyqcO5VhbOvFPkwo8b80gEAAIJFPpbs7C/U
y1Qm82G/1453r3v2wi43do4va99nkHRNyrzV7icl+pIPk5JSHnr40R279shl
1arVuXn5hkHRQz7UvgVBCIjdCmbcOEG+QnlRz4pFnvNh15L5nQtmX1kwu3P+
7E4ZE00vHAAAIBjcLt2QhCAfyhekdCtfdsEV17Zud+n1k57SvTWiL9cvK8lQ
UxxBsatrUPQxH7p0nwauS2plj/JF8r1rxN8Fr7z35udfvfrp1n0/O44vf//z
4ZUbtqz+bNucFe9cXTi3sz0cXp4/s0NSidllAwAAmCUlJ/0LN0KTD6Ub2rx8
sEv+gm4Vy/u9dlz3omb38w/l3sKXtnz7r017sz/ZJ4pRPty+Y/emL7eufvMd
l/m9X52ietWmr1K5Ynja9aULRTi0X6G8sHP+3E45s1unTl21YYvjxjobtvw9
afLFWfXtbdNFMrwib9blebMuy6lvd+9Yc0sGAAAICscNbLRZUC9TBSUfSgea
Vx01Cofu+bCwsLiktOy11W8aZUIlFq79eN0bb7798isrn3v+BZ3X6GsPotmA
eHG3nt1K5olkKN27pmS+/Qrl+e1tM974bLucD1d/tk2EwysLRDKcfXneTFEu
y5vVyTb1gmtvNLVgAACAoLL3JKqzkU6mCigfmv19vcTExE6dOl166aW33HKL
JiiKWPjFl1vUsfCpp5/595NPPfHvJ/Vfnzr6yfc/dIvB5u9z0+aS9lckT+ha
uqBrycJriuZdUzhP/O2YM3PuijVHjx8/evzE3Jfe6ZAt9RxeLmJh7kyp5M28
ZER6a36FGQAAWI/rCXjaTBVAPuzQd5Dm9jWeS99nvu3QZ6C6BpvNdt111111
1VWdO3e+4oorLrvssl69et+3aLESC59VxUK5zJ49W68trj+f4ryrjWseDMZV
Khd1v+XqvGldSuRrk0WZc2XBHDFwbfG8LsVzOxfYDyjniVg4vZP0d2b7tKo2
3BwbAABEB5dMFUA+bHvZVdfmL7j1hf393/DWi7j61K3P7u1im9X20s7qGurr
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
aogfZph/9/4fa9ZdMA==
    "], {{0, 243.}, {518.4, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{120., 120.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{518.4, 243.},
  PlotRange->{{0, 518.4}, {0, 243.}}]], "Notes",
 TaggingRules->{},
 CellChangeTimes->{3.8950018244144974`*^9},
 CellID->68872101,ExpressionUUID->"b460f1c0-f20e-4249-bb0e-500384196397"],

Cell[TextData[{
 "FileSeek is the other program that offers filter by date functionality but \
you also have to pay for the premium version to get the full suite of \
features. There's also Listary, but I don't think it lets you search for \
files by date. One program I really like for searching for files is Voidtools \
everything. It has a date syntax but you have to dig to find it. For more \
details, see this ",
 ButtonBox["thread",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.voidtools.com/forum/viewtopic.php?t=9328"], None},
  ButtonNote->"https://www.voidtools.com/forum/viewtopic.php?t=9328"],
 "."
}], "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.8950018691452866`*^9, 3.8950019760346317`*^9}},
 CellID->18214054,ExpressionUUID->"07fb193b-2c25-4af4-a125-d7464e2da3e7"],

Cell["\<\
The function DirectorySize is helpful and is related to the program WizTree \
which is faster but can require paying than WinDirStat. WizTree uses binary \
search algorithm so its faster whereas WinDirStat uses linear search \
algorithm so its slower.\
\>", "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.895001982871447*^9, 3.895002039263968*^9}},
 CellID->54617246,ExpressionUUID->"d11cf027-feb3-48dd-a709-d55b9d7369ba"],

Cell["\<\
This paclet is based on functions from the Wolfram Function Repository. Most \
of these functions were written by Richard Hennigan and Arnoud Buzing at \
Wolfram Research and Sjoerd Smit and Michael Sollami. I wanted to have all \
the file functions in one place so that's why I am creating this paclet so I \
have constant access to these functions. I am surprised by how long the \
definition for CreateRandomFile and RelativePath is. BackupFile also has a \
pretty long definition.\
\>", "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.894998612063193*^9, 3.8949986265814905`*^9}, {
  3.895001435944992*^9, 3.8950015847399626`*^9}},
 CellTags->"DefaultContent",
 CellID->889292814,ExpressionUUID->"acc58d7e-45e8-4535-8ece-efae45a1f26f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Primary Context",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"PrimaryContext", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Specify the primary context of your paclet that users should load \
with ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "Needs", "SymbolsRefLink", ShowStringCharacters -> True, 
                 FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> "paclet:ref/Needs", 
                ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " or ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "Get", "SymbolsRefLink", ShowStringCharacters -> True, 
                 FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> "paclet:ref/Get", ContentPadding -> 
                False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " in order to access the paclet's functionality. If your paclet is \
not meant to be loaded via a context, this section can be left blank. If \
specified, the primary context will also be displayed on the main web page \
for your paclet."}], "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoPrimaryContext"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "dcd5a4ab-3db9-49d1-bcf5-a5bb21f18ac1"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PrimaryContext"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Primary Context", "PrimaryContext", "TemplateCellGroup"},
 CellID->945361513,ExpressionUUID->"a397c78c-e556-4e54-84c0-382b7c7c71fa"],

Cell["PeterBurbery`FileUtilities`", "Text",
 TaggingRules->{},
 CellID->36786989,ExpressionUUID->"5d0ee701-5b2d-4dfd-b3f1-b93ae16252bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Main Guide Page",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"MainGuidePage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose one of your documentation guide pages to feature as part of \
the main landing page for your paclet. This guide page should correspond to a \
general overview of your paclet.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoMainGuidePage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "21ac72a0-1392-4532-89aa-68b658e03796"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "MainGuidePage"},
 CellTags->{"Main Guide Page", "MainGuidePage", "TemplateCellGroup"},
 CellID->587602718,ExpressionUUID->"914876fe-eb71-434f-b141-c0d77121cf9e"],

Cell[BoxData[
 TemplateBox[{},
  "MainGuideChooserTemplate"]], "MainGuideChooser",
 TaggingRules->{
  "Refreshing" -> False, "Relative" -> True, "MainGuidePageString" -> 
   "Documentation/English/Guides/FileUtilities.nb"},
 CellTags->"MainGuidePagePanel",
 CellID->614786987,ExpressionUUID->"ac9b77da-62e2-452d-93e2-1fb08903ec59"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExampleNotebook", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Provide examples showing how to install, configure, and load your \
Paclet along with some basic usage. This section will be displayed on the \
main landing page for your Paclet when deployed to the cloud or published in \
the Wolfram Language Paclet Repository.\n\nThe usage examples should provide \
a succinct overview of what types of features users can expect from your \
paclet. Detailed examples should be reserved for the corresponding function, \
guide, or tutorial pages.\n\nThe default content appearing here shows the \
recommended structure for this section, but any of it can be removed or \
changed as desired. Use additional cells and cell styles as needed.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExampleNotebook"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "6ca1540d-6395-4949-81b6-361a98056400"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ExampleNotebook"},
 CellTags->{"ExampleNotebook", "Examples", "TemplateCellGroup"},
 CellID->365974185,ExpressionUUID->"60b97073-4a91-4931-a204-9d3c65333455"],

Cell[CellGroupData[{

Cell[TextData[{
 "Initialization for Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExampleInitialization", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Put any initialization code that's needed for evaluating examples \
here.\n\nCells marked as excluded will not appear anywhere in the published \
paclet except for the definition notebook.\n\nCells can be toggled as \
excluded using ", 
           Cell[
            BoxData[
             StyleBox[
              RowBox[{"Tools", 
                RowBox[{" ", "\[FilledRightTriangle]", " "}], "Cells", 
                RowBox[{" ", "\[FilledRightTriangle]", " "}], 
                RowBox[{
                  RowBox[{"Mark", "/", "unmark"}], " ", "selected", " ", 
                  "cells", " ", "as", " ", "excluded"}]}], StripOnInput -> 
              False, ShowStringCharacters -> False, FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> "SemiBold", 
              FontColor -> GrayLevel[0.28627]]]], 
           " from the toolbar above."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExampleInitialization"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "7dd741c1-a873-4741-88ed-99a15ae84e42"]
}], "Subsection", "Excluded",
 Editable->False,
 Deletable->True,
 TaggingRules->{"TemplateGroupName" -> "ExampleInitialization"},
 CellTags->{
  "ExampleInitialization", "Initialization for Examples", "TemplateCellGroup"},
 CellID->468286435,ExpressionUUID->"396bc505-1877-4af7-9a75-de2d67cc13d0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "PacletDirectoryLoad", "[", 
   "\"\<C:\\\\Users\\\\Peter\\\\OneDrive - Marshall \
University\\\\GitHub\\\\file-paclet\\\\FileUtilities\\\\FileUtilities\>\"", 
   "]"}], ";"}]], "Input", "Excluded",
 TaggingRules->{},
 InitializationCell->True,
 CellLabel->"In[1]:=",
 CellID->996717066,ExpressionUUID->"ef3dbf7a-a142-4780-98f5-f96f4fbbf279"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<PeterBurbery`FileUtilities`\>\"", "]"}], 
  ";"}]], "Input", "Excluded",
 TaggingRules->{},
 InitializationCell->True,
 CellLabel->"In[2]:=",
 CellID->172764492,ExpressionUUID->"9aa367bd-3623-4f39-acd8-af08ea3b8e64"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic Examples", "Subsection",
 TaggingRules->{},
 CellID->462042388,ExpressionUUID->"92cd1f69-d969-4503-8170-7ad2b0f16799"],

Cell["Find the size of the installation directory:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.895001594922736*^9, 3.8950016049902444`*^9}, 
   3.8950021912761*^9},
 CellTags->"DefaultContent",
 CellID->319073343,ExpressionUUID->"ab83ad67-1828-42cd-9279-8e74a1de89f2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DirectorySize", "[", "$InstallationDirectory", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.895001610665184*^9, 3.895001619751235*^9}},
 CellTags->"DefaultContent",
 CellLabel->"In[3]:=",
 CellID->593829399,ExpressionUUID->"296d757e-d4e3-4303-8e6a-201990f3d6a5"],

Cell[BoxData[
 TemplateBox[{"6473296019", "\"B\"", "bytes", "\"Bytes\""},
  "Quantity"]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.895001620064099*^9, 3.895002179253746*^9},
 CellTags->"DefaultContent",
 CellLabel->"Out[3]=",
 CellID->327220409,ExpressionUUID->"94b28e82-f89e-4923-adb8-1089d365acaf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scope", "Subsection",
 TaggingRules->{},
 CellID->964056545,ExpressionUUID->"9bb1dd94-ace3-4d1a-863b-3efc224c1179"],

Cell["Backup this file quickly:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8950022180978117`*^9, 3.895002222284978*^9}},
 CellTags->"DefaultContent",
 CellID->217390316,ExpressionUUID->"89b370c1-08d4-4ece-a406-0ed1befd8c65"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BackupFile", "[", 
  RowBox[{"NotebookFileName", "[", "]"}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.895002224027605*^9, 3.8950022332828875`*^9}},
 CellTags->"DefaultContent",
 CellLabel->"In[4]:=",
 CellID->978490832,ExpressionUUID->"5bc519f3-64dd-4a5a-b8ec-ef0f8b7b49ca"],

Cell[BoxData["\<\"C:\\\\Users\\\\Peter\\\\OneDrive - Marshall \
University\\\\GitHub\\\\file-paclet\\\\FileUtilities\\\\FileUtilities\\\\\
FileUtilities  Definition Notebook-0.nb\"\>"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.895002233616828*^9},
 CellTags->"DefaultContent",
 CellLabel->"Out[4]=",
 CellID->141952243,ExpressionUUID->"19acbf1a-4f34-46cc-9e8b-0ee3a35c640b"]
}, Open  ]],

Cell[TextData[{
 "Create a random LocalObject file with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftCeiling]", 
    SuperscriptBox["\[ExponentialE]", "12"], "\[RightCeiling]"}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "9407014a-9673-4854-941d-1cca0adeccab"],
 " bytes, then delete it:"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8950022489227047`*^9, 3.8950022545439367`*^9}, {
  3.895002286961381*^9, 3.8950023094434795`*^9}},
 CellID->64480359,ExpressionUUID->"4ba97513-0769-4dfc-8708-9ff0d53b571a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CreateRandomFile", "[", 
  RowBox[{
   RowBox[{"LocalObject", "[", "]"}], ",", 
   RowBox[{"Echo", "[", 
    FormBox[
     RowBox[{"\[LeftCeiling]", 
      SuperscriptBox["\[ExponentialE]", "12"], "\[RightCeiling]"}],
     TraditionalForm], "]"}]}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8950022555286427`*^9, 3.8950022669600215`*^9}, {
  3.8950023206391883`*^9, 3.8950023319148045`*^9}},
 CellLabel->"In[6]:=",
 CellID->612289450,ExpressionUUID->"1b637e62-da4d-4a4a-abbb-9f377834d4e6"],

Cell[BoxData["162755"], "Echo",
 TaggingRules->{},
 CellChangeTimes->{3.895002346612754*^9},
 CellID->8626054,ExpressionUUID->"91ede0ab-a488-4992-89a0-8c4311b19dfb"],

Cell[BoxData[
 RowBox[{"LocalObject", 
  "[", "\<\"file:///C:/Users/Peter/AppData/Roaming/Wolfram/Objects/6f757c02-\
9984-4e3c-9670-48c9f79532fa\"\>", "]"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8950023505493345`*^9},
 CellLabel->"Out[6]=",
 CellID->126568677,ExpressionUUID->"c75817f1-6dba-4d89-89b1-f384ece31bbf"]
}, Open  ]],

Cell["Delete the file:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.895002359463197*^9, 3.8950023622972403`*^9}},
 CellID->413483304,ExpressionUUID->"02168d58-7af6-4925-912e-e2b8c54c01e7"],

Cell[BoxData[
 RowBox[{"DeleteObject", "[", "%", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8950023631146727`*^9, 3.895002366130846*^9}},
 CellLabel->"In[7]:=",
 CellID->581484427,ExpressionUUID->"e82463ef-a192-4acc-abdf-d1302818174c"],

Cell["Edit the file name of a random file:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8950024031884127`*^9, 3.8950024114042697`*^9}},
 CellID->134002552,ExpressionUUID->"3c517c93-6ed6-46b3-8a85-aa1246e897a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"file", "=", 
  RowBox[{"CreateRandomFile", "[", 
   RowBox[{
    RowBox[{"File", "[", "\"\<file name to edit.jpeg\>\"", "]"}], ",", "148", 
    ",", 
    RowBox[{"OverwriteTarget", "->", "True"}]}], "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8950024123495116`*^9, 3.8950024240186043`*^9}, {
  3.8950024693144765`*^9, 3.895002478428692*^9}, {3.895002530098432*^9, 
  3.895002530826002*^9}, {3.8950025738741746`*^9, 3.895002578993145*^9}},
 CellLabel->"In[12]:=",
 CellID->230565217,ExpressionUUID->"daae3237-15f6-468a-8301-3830a0272422"],

Cell[BoxData[
 RowBox[{"File", "[", 
  TemplateBox[{
   "\"C:\\\\Users\\\\Peter\\\\Documents\\\\file name to edit.jpeg\""},
   "FileArgument"], "]"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8950024244941216`*^9, 3.895002479411397*^9, 
  3.89500253876505*^9, 3.8950025792098527`*^9},
 CellLabel->"Out[12]=",
 CellID->575525378,ExpressionUUID->"7e1df054-08d5-44b8-8d90-f5ab6ff3db33"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FileNameEdit", "[", 
  RowBox[{"file", ",", 
   RowBox[{"\"\<Append\>\"", "->", "\"\<(1)\>\""}]}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8950024123495116`*^9, 3.8950024347171335`*^9}, {
  3.895002526666416*^9, 3.8950025286816316`*^9}, {3.895002584778792*^9, 
  3.895002594100765*^9}},
 CellLabel->"In[13]:=",
 CellID->4253829,ExpressionUUID->"181e65da-f115-4c10-8e89-acd64a874967"],

Cell[BoxData["\<\"C:\\\\Users\\\\Peter\\\\Documents\\\\file name to \
edit(1).jpeg\"\>"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.895002594455924*^9},
 CellLabel->"Out[13]=",
 CellID->571034391,ExpressionUUID->"970e0e65-62f0-46db-a947-318c0034d1e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FileNameEdit", "[", 
  RowBox[{"file", ",", 
   RowBox[{"\"\<Append\>\"", "->", "\"\<(1)\>\""}], ",", 
   RowBox[{"\"\<Action\>\"", "->", "\"\<Copy\>\""}]}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8950024123495116`*^9, 3.8950024347171335`*^9}, {
  3.895002526666416*^9, 3.8950025286816316`*^9}, {3.895002584778792*^9, 
  3.895002594100765*^9}, {3.8950026396771946`*^9, 3.8950026432651644`*^9}},
 CellLabel->"In[14]:=",
 CellID->133825989,ExpressionUUID->"0c4e2927-12b0-4efe-8c94-5076fc95ae55"],

Cell[BoxData["\<\"C:\\\\Users\\\\Peter\\\\Documents\\\\file name to \
edit(1).jpeg\"\>"], "Echo",
 TaggingRules->{},
 CellChangeTimes->{3.895002643683412*^9},
 CellID->83884404,ExpressionUUID->"5154d1c3-985d-4bbf-97ac-c66e0398c0fc"],

Cell[BoxData["\<\"C:\\\\Users\\\\Peter\\\\Documents\\\\file name to \
edit(1).jpeg\"\>"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8950026464144697`*^9},
 CellLabel->"Out[14]=",
 CellID->499950222,ExpressionUUID->"289847ab-ade8-447c-a453-1e80b92486e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FileNameEdit", "[", 
  RowBox[{"file", ",", 
   RowBox[{"\"\<Append\>\"", "->", "\"\<(2)\>\""}], ",", 
   RowBox[{"\"\<Action\>\"", "->", "\"\<Move\>\""}]}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8950024123495116`*^9, 3.8950024347171335`*^9}, {
  3.895002526666416*^9, 3.8950025286816316`*^9}, {3.895002584778792*^9, 
  3.895002594100765*^9}, {3.8950026396771946`*^9, 3.895002655848493*^9}},
 CellLabel->"In[15]:=",
 CellID->247835458,ExpressionUUID->"a3f61ca9-e9bc-4119-bbc4-52432df49b00"],

Cell[BoxData["\<\"C:\\\\Users\\\\Peter\\\\Documents\\\\file name to \
edit(2).jpeg\"\>"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8950026562818985`*^9},
 CellLabel->"Out[15]=",
 CellID->62692429,ExpressionUUID->"bd70fe1a-6f53-488c-bcda-c919f47262a8"]
}, Open  ]],

Cell["\<\
Test if a file exists (I was expecting this to return True, I don't know why \
it returns False because the Random FIle is not a :\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8950027071827292`*^9, 3.8950027112385406`*^9}, {
  3.8950029797890472`*^9, 3.8950029975648685`*^9}},
 CellID->335003735,ExpressionUUID->"3f579754-671a-48ea-8479-98453756a6bb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomfile", "=", 
  RowBox[{"CreateRandomFile", "[", "54", "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8950030066557064`*^9, 3.8950030114851313`*^9}},
 CellLabel->"In[26]:=",
 CellID->294623502,ExpressionUUID->"3b0a159a-57a4-48ea-a70c-1d467623b764"],

Cell[BoxData[
 RowBox[{"File", "[", 
  TemplateBox[{
   "\"C:\\\\Users\\\\Peter\\\\AppData\\\\Local\\\\Temp\\\\m-3444358b-4e00-\
44a9-975c-b1566f1fc07e\""},
   "FileArgument"], "]"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.895003012223549*^9},
 CellLabel->"Out[26]=",
 CellID->209323667,ExpressionUUID->"bd0144ec-6c3d-46b7-9e74-8eca551b1f49"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FileQ", "[", 
  RowBox[{"FileName", "[", "randomfile", "]"}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.895002712003445*^9, 3.8950027426067286`*^9}, {
  3.8950028020107937`*^9, 3.8950028077919664`*^9}, {3.8950030172028613`*^9, 
  3.895003020050246*^9}},
 CellLabel->"In[27]:=",
 CellID->670165363,ExpressionUUID->"b4b7002f-059c-4647-bd60-227cef88715b"],

Cell[BoxData["False"], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.8950027353637657`*^9, 3.8950027460522327`*^9}, 
   3.8950028138009377`*^9, 3.895003020479419*^9},
 CellLabel->"Out[27]=",
 CellID->46807434,ExpressionUUID->"5f4ba4d9-11d0-4958-9843-614648447e5e"]
}, Open  ]],

Cell["Find files in base directory:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8950029119987364`*^9, 3.895002918264821*^9}},
 CellID->56703612,ExpressionUUID->"4e95b98b-1d86-485a-b4d1-2961afddbf73"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", "FileQ", "]"}], "[", 
  RowBox[{"FileNames", "[", 
   RowBox[{"All", ",", "$BaseDirectory", ",", "Infinity"}], "]"}], 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.895002918867634*^9, 3.8950029362213545`*^9}},
 CellLabel->"In[24]:=",
 CellID->41286207,ExpressionUUID->"454272df-25d5-465d-a6db-7aaac2d758ce"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"C:\\\\ProgramData\\\\Mathematica\\\\Kernel\\\\init.m\"\>", 
   ",", "\<\"C:\\\\ProgramData\\\\Mathematica\\\\Licensing\\\\mathpass\"\>"}],
   "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.895002927304401*^9, 3.895002936663931*^9}},
 CellLabel->"Out[24]=",
 CellID->609036751,ExpressionUUID->"32414d79-5bb4-4c98-af3d-c173c1c633d3"]
}, Open  ]],

Cell["Compare to FileExistsQ, which recognizes directories:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8950029431412787`*^9, 3.895002954542638*^9}},
 CellID->504916341,ExpressionUUID->"8005bdc7-881a-4887-a1e3-6cffb017f461"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", "FileExistsQ", "]"}], "[", 
  RowBox[{"FileNames", "[", 
   RowBox[{"All", ",", "$BaseDirectory", ",", "Infinity"}], "]"}], 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.895002918867634*^9, 3.8950029589304433`*^9}},
 CellLabel->"In[25]:=",
 CellID->39642057,ExpressionUUID->"91e0d775-68b2-4cac-9e18-b04c09d072a5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"C:\\\\ProgramData\\\\Mathematica\\\\Applications\"\>", 
   ",", "\<\"C:\\\\ProgramData\\\\Mathematica\\\\Autoload\"\>", 
   ",", "\<\"C:\\\\ProgramData\\\\Mathematica\\\\FrontEnd\"\>", 
   ",", "\<\"C:\\\\ProgramData\\\\Mathematica\\\\Kernel\"\>", 
   ",", "\<\"C:\\\\ProgramData\\\\Mathematica\\\\Kernel\\\\init.m\"\>", 
   ",", "\<\"C:\\\\ProgramData\\\\Mathematica\\\\Licensing\"\>", 
   ",", "\<\"C:\\\\ProgramData\\\\Mathematica\\\\Licensing\\\\mathpass\"\>", 
   ",", "\<\"C:\\\\ProgramData\\\\Mathematica\\\\Paclets\"\>", 
   ",", "\<\"C:\\\\ProgramData\\\\Mathematica\\\\Paclets\\\\Repository\"\>", 
   ",", "\<\"C:\\\\ProgramData\\\\Mathematica\\\\SystemFiles\"\>", 
   ",", "\<\"C:\\\\ProgramData\\\\Mathematica\\\\SystemFiles\\\\\
CharacterEncodings\"\>", 
   ",", "\<\"C:\\\\ProgramData\\\\Mathematica\\\\SystemFiles\\\\FrontEnd\"\>",
    ",", "\<\"C:\\\\ProgramData\\\\Mathematica\\\\SystemFiles\\\\FrontEnd\\\\\
Palettes\"\>", 
   ",", "\<\"C:\\\\ProgramData\\\\Mathematica\\\\SystemFiles\\\\FrontEnd\\\\\
StyleSheets\"\>", 
   ",", "\<\"C:\\\\ProgramData\\\\Mathematica\\\\SystemFiles\\\\Kernel\"\>", 
   ",", "\<\"C:\\\\ProgramData\\\\Mathematica\\\\SystemFiles\\\\\
SpellingDictionaries\"\>"}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8950029594260178`*^9},
 CellLabel->"Out[25]=",
 CellID->206880681,ExpressionUUID->"626e3577-e0cb-47de-bf94-99b9a7e7c943"]
}, Open  ]],

Cell["\<\
See and select files up to three levels down from the installation directory:\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.895003055602685*^9, 3.8950030604466496`*^9}},
 CellID->160995265,ExpressionUUID->"852a0dac-4213-420d-a3b7-df894a07c84b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FileTreePicker", "[", 
  RowBox[{
   RowBox[{"Dynamic", "[", "files", "]"}], ",", "$InstallationDirectory", ",",
    "3"}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.895003063595489*^9, 3.8950030699973493`*^9}, {
  3.8950031106354923`*^9, 3.8950031108151655`*^9}},
 CellLabel->"In[30]:=",
 CellID->44657896,ExpressionUUID->"2a393455-8df1-40ce-a241-814432fa3cac"],

Cell[BoxData[
 DynamicModuleBox[{}, 
  TagBox[GridBox[{
     {
      TagBox[
       DynamicModuleBox[{Typeset`var$$ = True}, 
        InterpretationBox[
         StyleBox[
          PaneSelectorBox[{False->GridBox[{
             {
              OpenerBox[Dynamic[Typeset`var$$],
               Appearance->Automatic,
               AutoAction->False,
               ContinuousAction->False,
               Enabled->Automatic], 
              TagBox[
               TagBox["\<\"Configuration\"\>",
                MouseAppearanceTag["Arrow"]],
               
               EventHandlerTag[{
                "MouseClicked" :> (Typeset`var$$ = Not[Typeset`var$$]), 
                 Method -> "Preemptive", PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxBackground->{"Columns" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
           GridBox[{
             {
              OpenerBox[Dynamic[Typeset`var$$],
               Appearance->Automatic,
               AutoAction->False,
               ContinuousAction->False,
               Enabled->Automatic], 
              TagBox[
               TagBox["\<\"Configuration\"\>",
                MouseAppearanceTag["Arrow"]],
               
               EventHandlerTag[{
                "MouseClicked" :> (Typeset`var$$ = Not[Typeset`var$$]), 
                 Method -> "Preemptive", PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]]},
             {"", 
              PaneBox[
               DynamicBox[ToBoxes[
                 PeterBurbery`FileUtilities`Private`viewer[
                  Dynamic[$CellContext`files], {
                  "Licensing" -> {
                    "playerpass" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Configuration\\Licensing\\playerpass"], 
                    "ProductInfo.txt" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Configuration\\Licensing\\ProductInfo.txt"]}}], 
                 StandardForm],
                
                ImageSizeCache->{
                 133.85, {27.13403328722343, 32.86596671277657}},
                SingleEvaluation->True,
                SynchronousUpdating->False,
                TrackedSymbols:>{}],
               ImageMargins->0]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxBackground->{"Columns" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
           Dynamic[
            TrueQ[Typeset`var$$]],
           Alignment->Automatic,
           BaseStyle->{},
           BaselinePosition->Baseline,
           DefaultBaseStyle->"OpenerView",
           ImageMargins->0,
           ImageSize->Automatic],
          Deployed->False,
          StripOnInput->False],
         OpenerView[{"Configuration", 
           Dynamic[
            PeterBurbery`FileUtilities`Private`viewer[
             Dynamic[$CellContext`files], {
             "Licensing" -> {
               "playerpass" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Configuration\\Licensing\\playerpass"], 
                "ProductInfo.txt" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Configuration\\Licensing\\ProductInfo.txt"]}}], 
            SynchronousUpdating -> False, SingleEvaluation -> True, 
            TrackedSymbols :> {}]}, False, Method -> "Active"]],
        DynamicModuleValues:>{}],
       Setting[#, {0}]& ]},
     {
      TagBox[
       DynamicModuleBox[{Typeset`var$$ = True}, 
        InterpretationBox[
         StyleBox[
          PaneSelectorBox[{False->GridBox[{
             {
              OpenerBox[Dynamic[Typeset`var$$],
               Appearance->Automatic,
               AutoAction->False,
               ContinuousAction->False,
               Enabled->Automatic], 
              TagBox[
               TagBox["\<\"Documentation\"\>",
                MouseAppearanceTag["Arrow"]],
               
               EventHandlerTag[{
                "MouseClicked" :> (Typeset`var$$ = Not[Typeset`var$$]), 
                 Method -> "Preemptive", PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxBackground->{"Columns" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
           GridBox[{
             {
              OpenerBox[Dynamic[Typeset`var$$],
               Appearance->Automatic,
               AutoAction->False,
               ContinuousAction->False,
               Enabled->Automatic], 
              TagBox[
               TagBox["\<\"Documentation\"\>",
                MouseAppearanceTag["Arrow"]],
               
               EventHandlerTag[{
                "MouseClicked" :> (Typeset`var$$ = Not[Typeset`var$$]), 
                 Method -> "Preemptive", PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]]},
             {"", 
              PaneBox[
               DynamicBox[ToBoxes[
                 PeterBurbery`FileUtilities`Private`viewer[
                  Dynamic[$CellContext`files], {
                  "English" -> {
                    "PacletInfo.wl" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Documentation\\English\\PacletInfo.wl"]}}], 
                 StandardForm],
                
                ImageSizeCache->{
                 119.85, {17.134033287223428`, 22.865966712776572`}},
                SingleEvaluation->True,
                SynchronousUpdating->False,
                TrackedSymbols:>{}],
               ImageMargins->0]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxBackground->{"Columns" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
           Dynamic[
            TrueQ[Typeset`var$$]],
           Alignment->Automatic,
           BaseStyle->{},
           BaselinePosition->Baseline,
           DefaultBaseStyle->"OpenerView",
           ImageMargins->0,
           ImageSize->Automatic],
          Deployed->False,
          StripOnInput->False],
         OpenerView[{"Documentation", 
           Dynamic[
            PeterBurbery`FileUtilities`Private`viewer[
             Dynamic[$CellContext`files], {
             "English" -> {
               "PacletInfo.wl" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Documentation\\English\\PacletInfo.wl"]}}], 
            SynchronousUpdating -> False, SingleEvaluation -> True, 
            TrackedSymbols :> {}]}, False, Method -> "Active"]],
        DynamicModuleValues:>{}],
       Setting[#, {0}]& ]},
     {
      TagBox[
       DynamicModuleBox[{Typeset`var$$ = True}, 
        InterpretationBox[
         StyleBox[
          PaneSelectorBox[{False->GridBox[{
             {
              OpenerBox[Dynamic[Typeset`var$$],
               Appearance->Automatic,
               AutoAction->False,
               ContinuousAction->False,
               Enabled->Automatic], 
              TagBox[
               TagBox["\<\"SystemFiles\"\>",
                MouseAppearanceTag["Arrow"]],
               
               EventHandlerTag[{
                "MouseClicked" :> (Typeset`var$$ = Not[Typeset`var$$]), 
                 Method -> "Preemptive", PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxBackground->{"Columns" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->
           GridBox[{
             {
              OpenerBox[Dynamic[Typeset`var$$],
               Appearance->Automatic,
               AutoAction->False,
               ContinuousAction->False,
               Enabled->Automatic], 
              TagBox[
               TagBox["\<\"SystemFiles\"\>",
                MouseAppearanceTag["Arrow"]],
               
               EventHandlerTag[{
                "MouseClicked" :> (Typeset`var$$ = Not[Typeset`var$$]), 
                 Method -> "Preemptive", PassEventsDown -> Automatic, 
                 PassEventsUp -> True}]]},
             {"", 
              PaneBox[
               DynamicBox[ToBoxes[
                 PeterBurbery`FileUtilities`Private`viewer[
                  Dynamic[$CellContext`files], {
                  "CharacterEncodings" -> {
                    "AdobeStandard.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\AdobeStandard.\
m"], "ASCII.m" -> File[
                    "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ASCII.m"], 
                    "CP936.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\CP936.m"], 
                    "CP949.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\CP949.m"], 
                    "CP950.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\CP950.m"], 
                    "EUC-JP.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\EUC-JP.m"], 
                    "EUC.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\EUC.m"], 
                    "IBM-850.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\IBM-850.m"], 
                    "ISO10646-1.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISO10646-1.m"], 
                    "ISO8859-10.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISO8859-10.m"], 
                    "ISO8859-11.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISO8859-11.m"], 
                    "ISO8859-13.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISO8859-13.m"], 
                    "ISO8859-14.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISO8859-14.m"], 
                    "ISO8859-15.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISO8859-15.m"], 
                    "ISO8859-16.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISO8859-16.m"], 
                    "ISO8859-1.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISO8859-1.m"], 
                    "ISO8859-2.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISO8859-2.m"], 
                    "ISO8859-3.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISO8859-3.m"], 
                    "ISO8859-4.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISO8859-4.m"], 
                    "ISO8859-5.m" -> 
                    File[
                    "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISO8859-5.m"], 
                    "ISO8859-6.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISO8859-6.m"], 
                    "ISO8859-7.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISO8859-7.m"], 
                    "ISO8859-8.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISO8859-8.m"], 
                    "ISO8859-9.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISO8859-9.m"], 
                    "ISOLatin1.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISOLatin1.m"], 
                    "ISOLatin2.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISOLatin2.m"], 
                    "ISOLatin3.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISOLatin3.m"], 
                    "ISOLatin4.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISOLatin4.m"], 
                    "ISOLatinCyrillic.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\\
ISOLatinCyrillic.m"], "Klingon.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\Klingon.m"], 
                    "koi8-r.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\koi8-r.m"], 
                    "MacintoshArabic.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\MacintoshArabic.\
m"], "MacintoshChineseSimplified.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\\
MacintoshChineseSimplified.m"], "MacintoshChineseTraditional.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\\
MacintoshChineseTraditional.m"], "MacintoshCroatian.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\\
MacintoshCroatian.m"], "MacintoshCyrillic.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\\
MacintoshCyrillic.m"], "MacintoshGreek.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\MacintoshGreek.\
m"], "MacintoshHebrew.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\MacintoshHebrew.\
m"], "MacintoshIcelandic.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\\
MacintoshIcelandic.m"], "MacintoshKorean.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\MacintoshKorean.\
m"], "MacintoshNonCyrillicSlavic.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\\
MacintoshNonCyrillicSlavic.m"], "MacintoshRomanian.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\\
MacintoshRomanian.m"], "MacintoshRoman.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\MacintoshRoman.\
m"], "MacintoshRomanPDFExport.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\\
MacintoshRomanPDFExport.m"], "MacintoshThai.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\MacintoshThai.\
m"], "MacintoshTurkish.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\\
MacintoshTurkish.m"], "MacintoshUkrainian.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\\
MacintoshUkrainian.m"], "Math1.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\Math1.m"], 
                    "Math2.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\Math2.m"], 
                    "Math3.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\Math3.m"], 
                    "Math4.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\Math4.m"], 
                    "Math5.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\Math5.m"], 
                    "Mathematica1.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\Mathematica1.m"]\
, "Mathematica2.m" -> File[
                    "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\Mathematica2.m"]\
, "Mathematica3.m" -> File[
                    "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\Mathematica3.m"]\
, "Mathematica4.m" -> File[
                    "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\Mathematica4.m"]\
, "Mathematica5.m" -> File[
                    "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\Mathematica5.m"]\
, "Mathematica6.m" -> File[
                    "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\Mathematica6.m"]\
, "Mathematica7.m" -> File[
                    "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\Mathematica7.m"]\
, "PrintableASCII.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\PrintableASCII.\
m"], "ShiftJIS.m" -> File[
                    "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ShiftJIS.m"], 
                    "Symbol.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\Symbol.m"], 
                    "Unicode.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\Unicode.m"], 
                    "UTF-8.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\UTF-8.m"], 
                    "UTF8.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\UTF8.m"], 
                    "WindowsANSI.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\WindowsANSI.m"],
                     "WindowsBaltic.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\WindowsBaltic.\
m"], "WindowsCyrillic.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\WindowsCyrillic.\
m"], "WindowsEastEurope.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\\
WindowsEastEurope.m"], "WindowsGreek.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\WindowsGreek.m"]\
, "WindowsThai.m" -> File[
                    "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\WindowsThai.m"],
                     "WindowsTurkish.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\WindowsTurkish.\
m"], "ZapfDingbats.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ZapfDingbats.m"]\
}, "Formats" -> {"FormatMappings.m" -> 
                    File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\Formats\\FormatMappings.m"]}}], 
                 StandardForm],
                
                ImageSizeCache->{
                 233.85, {802.7340332872235, 808.4659667127765}},
                SingleEvaluation->True,
                SynchronousUpdating->False,
                TrackedSymbols:>{}],
               ImageMargins->0]}
            },
            AutoDelete->False,
            BaselinePosition->{1, 1},
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxBackground->{"Columns" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
           Dynamic[
            TrueQ[Typeset`var$$]],
           Alignment->Automatic,
           BaseStyle->{},
           BaselinePosition->Baseline,
           DefaultBaseStyle->"OpenerView",
           ImageMargins->0,
           ImageSize->Automatic],
          Deployed->False,
          StripOnInput->False],
         OpenerView[{"SystemFiles", 
           Dynamic[
            PeterBurbery`FileUtilities`Private`viewer[
             Dynamic[$CellContext`files], {
             "CharacterEncodings" -> {
               "AdobeStandard.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\AdobeStandard.\
m"], "ASCII.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ASCII.m"], 
                "CP936.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\CP936.m"], 
                "CP949.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\CP949.m"], 
                "CP950.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\CP950.m"], 
                "EUC-JP.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\EUC-JP.m"], 
                "EUC.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\EUC.m"], 
                "IBM-850.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\IBM-850.m"], 
                "ISO10646-1.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISO10646-1.m"], 
                "ISO8859-10.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISO8859-10.m"], 
                "ISO8859-11.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISO8859-11.m"], 
                "ISO8859-13.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISO8859-13.m"], 
                "ISO8859-14.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISO8859-14.m"], 
                "ISO8859-15.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISO8859-15.m"], 
                "ISO8859-16.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISO8859-16.m"], 
                "ISO8859-1.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISO8859-1.m"], 
                "ISO8859-2.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISO8859-2.m"], 
                "ISO8859-3.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISO8859-3.m"], 
                "ISO8859-4.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISO8859-4.m"], 
                "ISO8859-5.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISO8859-5.m"], 
                "ISO8859-6.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISO8859-6.m"], 
                "ISO8859-7.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISO8859-7.m"], 
                "ISO8859-8.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISO8859-8.m"], 
                "ISO8859-9.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISO8859-9.m"], 
                "ISOLatin1.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISOLatin1.m"], 
                "ISOLatin2.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISOLatin2.m"], 
                "ISOLatin3.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISOLatin3.m"], 
                "ISOLatin4.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ISOLatin4.m"], 
                "ISOLatinCyrillic.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\\
ISOLatinCyrillic.m"], "Klingon.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\Klingon.m"], 
                "koi8-r.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\koi8-r.m"], 
                "MacintoshArabic.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\MacintoshArabic.\
m"], "MacintoshChineseSimplified.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\\
MacintoshChineseSimplified.m"], "MacintoshChineseTraditional.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\\
MacintoshChineseTraditional.m"], "MacintoshCroatian.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\\
MacintoshCroatian.m"], "MacintoshCyrillic.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\\
MacintoshCyrillic.m"], "MacintoshGreek.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\MacintoshGreek.\
m"], "MacintoshHebrew.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\MacintoshHebrew.\
m"], "MacintoshIcelandic.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\\
MacintoshIcelandic.m"], "MacintoshKorean.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\MacintoshKorean.\
m"], "MacintoshNonCyrillicSlavic.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\\
MacintoshNonCyrillicSlavic.m"], "MacintoshRomanian.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\\
MacintoshRomanian.m"], "MacintoshRoman.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\MacintoshRoman.\
m"], "MacintoshRomanPDFExport.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\\
MacintoshRomanPDFExport.m"], "MacintoshThai.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\MacintoshThai.\
m"], "MacintoshTurkish.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\\
MacintoshTurkish.m"], "MacintoshUkrainian.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\\
MacintoshUkrainian.m"], "Math1.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\Math1.m"], 
                "Math2.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\Math2.m"], 
                "Math3.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\Math3.m"], 
                "Math4.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\Math4.m"], 
                "Math5.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\Math5.m"], 
                "Mathematica1.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\Mathematica1.m"]\
, "Mathematica2.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\Mathematica2.m"]\
, "Mathematica3.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\Mathematica3.m"]\
, "Mathematica4.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\Mathematica4.m"]\
, "Mathematica5.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\Mathematica5.m"]\
, "Mathematica6.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\Mathematica6.m"]\
, "Mathematica7.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\Mathematica7.m"]\
, "PrintableASCII.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\PrintableASCII.\
m"], "ShiftJIS.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ShiftJIS.m"], 
                "Symbol.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\Symbol.m"], 
                "Unicode.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\Unicode.m"], 
                "UTF-8.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\UTF-8.m"], 
                "UTF8.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\UTF8.m"], 
                "WindowsANSI.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\WindowsANSI.m"],
                 "WindowsBaltic.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\WindowsBaltic.\
m"], "WindowsCyrillic.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\WindowsCyrillic.\
m"], "WindowsEastEurope.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\\
WindowsEastEurope.m"], "WindowsGreek.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\WindowsGreek.m"]\
, "WindowsThai.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\WindowsThai.m"],
                 "WindowsTurkish.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\WindowsTurkish.\
m"], "ZapfDingbats.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\CharacterEncodings\\ZapfDingbats.m"]\
}, "Formats" -> {
               "FormatMappings.m" -> 
                File["C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\SystemFiles\\Formats\\FormatMappings.m"]}}], 
            SynchronousUpdating -> False, SingleEvaluation -> True, 
            TrackedSymbols :> {}]}, False, Method -> "Active"]],
        DynamicModuleValues:>{}],
       Setting[#, {0}]& ]},
     {
      InterpretationBox[
       StyleBox[GridBox[{
          {
           CheckboxBox[Dynamic[
             MemberQ[
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CDCode"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CDCode"}, {}], 
              "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CDCode"], (($CellContext`files = If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CDCode"], 
               
               DeleteCases[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CDCode"], 
               
               Append[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CDCode"]])& )[
              BoxForm`TogglerBarFunction[
               If[
                
                MemberQ[$CellContext`files, 
                 "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CDCode"], {
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CDCode"}, {}], 
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CDCode", False], 
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CDCode"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CDCode"}, {}]]& ],
            DefaultBaseStyle->"CheckboxBar"], 
           TogglerBox[Dynamic[
             MemberQ[
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CDCode"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CDCode"}, {}], 
              "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CDCode"], (($CellContext`files = If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CDCode"], 
               
               DeleteCases[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CDCode"], 
               
               Append[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CDCode"]])& )[
              BoxForm`TogglerBarFunction[
               If[
                
                MemberQ[$CellContext`files, 
                 "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CDCode"], {
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CDCode"}, {}], 
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CDCode", False], 
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CDCode"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CDCode"}, {}]]& ], {True->
            StyleBox["\<\".CDCode\"\>", "CheckboxBarLabel",
             StripOnInput->False], False->
            StyleBox["\<\".CDCode\"\>", "CheckboxBarLabel",
             StripOnInput->False]}, 
            StyleBox["\<\".CDCode\"\>", "CheckboxBarLabel",
             StripOnInput->False],
            BaselinePosition->Baseline]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 2},
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.21]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "Deploy"],
       CheckboxBar[
        Dynamic[
         If[
          
          MemberQ[$CellContext`files, 
           "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CDCode"], {
          "C:\\Program Files\\Wolfram Research\\Mathematica\\13.3\\.CDCode"}, \
{}], ($CellContext`files = If[
           
           MemberQ[$CellContext`files, 
            "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CDCode"], 
           
           DeleteCases[$CellContext`files, 
            "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CDCode"], 
           
           Append[$CellContext`files, 
            "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CDCode"]])& ], {
        "C:\\Program Files\\Wolfram Research\\Mathematica\\13.3\\.CDCode" -> 
         ".CDCode"}, Method -> "Active"]]},
     {
      InterpretationBox[
       StyleBox[GridBox[{
          {
           CheckboxBox[Dynamic[
             MemberQ[
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CreationID"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CreationID"}, {}], 
              "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CreationID"], (($CellContext`files = If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CreationID"], 
               
               DeleteCases[$CellContext`files, 
                
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CreationID"], 
               
               Append[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CreationID"]])& )[
              BoxForm`TogglerBarFunction[
               If[
                
                MemberQ[$CellContext`files, 
                 "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CreationID"], {
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CreationID"}, {}], 
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CreationID", False], 
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CreationID"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CreationID"}, {}]]& ],
            DefaultBaseStyle->"CheckboxBar"], 
           TogglerBox[Dynamic[
             MemberQ[
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CreationID"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CreationID"}, {}], 
              "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CreationID"], (($CellContext`files = If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CreationID"], 
               
               DeleteCases[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CreationID"], 
               
               Append[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CreationID"]])& )[
              BoxForm`TogglerBarFunction[
               If[
                
                MemberQ[$CellContext`files, 
                 "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CreationID"], {
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CreationID"}, {}], 
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CreationID", False], 
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CreationID"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CreationID"}, {}]]& ], {True->
            StyleBox["\<\".CreationID\"\>", "CheckboxBarLabel",
             StripOnInput->False], False->
            StyleBox["\<\".CreationID\"\>", "CheckboxBarLabel",
             StripOnInput->False]}, 
            StyleBox["\<\".CreationID\"\>", "CheckboxBarLabel",
             StripOnInput->False],
            BaselinePosition->Baseline]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 2},
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.21]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "Deploy"],
       CheckboxBar[
        Dynamic[
         If[
          
          MemberQ[$CellContext`files, 
           "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CreationID"], {
          "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CreationID"}, {}], ($CellContext`files = If[
           
           MemberQ[$CellContext`files, 
            "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CreationID"], 
           
           DeleteCases[$CellContext`files, 
            "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CreationID"], 
           
           Append[$CellContext`files, 
            "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.CreationID"]])& ], {
        "C:\\Program Files\\Wolfram Research\\Mathematica\\13.3\\.CreationID" -> 
         ".CreationID"}, Method -> "Active"]]},
     {
      InterpretationBox[
       StyleBox[GridBox[{
          {
           CheckboxBox[Dynamic[
             MemberQ[
              If[
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\LICENSE.txt"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\LICENSE.txt"}, {}], 
              "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\LICENSE.txt"], (($CellContext`files = If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\LICENSE.txt"], 
               
               DeleteCases[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\LICENSE.txt"], 
               
               Append[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\LICENSE.txt"]])& )[
              BoxForm`TogglerBarFunction[
               If[
                
                MemberQ[$CellContext`files, 
                 "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\LICENSE.txt"], {
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\LICENSE.txt"}, {}], 
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\LICENSE.txt", False], 
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\LICENSE.txt"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\LICENSE.txt"}, {}]]& ],
            DefaultBaseStyle->"CheckboxBar"], 
           TogglerBox[Dynamic[
             MemberQ[
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\LICENSE.txt"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\LICENSE.txt"}, {}], 
              "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\LICENSE.txt"], (($CellContext`files = If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\LICENSE.txt"], 
               
               DeleteCases[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\LICENSE.txt"], 
               
               Append[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\LICENSE.txt"]])& )[
              BoxForm`TogglerBarFunction[
               If[
                
                MemberQ[$CellContext`files, 
                 "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\LICENSE.txt"], {
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\LICENSE.txt"}, {}], 
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\LICENSE.txt", False], 
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\LICENSE.txt"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\LICENSE.txt"}, {}]]& ], {True->
            StyleBox["\<\"LICENSE.txt\"\>", "CheckboxBarLabel",
             StripOnInput->False], False->
            StyleBox["\<\"LICENSE.txt\"\>", "CheckboxBarLabel",
             StripOnInput->False]}, 
            StyleBox["\<\"LICENSE.txt\"\>", "CheckboxBarLabel",
             StripOnInput->False],
            BaselinePosition->Baseline]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 2},
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.21]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "Deploy"],
       CheckboxBar[
        Dynamic[
         If[
          
          MemberQ[$CellContext`files, 
           "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\LICENSE.txt"], {
          "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\LICENSE.txt"}, {}], ($CellContext`files = If[
           
           MemberQ[$CellContext`files, 
            "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\LICENSE.txt"], 
           
           DeleteCases[$CellContext`files, 
            "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\LICENSE.txt"], 
           
           Append[$CellContext`files, 
            "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\LICENSE.txt"]])& ], {
        "C:\\Program Files\\Wolfram Research\\Mathematica\\13.3\\LICENSE.txt" -> 
         "LICENSE.txt"}, Method -> "Active"]]},
     {
      InterpretationBox[
       StyleBox[GridBox[{
          {
           CheckboxBox[Dynamic[
             MemberQ[
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.exe"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.exe"}, {}], 
              "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.exe"], (($CellContext`files = If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.exe"], 
               
               DeleteCases[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.exe"], 
               
               Append[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.exe"]])& )[
              BoxForm`TogglerBarFunction[
               If[
                
                MemberQ[$CellContext`files, 
                 "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.exe"], {
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.exe"}, {}], 
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.exe", False], 
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.exe"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.exe"}, {}]]& ],
            DefaultBaseStyle->"CheckboxBar"], 
           TogglerBox[Dynamic[
             MemberQ[
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.exe"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.exe"}, {}], 
              "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.exe"], (($CellContext`files = If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.exe"], 
               
               DeleteCases[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.exe"], 
               
               Append[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.exe"]])& )[
              BoxForm`TogglerBarFunction[
               If[
                
                MemberQ[$CellContext`files, 
                 "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.exe"], {
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.exe"}, {}], 
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.exe", False], 
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.exe"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.exe"}, {}]]& ], {True->
            StyleBox["\<\"Mathematica.exe\"\>", "CheckboxBarLabel",
             StripOnInput->False], False->
            StyleBox["\<\"Mathematica.exe\"\>", "CheckboxBarLabel",
             StripOnInput->False]}, 
            StyleBox["\<\"Mathematica.exe\"\>", "CheckboxBarLabel",
             StripOnInput->False],
            BaselinePosition->Baseline]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 2},
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.21]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "Deploy"],
       CheckboxBar[
        Dynamic[
         If[
          
          MemberQ[$CellContext`files, 
           "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.exe"], {
          "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.exe"}, {}], ($CellContext`files = If[
           
           MemberQ[$CellContext`files, 
            "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.exe"], 
           
           DeleteCases[$CellContext`files, 
            "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.exe"], 
           
           Append[$CellContext`files, 
            "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.exe"]])& ], {
        "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.exe" -> "Mathematica.exe"}, Method -> 
        "Active"]]},
     {
      InterpretationBox[
       StyleBox[GridBox[{
          {
           CheckboxBox[Dynamic[
             MemberQ[
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.VisualElementsManifest.xml"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.VisualElementsManifest.xml"}, {}], 
              "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.VisualElementsManifest.xml"], \
(($CellContext`files = If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.VisualElementsManifest.xml"], 
               
               DeleteCases[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.VisualElementsManifest.xml"], 
               
               Append[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.VisualElementsManifest.xml"]])& )[
              BoxForm`TogglerBarFunction[
               If[
                
                MemberQ[$CellContext`files, 
                 "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.VisualElementsManifest.xml"], {
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.VisualElementsManifest.xml"}, {}], 
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.VisualElementsManifest.xml", False], 
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.VisualElementsManifest.xml"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.VisualElementsManifest.xml"}, {}]]& ],
            DefaultBaseStyle->"CheckboxBar"], 
           TogglerBox[Dynamic[
             MemberQ[
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.VisualElementsManifest.xml"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.VisualElementsManifest.xml"}, {}], 
              "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.VisualElementsManifest.xml"], \
(($CellContext`files = If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.VisualElementsManifest.xml"], 
               
               DeleteCases[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.VisualElementsManifest.xml"], 
               
               Append[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.VisualElementsManifest.xml"]])& )[
              BoxForm`TogglerBarFunction[
               If[
                
                MemberQ[$CellContext`files, 
                 "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.VisualElementsManifest.xml"], {
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.VisualElementsManifest.xml"}, {}], 
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.VisualElementsManifest.xml", False], 
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.VisualElementsManifest.xml"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.VisualElementsManifest.xml"}, {}]]& \
], {True->
            
            StyleBox["\<\"Mathematica.VisualElementsManifest.xml\"\>", 
             "CheckboxBarLabel",
             StripOnInput->False], False->
            
            StyleBox["\<\"Mathematica.VisualElementsManifest.xml\"\>", 
             "CheckboxBarLabel",
             StripOnInput->False]}, 
            
            StyleBox["\<\"Mathematica.VisualElementsManifest.xml\"\>", 
             "CheckboxBarLabel",
             StripOnInput->False],
            BaselinePosition->Baseline]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 2},
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.21]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "Deploy"],
       CheckboxBar[
        Dynamic[
         If[
          
          MemberQ[$CellContext`files, 
           "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.VisualElementsManifest.xml"], {
          "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.VisualElementsManifest.xml"}, {}], \
($CellContext`files = If[
           
           MemberQ[$CellContext`files, 
            "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.VisualElementsManifest.xml"], 
           
           DeleteCases[$CellContext`files, 
            "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.VisualElementsManifest.xml"], 
           
           Append[$CellContext`files, 
            "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.VisualElementsManifest.xml"]])& ], {
        "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\Mathematica.VisualElementsManifest.xml" -> 
         "Mathematica.VisualElementsManifest.xml"}, Method -> "Active"]]},
     {
      InterpretationBox[
       StyleBox[GridBox[{
          {
           CheckboxBox[Dynamic[
             MemberQ[
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\math.exe"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\math.exe"}, {}], 
              "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\math.exe"], (($CellContext`files = If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\math.exe"], 
               
               DeleteCases[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\math.exe"], 
               
               Append[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\math.exe"]])& )[
              BoxForm`TogglerBarFunction[
               If[
                
                MemberQ[$CellContext`files, 
                 "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\math.exe"], {
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\math.exe"}, {}], 
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\math.exe", False], 
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\math.exe"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\math.exe"}, {}]]& ],
            DefaultBaseStyle->"CheckboxBar"], 
           TogglerBox[Dynamic[
             MemberQ[
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\math.exe"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\math.exe"}, {}], 
              "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\math.exe"], (($CellContext`files = If[
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\math.exe"], 
               
               DeleteCases[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\math.exe"], 
               
               Append[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\math.exe"]])& )[
              BoxForm`TogglerBarFunction[
               If[
                
                MemberQ[$CellContext`files, 
                 "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\math.exe"], {
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\math.exe"}, {}], 
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\math.exe", False], 
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\math.exe"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\math.exe"}, {}]]& ], {True->
            StyleBox["\<\"math.exe\"\>", "CheckboxBarLabel",
             StripOnInput->False], False->
            StyleBox["\<\"math.exe\"\>", "CheckboxBarLabel",
             StripOnInput->False]}, 
            StyleBox["\<\"math.exe\"\>", "CheckboxBarLabel",
             StripOnInput->False],
            BaselinePosition->Baseline]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 2},
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.21]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "Deploy"],
       CheckboxBar[
        Dynamic[
         If[
          
          MemberQ[$CellContext`files, 
           "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\math.exe"], {
          "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\math.exe"}, {}], ($CellContext`files = If[
           
           MemberQ[$CellContext`files, 
            "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\math.exe"], 
           
           DeleteCases[$CellContext`files, 
            "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\math.exe"], 
           
           Append[$CellContext`files, 
            "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\math.exe"]])& ], {
        "C:\\Program Files\\Wolfram Research\\Mathematica\\13.3\\math.exe" -> 
         "math.exe"}, Method -> "Active"]]},
     {
      InterpretationBox[
       StyleBox[GridBox[{
          {
           CheckboxBox[Dynamic[
             MemberQ[
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\MathKernel.exe"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\MathKernel.exe"}, {}], 
              "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\MathKernel.exe"], (($CellContext`files = If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\MathKernel.exe"], 
               
               DeleteCases[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\MathKernel.exe"], 
               
               Append[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\MathKernel.exe"]])& )[
              BoxForm`TogglerBarFunction[
               If[
                
                MemberQ[$CellContext`files, 
                 "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\MathKernel.exe"], {
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\MathKernel.exe"}, {}], 
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\MathKernel.exe", False], 
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\MathKernel.exe"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\MathKernel.exe"}, {}]]& ],
            DefaultBaseStyle->"CheckboxBar"], 
           TogglerBox[Dynamic[
             MemberQ[
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\MathKernel.exe"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\MathKernel.exe"}, {}], 
              "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\MathKernel.exe"], (($CellContext`files = If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\MathKernel.exe"], 
               
               DeleteCases[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\MathKernel.exe"], 
               
               Append[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\MathKernel.exe"]])& )[
              BoxForm`TogglerBarFunction[
               If[
                
                MemberQ[$CellContext`files, 
                 "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\MathKernel.exe"], {
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\MathKernel.exe"}, {}], 
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\MathKernel.exe", False], 
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\MathKernel.exe"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\MathKernel.exe"}, {}]]& ], {True->
            StyleBox["\<\"MathKernel.exe\"\>", "CheckboxBarLabel",
             StripOnInput->False], False->
            StyleBox["\<\"MathKernel.exe\"\>", "CheckboxBarLabel",
             StripOnInput->False]}, 
            StyleBox["\<\"MathKernel.exe\"\>", "CheckboxBarLabel",
             StripOnInput->False],
            BaselinePosition->Baseline]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 2},
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.21]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "Deploy"],
       CheckboxBar[
        Dynamic[
         If[
          
          MemberQ[$CellContext`files, 
           "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\MathKernel.exe"], {
          "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\MathKernel.exe"}, {}], ($CellContext`files = If[
           
           MemberQ[$CellContext`files, 
            "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\MathKernel.exe"], 
           
           DeleteCases[$CellContext`files, 
            "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\MathKernel.exe"], 
           
           Append[$CellContext`files, 
            "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\MathKernel.exe"]])& ], {
        "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\MathKernel.exe" -> "MathKernel.exe"}, Method -> 
        "Active"]]},
     {
      InterpretationBox[
       StyleBox[GridBox[{
          {
           CheckboxBox[Dynamic[
             MemberQ[
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.VersionID"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.VersionID"}, {}], 
              "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.VersionID"], (($CellContext`files = If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.VersionID"], 
               
               DeleteCases[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.VersionID"], 
               
               Append[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.VersionID"]])& )[
              BoxForm`TogglerBarFunction[
               If[
                
                MemberQ[$CellContext`files, 
                 "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.VersionID"], {
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.VersionID"}, {}], 
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.VersionID", False], 
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.VersionID"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.VersionID"}, {}]]& ],
            DefaultBaseStyle->"CheckboxBar"], 
           TogglerBox[Dynamic[
             MemberQ[
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.VersionID"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.VersionID"}, {}], 
              "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.VersionID"], (($CellContext`files = If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.VersionID"], 
               
               DeleteCases[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.VersionID"], 
               
               Append[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.VersionID"]])& )[
              BoxForm`TogglerBarFunction[
               If[
                
                MemberQ[$CellContext`files, 
                 "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.VersionID"], {
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.VersionID"}, {}], 
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.VersionID", False], 
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.VersionID"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.VersionID"}, {}]]& ], {True->
            StyleBox["\<\".VersionID\"\>", "CheckboxBarLabel",
             StripOnInput->False], False->
            StyleBox["\<\".VersionID\"\>", "CheckboxBarLabel",
             StripOnInput->False]}, 
            StyleBox["\<\".VersionID\"\>", "CheckboxBarLabel",
             StripOnInput->False],
            BaselinePosition->Baseline]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 2},
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.21]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "Deploy"],
       CheckboxBar[
        Dynamic[
         If[
          
          MemberQ[$CellContext`files, 
           "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.VersionID"], {
          "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.VersionID"}, {}], ($CellContext`files = If[
           
           MemberQ[$CellContext`files, 
            "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.VersionID"], 
           
           DeleteCases[$CellContext`files, 
            "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.VersionID"], 
           
           Append[$CellContext`files, 
            "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\.VersionID"]])& ], {
        "C:\\Program Files\\Wolfram Research\\Mathematica\\13.3\\.VersionID" -> 
         ".VersionID"}, Method -> "Active"]]},
     {
      InterpretationBox[
       StyleBox[GridBox[{
          {
           CheckboxBox[Dynamic[
             MemberQ[
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolfram.exe"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolfram.exe"}, {}], 
              "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolfram.exe"], (($CellContext`files = If[
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolfram.exe"], 
               
               DeleteCases[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolfram.exe"], 
               
               Append[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolfram.exe"]])& )[
              BoxForm`TogglerBarFunction[
               If[
                
                MemberQ[$CellContext`files, 
                 "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolfram.exe"], {
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolfram.exe"}, {}], 
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolfram.exe", False], 
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolfram.exe"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolfram.exe"}, {}]]& ],
            DefaultBaseStyle->"CheckboxBar"], 
           TogglerBox[Dynamic[
             MemberQ[
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolfram.exe"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolfram.exe"}, {}], 
              "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolfram.exe"], (($CellContext`files = If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolfram.exe"], 
               
               DeleteCases[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolfram.exe"], 
               
               Append[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolfram.exe"]])& )[
              BoxForm`TogglerBarFunction[
               If[
                
                MemberQ[$CellContext`files, 
                 "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolfram.exe"], {
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolfram.exe"}, {}], 
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolfram.exe", False], 
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolfram.exe"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolfram.exe"}, {}]]& ], {True->
            StyleBox["\<\"wolfram.exe\"\>", "CheckboxBarLabel",
             StripOnInput->False], False->
            StyleBox["\<\"wolfram.exe\"\>", "CheckboxBarLabel",
             StripOnInput->False]}, 
            StyleBox["\<\"wolfram.exe\"\>", "CheckboxBarLabel",
             StripOnInput->False],
            BaselinePosition->Baseline]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 2},
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.21]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "Deploy"],
       CheckboxBar[
        Dynamic[
         If[
          
          MemberQ[$CellContext`files, 
           "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolfram.exe"], {
          "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolfram.exe"}, {}], ($CellContext`files = If[
           
           MemberQ[$CellContext`files, 
            "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolfram.exe"], 
           
           DeleteCases[$CellContext`files, 
            "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolfram.exe"], 
           
           Append[$CellContext`files, 
            "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolfram.exe"]])& ], {
        "C:\\Program Files\\Wolfram Research\\Mathematica\\13.3\\wolfram.exe" -> 
         "wolfram.exe"}, Method -> "Active"]]},
     {
      InterpretationBox[
       StyleBox[GridBox[{
          {
           CheckboxBox[Dynamic[
             MemberQ[
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\WolframKernel.exe"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\WolframKernel.exe"}, {}], 
              "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\WolframKernel.exe"], (($CellContext`files = If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\WolframKernel.exe"], 
               
               DeleteCases[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\WolframKernel.exe"], 
               
               Append[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\WolframKernel.exe"]])& )[
              BoxForm`TogglerBarFunction[
               If[
                
                MemberQ[$CellContext`files, 
                 "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\WolframKernel.exe"], {
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\WolframKernel.exe"}, {}], 
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\WolframKernel.exe", False], 
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\WolframKernel.exe"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\WolframKernel.exe"}, {}]]& ],
            DefaultBaseStyle->"CheckboxBar"], 
           TogglerBox[Dynamic[
             MemberQ[
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\WolframKernel.exe"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\WolframKernel.exe"}, {}], 
              "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\WolframKernel.exe"], (($CellContext`files = If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\WolframKernel.exe"], 
               
               DeleteCases[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\WolframKernel.exe"], 
               
               Append[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\WolframKernel.exe"]])& )[
              BoxForm`TogglerBarFunction[
               If[
                
                MemberQ[$CellContext`files, 
                 "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\WolframKernel.exe"], {
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\WolframKernel.exe"}, {}], 
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\WolframKernel.exe", False], 
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\WolframKernel.exe"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\WolframKernel.exe"}, {}]]& ], {True->
            StyleBox["\<\"WolframKernel.exe\"\>", "CheckboxBarLabel",
             StripOnInput->False], False->
            StyleBox["\<\"WolframKernel.exe\"\>", "CheckboxBarLabel",
             StripOnInput->False]}, 
            StyleBox["\<\"WolframKernel.exe\"\>", "CheckboxBarLabel",
             StripOnInput->False],
            BaselinePosition->Baseline]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 2},
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.21]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "Deploy"],
       CheckboxBar[
        Dynamic[
         If[
          
          MemberQ[$CellContext`files, 
           "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\WolframKernel.exe"], {
          
          "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\WolframKernel.exe"}, {}], ($CellContext`files = 
         If[
           
           MemberQ[$CellContext`files, 
            "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\WolframKernel.exe"], 
           
           DeleteCases[$CellContext`files, 
            "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\WolframKernel.exe"], 
           
           Append[$CellContext`files, 
            "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\WolframKernel.exe"]])& ], {
        "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\WolframKernel.exe" -> "WolframKernel.exe"}, 
        Method -> "Active"]]},
     {
      InterpretationBox[
       StyleBox[GridBox[{
          {
           CheckboxBox[Dynamic[
             MemberQ[
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolframscript.exe"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolframscript.exe"}, {}], 
              "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolframscript.exe"], (($CellContext`files = If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolframscript.exe"], 
               
               DeleteCases[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolframscript.exe"], 
               
               Append[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolframscript.exe"]])& )[
              BoxForm`TogglerBarFunction[
               If[
                
                MemberQ[$CellContext`files, 
                 "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolframscript.exe"], {
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolframscript.exe"}, {}], 
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolframscript.exe", False], 
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolframscript.exe"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolframscript.exe"}, {}]]& ],
            DefaultBaseStyle->"CheckboxBar"], 
           TogglerBox[Dynamic[
             MemberQ[
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolframscript.exe"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolframscript.exe"}, {}], 
              "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolframscript.exe"], (($CellContext`files = If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolframscript.exe"], 
               
               DeleteCases[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolframscript.exe"], 
               
               Append[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolframscript.exe"]])& )[
              BoxForm`TogglerBarFunction[
               If[
                
                MemberQ[$CellContext`files, 
                 "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolframscript.exe"], {
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolframscript.exe"}, {}], 
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolframscript.exe", False], 
              If[
               
               MemberQ[$CellContext`files, 
                "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolframscript.exe"], {
               "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolframscript.exe"}, {}]]& ], {True->
            StyleBox["\<\"wolframscript.exe\"\>", "CheckboxBarLabel",
             StripOnInput->False], False->
            StyleBox["\<\"wolframscript.exe\"\>", "CheckboxBarLabel",
             StripOnInput->False]}, 
            StyleBox["\<\"wolframscript.exe\"\>", "CheckboxBarLabel",
             StripOnInput->False],
            BaselinePosition->Baseline]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 2},
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.21]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}], "Deploy"],
       CheckboxBar[
        Dynamic[
         If[
          
          MemberQ[$CellContext`files, 
           "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolframscript.exe"], {
          "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolframscript.exe"}, {}], ($CellContext`files = 
         If[
           
           MemberQ[$CellContext`files, 
            "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolframscript.exe"], 
           
           DeleteCases[$CellContext`files, 
            "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolframscript.exe"], 
           
           Append[$CellContext`files, 
            "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolframscript.exe"]])& ], {
        "C:\\Program Files\\Wolfram \
Research\\Mathematica\\13.3\\wolframscript.exe" -> "wolframscript.exe"}, 
        Method -> "Active"]]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"],
  DynamicModuleValues:>{},
  Initialization:>({PeterBurbery`FileUtilities`Private`viewer[
       Blank[], {}] := "No files to show", 
     PeterBurbery`FileUtilities`Private`viewer[
       Dynamic[
        Pattern[PeterBurbery`FileUtilities`Private`files, 
         Blank[]]], 
       Pattern[PeterBurbery`FileUtilities`Private`list, 
        Blank[List]]] := Column[
       Replace[PeterBurbery`FileUtilities`Private`list, {Verbatim[Rule][
           Pattern[PeterBurbery`FileUtilities`Private`file, 
            Blank[]], 
           File[
            Pattern[PeterBurbery`FileUtilities`Private`name, 
             Blank[]]]] :> PeterBurbery`FileUtilities`Private`fileToggler[
           Dynamic[PeterBurbery`FileUtilities`Private`files], 
           PeterBurbery`FileUtilities`Private`name], Verbatim[Rule][
           Pattern[PeterBurbery`FileUtilities`Private`dir, 
            Blank[]], 
           Pattern[PeterBurbery`FileUtilities`Private`dirContents, 
            Blank[List]]] :> 
         OpenerView[{PeterBurbery`FileUtilities`Private`dir, 
            Dynamic[
             PeterBurbery`FileUtilities`Private`viewer[
              Dynamic[PeterBurbery`FileUtilities`Private`files], 
              PeterBurbery`FileUtilities`Private`dirContents], 
             SynchronousUpdating -> False, SingleEvaluation -> True, 
             TrackedSymbols :> {}]}, False, Method -> "Active"]}, {1}]], 
     PeterBurbery`FileUtilities`Private`fileToggler[
       Dynamic[
        Pattern[PeterBurbery`FileUtilities`Private`files, 
         Blank[]]], 
       Pattern[PeterBurbery`FileUtilities`Private`file, 
        Blank[]]] := CheckboxBar[
       Dynamic[
        If[
         MemberQ[
         PeterBurbery`FileUtilities`Private`files, 
          PeterBurbery`FileUtilities`Private`file], {
         PeterBurbery`FileUtilities`Private`file}, {}], (
        PeterBurbery`FileUtilities`Private`files = If[
          MemberQ[
          PeterBurbery`FileUtilities`Private`files, 
           PeterBurbery`FileUtilities`Private`file], 
          DeleteCases[
          PeterBurbery`FileUtilities`Private`files, 
           PeterBurbery`FileUtilities`Private`file], 
          Append[
          PeterBurbery`FileUtilities`Private`files, 
           PeterBurbery`FileUtilities`Private`file]])& ], {
       PeterBurbery`FileUtilities`Private`file -> 
        FileNameTake[PeterBurbery`FileUtilities`Private`file]}, Method -> 
       "Active"], $CellContext`files = {}}; If[
     Not[
      ListQ[$CellContext`files]], $CellContext`files = {}])]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.8950030846998844`*^9, 3.8950031348458176`*^9}},
 CellLabel->"Out[30]=",
 CellID->950158629,ExpressionUUID->"8796a5c1-ffb4-41bc-b04c-2c87b1400757"]
}, Open  ]],

Cell["See the selected files:", "Text",
 TaggingRules->{},
 CellChangeTimes->{3.8950031441211395`*^9},
 CellID->746489481,ExpressionUUID->"db9f2a9a-cf32-4191-8a53-0368dcbf0cd5"],

Cell[CellGroupData[{

Cell[BoxData["files"], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.895003145496266*^9, 3.8950031462024374`*^9}},
 CellLabel->"In[31]:=",
 CellID->153609555,ExpressionUUID->"4e445cc4-9a8a-4e57-9a8b-a30dd867a286"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"C:\\\\Program Files\\\\Wolfram Research\\\\Mathematica\\\\13.3\
\\\\WolframKernel.exe\"\>", 
   ",", "\<\"C:\\\\Program Files\\\\Wolfram Research\\\\Mathematica\\\\13.3\\\
\\.CDCode\"\>", 
   ",", "\<\"C:\\\\Program Files\\\\Wolfram Research\\\\Mathematica\\\\13.3\\\
\\SystemFiles\\\\Formats\\\\FormatMappings.m\"\>", 
   ",", "\<\"C:\\\\Program Files\\\\Wolfram Research\\\\Mathematica\\\\13.3\\\
\\SystemFiles\\\\CharacterEncodings\\\\AdobeStandard.m\"\>", 
   ",", "\<\"C:\\\\Program Files\\\\Wolfram Research\\\\Mathematica\\\\13.3\\\
\\Documentation\\\\English\\\\PacletInfo.wl\"\>", 
   ",", "\<\"C:\\\\Program Files\\\\Wolfram Research\\\\Mathematica\\\\13.3\\\
\\Configuration\\\\Licensing\\\\playerpass\"\>"}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8950031465162573`*^9},
 CellLabel->"Out[31]=",
 CellID->239753367,ExpressionUUID->"8d026408-4503-4ac5-ae0e-9d07c80365e0"]
}, Open  ]],

Cell["Import an image:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8950031738918333`*^9, 3.8950031786166964`*^9}},
 CellID->981915180,ExpressionUUID->"7d2d9b2d-0fdf-4b06-91bc-1c32bbf222f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImageRead", "[", 
  RowBox[{"\"\<PNG\>\"", ",", 
   RowBox[{"EchoEvaluation", "[", 
    RowBox[{"FindFile", "[", "\"\<ExampleData/spikey2.png\>\"", "]"}], 
    "]"}]}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8950031829208827`*^9, 3.8950031912222223`*^9}},
 CellLabel->"In[32]:=",
 CellID->8185482,ExpressionUUID->"129ac957-2e39-47d7-8390-4d49aac6e38e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindFile", "[", "\<\"ExampleData/spikey2.png\"\>", 
  "]"}]], "EchoBefore",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{
      StyleBox["\[LeftGuillemet]", "EchoBeforeDingbat"], {
       FrontEnd`EvaluationNotebook[], "9ec9d037-a0af-4791-a3a4-a16e825297c5"},
       None}, "HyperlinkDefault"]]],
 TaggingRules->{},
 CellChangeTimes->{3.8950031915997543`*^9},
 CellTags->"cdeba01d-19d6-40aa-af98-71dfd34eecb8",
 CellID->763877680,ExpressionUUID->"ac6d4142-c362-48d8-aa85-58f7b468ba94"],

Cell[BoxData[
 TagBox[
  TooltipBox["\<\"C:\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\13.3\\\\Documentation\\\\English\\\\System\\\\\
ExampleData\\\\spikey2.png\"\>",
   RowBox[{"FindFile", "[", "\"ExampleData/spikey2.png\"", "]"}]],
  Annotation[#, 
   FindFile["ExampleData/spikey2.png"], "Tooltip"]& ]], "EchoAfter",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{
      StyleBox["\[RightGuillemet]", "EchoAfterDingbat"], {
       FrontEnd`EvaluationNotebook[], "cdeba01d-19d6-40aa-af98-71dfd34eecb8"},
       None}, "HyperlinkDefault"]]],
 TaggingRules->{},
 CellChangeTimes->{3.895003194400673*^9},
 CellTags->"9ec9d037-a0af-4791-a3a4-a16e825297c5",
 CellID->22174356,ExpressionUUID->"e034fee7-3966-4b30-bdb4-732ed09727a9"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
xhaE7wQ6ehITbYF7fzOg+06f5d4Bx31Drtt6LV86a721w3DrMe3NB8R3Pzg7
saNDc6JFe6qVe+yU8Ei76PApyZETvL0nZCc72AdbmftO0l44zNhxSNE36LYq
AosF/9qKt1JMLNVzK/XkQjm3vJpZWk3UFjPLawBlulIL5xb8hY1Q+bw7s+Qt
rYVqF0O1C450w5ZadmTXgGypJUus7smt25OLxkDZ4CpqHQWDtw7wGb11QNDk
WzL7l/TOKvjQxObKvKnMNZYFtobQucK11Hm2JaFzTWBf5rvWaaos5ewY8Tc/
5G27W/7y3yl2/dg7sveNC6t/ELtgICQQavhCs0DklCgCamNaa87JNQmJMqbQ
JJWapFqT0GgSWk1cp4kbtGASEyjiDHmSJUvx5FmhMi9U5PmyDH2TF8hPsgAo
SgH7CAl4M00WxIjzcTgnPE71TTOjs+zEDCs+SQ9NADFC0+zYLC85Tg93o32d
2HA3IdZNiJ9BB1vgvuPI0F64b8eU9WeD5nuGvfcOOr/aa/nLPtut/fZbW9Q3
H5J/6Xl62zN92hOnFS0tspPtkpNt80fbpEdPyY+d4O8+Lth3Qnikjbv/tPBo
B2N3C3vXMf6hVimF46/Xo1cu+VaWIusr4cWaP5dPN1Yziyvxaj23upFqLDsS
RU9uNVjcCFcueHMr7txysHY+WN2wJuqOzJojswpQWmI1d3YNyJle1vhLKldJ
71kw+Re1zjJY25i8da2zKrGWOYY839oQOpZFrtV558q8c5llKAscq0Dzgass
VZZ0eB/p13eJd3xPs+9+9d4fm05tu7xQ+EPd9+GHHy42lhwWt0nvVas8eCSX
gBbPyyNyfUamT8sMaakuKTdmlKas2pTT24p8eZQmjNIFUdD+mOIYR57hqws0
EUTiR6iiJFOW/Z1ydEmGCvITQJTnEYLkFAea4ydn2fE5bnpTKaAZZmyKEe7F
OVsxvg5yooMU78BHDsJcu5DhZ+b8TyJCL2OhByc9d/fbv9pn+0Kv9eZB59da
1Tfvl9y0Z/65w1hVa4f06En5yTbpqU5DR5fw6CnpsVPAfdzD7fOHzzD2tTB3
n+AfaBMf7+IcbKXva2fs6eZ2zxj1Nk+1Gr6wET2/EVxZdhUqUH013lgNFyvJ
+pK3suoqrrnzq978qr+w7suvevLLgeo5d37FGm8AiLbk0hZBR2rJFKubkmum
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
VpTb/Hpqzys5TcupqfFsciLh7xlO9OTDpXRsLBUZLgQyEVsy7S+emD/5l5w4
eeTAJL2rU+hQOfYp3fWSMX/43/yS2Zmzsu6EWpUmqD65PCmVJFmmdOnSn3SH
iE9u31HtEHWurDmYy40W8tMjw59//rivHfqN1Rc6pm/LntDbu4Jt+6PR/VWD
TW9MOfSf37935cqtRHgkFywOxkqJYF8yfCAfzPeE0mOD45/c+Uv/aBZsFTVw
3gaJs0HB7xUdHRj6U75q9MBxcWfMYCggaEkkiuu1yZnpP/WvB+/fux8mfKL3
6wai8eFs5sKZ03/B0/8O1ZmPru9uEVZXBTbVRr0dyqGm34xTktvXytl48vhi
xNvbE8nnQoVE+EAqUOoLZU7MHHlU3/r45Ly7Ue5qlDtquy4d+1PvONbXMy8V
xcxIEY4pujrDpeLXOwU+7YyqtrcVAsGJwYEfxq8LC0NH1+zwvFst6FptpYa3
DyItt69frXxqcuJ42JkdiBWToYFEaKjoT88dOPxHutXXrc/vf55E7Nbq9oBI
f+PrnEubTkyKRVGDIdfdnWQt6Vtf837H8+OzRJsmZnde+kH87agKL66tCtbU
+4WmnSOaPVfOPcgWmNYGSpMZb7YYKUGWpn25Q8XBO7ce8Xv78wcOM7taEkbL
13qrpJyHwYMqRUqlzsikwbNnvjaI8yfO2pRobzrzxb98v2147ead2jZhza6A
rWH/gGz7lS8dKN28eScR7uuJFJLBvoS3OJws3bz26O/MDo4OaYkU5fi6Xwj+
9bqHpdKYRBzNZkb+jG99987diMs3Pfkt3GjpEdbByVOb9gabq0359k0XZg5+
+VMfXbwiuLL5UCHq64P8vHDqmzpja/7QZE84/md84c0bd+y2vo72IIUn/+XP
stInn3yycPT7fRqFL354zUbc11z10dxXTyqfmlhIeLJxf0/Kmzt95Ng39xzu
3bt3+c+9DjlApMi8pNt/8eIffHvtB1x3P/tMpI4ptted6P89FujNj8bd6agn
P9E/+ginl0de589d1mhCw0OP786P351aOHVp56a2ub7c737qs08/S4VKEUdy
MDPw6Xf+fMmFhbOp1MC3/Sy+hfK6o14r/3s7yOWPr0Y96aQve+PK9+OX2ouL
F+78xW8yfO9qZGj407u//6c+fuSUjw2dOf4Dedfi/8E60H9wdODgv/3v/n99
Jwtm7PHR8buf/DD/GuEbqv8DGaZTDQ==
    "], {{0, 135.}, {150., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJydlndUVNcWh8+9d3qhzTDSGXqvUgYQ6R2kV1EZZgYYygDDDIhdRFQwoohI
UwQJChgwGorEiigWgqIC9oAEATUGo4iK5d2RtaIrL++9vPz+OOu7++x97jl7
73PX1YhPD0mAAQBZBHQIYee4CIXs3FAZ9CFckMVPFPC4PgIRL5EnZMVDqNGb
gg6A4u3PF6TDqFeaQCQM8XJlRkXHMPH9AAZEgAMWALA5WRkBoZ5hEm8fDzdm
FuoEvghd6vWQZATgpol3EJMJ/j/JcjKEInSZIJQXcnlZHJTzUU7NEWVI7NMo
0+NTJAxjJCxEN4iygoQT59n4s888O0uYmybgoizZcwY3jSvhHpS3Zot5KCP+
KBdk83k5KN9CWTtVnMZH+Y0kNo3HzgIAI8mOtojHSULZXJIoYViIG8qLACBQ
Er/i+K9YxFspkhzKLT0jV8hPTBIx9TkGTAs7OxbTm5eTyhOJTILYnBS2kMt0
S0/LYAtyAZg/82fJSXLLRJNsY2FnY2NiaWrxVaL+6+TflKS28/Qy+HPNIEbf
F9tf+aXXAcCaQXOz84stvgKAjs0AKNz9YtM+AIA0Wrf2a1+dhyHplySRKMPe
zCwnJ8eUz+OYShL6h/6nw9/QV+8zlSz3R3qY7rwEtjhVxJTkjZOemi4WMrMy
2Bwe0+TPTfyPA/96H8YhvASekCdAIyLQLuMLEtFyC7h8ET9dwOQL/lMR/2HY
nzTf16ho9R8BfYUpkLlGB8ivfQBDIwMkdj86A/1RN39iBJDcvEj1ifm+/yzo
31eFiyUD+hn5HOcWEsbkiIXZ83OSawmwgASkAR0oAjWgBfSBCbAEtsABOAMP
4AsCQRiIBssBBySBNCAEOWAN2AgKQBHYCfaASlAD6kEjaAHHQAc4Cc6Bi+Aq
uA4GwT0wAsbBUzANXoM5CILwEBWiQYqQOqQDGUGWEAtaDHlA/lAIFA3FQYmQ
ABJDa6BNUBFUAlVCtVAj9D10AjoHXYYGoDvQKDQF/Q69gxGYAtNhVVgXNoNZ
sAvsB4fBy+BEOBNeBefDO+ByuA4+ArfD5+Cr8CA8Aj+FZxCAkBEGooGYICzE
DQlEYpAERIisQwqRMqQOaUG6kF7kJjKCPEPeYnAYGoaJMcE4YLwx4RgOJhOz
DrMdU4k5jGnH9GBuYkYx05iPWCpWBWuEtcf6YKOwidgcbAG2DNuAbcNewA5i
x7GvcTgcA6eHs8V546JxybjVuO24fbhW3FncAG4MN4PH4xXxRnhHfCCejRfh
C/AV+CP4M/gb+HH8GwKZoE6wJHgSYggCQh6hjNBEOE24QZggzBFliDpEe2Ig
kUvMJRYT64ldxGvEceIcSZakR3IkhZGSSRtJ5aQW0gXSfdJLMpmsSbYjB5P5
5A3kcvJR8iXyKPktRY5iSHGjxFLElB2UQ5SzlDuUl1QqVZfqTI2hiqg7qI3U
89SH1DdSNClTKR8prtR6qSqpdqkbUs+lidI60i7Sy6VXSZdJH5e+Jv1Mhiij
K+Mmw5ZZJ1Mlc0JmWGZGliZrIRsomya7XbZJ9rLspBxeTlfOQ44rly93UO68
3BgNoWnR3Ggc2iZaPe0CbZyOo+vRfejJ9CL6d/R++rS8nLyVfIT8Svkq+VPy
IwyEocvwYaQyihnHGEOMdwtUF7gs4C3YtqBlwY0FswrKCs4KPIVChVaFQYV3
ikxFD8UUxV2KHYoPlDBKhkrBSjlK+5UuKD1Tpis7KHOUC5WPKd9VgVUMVUJU
VqscVOlTmVFVU/VSzVCtUD2v+kyNoeaslqxWqnZabUqdpr5Yna9eqn5G/QlT
nunCTGWWM3uY0xoqGt4aYo1ajX6NOU09zXDNPM1WzQdaJC2WVoJWqVa31rS2
unaA9hrtZu27OkQdlk6Szl6dXp1ZXT3dSN0tuh26k3oKej56q/Sa9e7rU/Wd
9DP16/RvGeAMWAYpBvsMrhvChtaGSYZVhteMYCMbI77RPqMBY6yxnbHAuM54
2IRi4mKSbdJsMmrKMPU3zTPtMH1upm0WY7bLrNfso7m1eap5vfk9CzkLX4s8
iy6L3y0NLTmWVZa3FlIXei5cv7Bz4QsrIyue1X6r29Y06wDrLdbd1h9sbG2E
Ni02U7batnG21bbDLDoriLWddckOa+dqt97upN1bext7kf0x+98cTBxSHJoc
JhfpLeItql805qjpyHasdRxZzFwct/jA4hEnDSe2U53TI2ctZ65zg/OEi4FL
sssRl+eu5q5C1zbXWTd7t7VuZ90Rdy/3Qvd+DzmPcI9Kj4eemp6Jns2e017W
Xqu9znpjvf28d3kP+6j6cHwafaZ9bX3X+vb4UfxC/Sr9Hvkb+gv9uwLgAN+A
3QH3l+gsESzpCASBPoG7Ax8E6QVlBv0YjAsOCq4KfhxiEbImpDeUFroitCn0
dZhrWHHYvXD9cHF4d4R0RGxEY8RspHtkSeRIlFnU2qir0UrR/OjOGHxMRExD
zMxSj6V7lo7HWscWxA4t01u2ctnl5UrLU5efWiG9gr3ieBw2LjKuKe49O5Bd
x56J94mvjp/muHH2cp5ynbml3CmeI6+EN5HgmFCSMJnomLg7cSrJKaks6Rnf
jV/Jf5HsnVyTPJsSmHIo5VNqZGprGiEtLu2EQE6QIuhJV0tfmT6QYZRRkDGS
aZ+5J3Na6CdsyIKylmV1iujoz1SfWF+8WTyavTi7KvtNTkTO8ZWyKwUr+3IN
c7flTqzyXPXtasxqzuruNRprNq4ZXeuytnYdtC5+Xfd6rfX568c3eG04vJG0
MWXjT3nmeSV5rzZFburKV83fkD+22Wtzc4FUgbBgeIvDlpqtmK38rf3bFm6r
2PaxkFt4pci8qKzo/XbO9ivfWHxT/s2nHQk7+ottivfvxO0U7Bza5bTrcIls
yaqSsd0Bu9tLmaWFpa/2rNhzucyqrGYvaa9470i5f3lnhXbFzor3lUmVg1Wu
Va3VKtXbqmf3cffd2O+8v6VGtaao5t0B/oHbtV617XW6dWUHcQezDz6uj6jv
/Zb1bWODUkNRw4dDgkMjh0MO9zTaNjY2qTQVN8PN4uapI7FHrn/n/l1ni0lL
bSujtegoOCo++uT7uO+Hjvkd6z7OOt7yg84P1W20tsJ2qD23fbojqWOkM7pz
4ITvie4uh662H01/PHRS42TVKflTxadJp/NPfzqz6szM2Yyzz84lnhvrXtF9
73zU+Vs9wT39F/wuXLroefF8r0vvmUuOl05etr984grrSsdVm6vtfdZ9bT9Z
/9TWb9Pffs32Wud1u+tdA4sGTt9wunHupvvNi7d8bl0dXDI4MBQ+dHs4dnjk
Nvf25J3UOy/uZt+du7fhPvZ+4QOZB2UPVR7W/Wzwc+uIzcipUffRvkehj+6N
ccae/pL1y/vx/MfUx2UT6hONk5aTJ6c8p64/Wfpk/GnG07lnBb/K/lr9XP/5
D785/9Y3HTU9/kL44tPv218qvjz0yupV90zQzMPXaa/nZgvfKL45/Jb1tvdd
5LuJuZz3+PflHww+dH30+3j/U9qnT/8CDLcAuA==
      "], "RGB", "XYZ"], Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{150., 135.},
  PlotRange->{{0, 150.}, {0, 135.}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.895003197245651*^9},
 CellLabel->"Out[32]=",
 CellID->67112014,ExpressionUUID->"3b84ce39-124d-4f94-9b53-f05916eed666"]
}, Open  ]],

Cell["Export a random image as a PNG file:", "Text",
 TaggingRules->{},
 CellChangeTimes->{3.8950032247412863`*^9},
 CellID->80727245,ExpressionUUID->"dd5cd118-1641-4489-bc99-e22bbf2710e4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"file", "=", 
  RowBox[{"Export", "[", 
   RowBox[{"\"\<test.png\>\"", ",", 
    RowBox[{"RandomImage", "[", 
     RowBox[{"1", ",", 
      RowBox[{"{", 
       RowBox[{"1000", ",", "1000"}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.895003210324088*^9, 3.8950032103294053`*^9}},
 CellLabel->"In[33]:=",
 CellID->292542561,ExpressionUUID->"4fdd4918-9dba-4963-9ab2-410ceb27caa3"],

Cell[BoxData["\<\"test.png\"\>"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8950032122875166`*^9},
 CellLabel->"Out[33]=",
 CellID->412342284,ExpressionUUID->"1fbd0d33-e745-4874-aaa9-8da0c7fee6d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timing1", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ResourceFunction", "[", "\"\<ImageRead\>\"", "]"}], "[", 
       RowBox[{"\"\<PNG\>\"", ",", "file"}], "]"}], ",", "100"}], "]"}], "//",
     "AbsoluteTiming"}], "//", "First"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.895003218407055*^9, 3.89500321841105*^9}},
 CellLabel->"In[34]:=",
 CellID->13665073,ExpressionUUID->"60477569-3f67-44d3-ab53-658f17918b12"],

Cell[BoxData["5.6665589`"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8950032254081287`*^9},
 CellLabel->"Out[34]=",
 CellID->20701040,ExpressionUUID->"97169d17-54be-4b34-92de-1a76974a1da0"]
}, Open  ]],

Cell["Repeat the same experiment with Import:", "Text",
 TaggingRules->{},
 CellChangeTimes->{3.8950032388742366`*^9},
 CellID->145043357,ExpressionUUID->"615b5823-7dc4-4cfd-a914-b083b016900a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timing2", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"Import", "[", "file", "]"}], ",", "100"}], "]"}], "//", 
    "AbsoluteTiming"}], "//", "First"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8950032410492263`*^9, 3.8950032410538263`*^9}},
 CellLabel->"In[35]:=",
 CellID->115392360,ExpressionUUID->"3d9de87e-5041-4b0f-bd88-9a62860b3ab3"],

Cell[BoxData["63.824473`"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.895003305882863*^9},
 CellLabel->"Out[35]=",
 CellID->465384597,ExpressionUUID->"d45948f6-135e-498b-887c-c3e182763354"]
}, Open  ]],

Cell["Export a random image as a PNG file:", "Text",
 TaggingRules->{},
 CellChangeTimes->{3.8950032978163204`*^9},
 CellID->491505893,ExpressionUUID->"fa059cbe-83f8-411c-ba4b-5cd9cb4e62ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"file", "=", 
  RowBox[{"Export", "[", 
   RowBox[{"\"\<test.png\>\"", ",", 
    RowBox[{"RandomImage", "[", 
     RowBox[{"1", ",", 
      RowBox[{"{", 
       RowBox[{"1000", ",", "1000"}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8950033011997643`*^9, 3.895003301202772*^9}},
 CellLabel->"In[36]:=",
 CellID->279200587,ExpressionUUID->"da253a6c-1d81-42ae-a858-9f94d25bdd20"],

Cell[BoxData["\<\"test.png\"\>"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8950033096915197`*^9},
 CellLabel->"Out[36]=",
 CellID->383083076,ExpressionUUID->"a6898eba-1b39-4089-9843-bfa02db534f5"]
}, Open  ]],

Cell["\<\
Import the file with ReadPNG one hundred times, noting the elapsed time:\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{3.895003317026704*^9},
 CellID->9291128,ExpressionUUID->"d9cb2a12-5ca7-4f3d-8105-cd4e28427e10"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timing1", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"ReadPNG", "[", "file", "]"}], ",", "100"}], "]"}], "//", 
    "AbsoluteTiming"}], "//", "First"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8950033195698085`*^9, 3.895003322391246*^9}},
 CellLabel->"In[37]:=",
 CellID->999946278,ExpressionUUID->"b9b7dbda-8ac0-4d20-bb53-ff4d46d7cf21"],

Cell[BoxData["0.839192`"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8950033234483824`*^9},
 CellLabel->"Out[37]=",
 CellID->851394999,ExpressionUUID->"e990ced5-3c63-4636-8681-938a05bfff9f"]
}, Open  ]],

Cell["Repeat the same experiment with Import:", "Text",
 TaggingRules->{},
 CellChangeTimes->{3.895003338896646*^9},
 CellID->295285293,ExpressionUUID->"0bf1fc2e-a3c3-4099-a506-4bd70383a440"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timing2", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"Import", "[", "file", "]"}], ",", "100"}], "]"}], "//", 
    "AbsoluteTiming"}], "//", "First"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.895003342297619*^9, 3.895003342301617*^9}},
 CellLabel->"In[38]:=",
 CellID->324311760,ExpressionUUID->"99e357c3-5e36-4d95-aea6-c1459432ab67"],

Cell[BoxData["65.4980062`"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.895003408954259*^9},
 CellLabel->"Out[38]=",
 CellID->31268711,ExpressionUUID->"55da03f2-fab9-4892-9bd4-928a90b79f28"]
}, Open  ]],

Cell["Get a file path specification relative to another:", "Text",
 TaggingRules->{},
 CellChangeTimes->{3.8950034208349104`*^9},
 CellID->185972490,ExpressionUUID->"d68370e5-cd98-49a0-873c-0a45d2425059"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RelativePath", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], ",", "$TemporaryDirectory"}], 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8950034231966953`*^9, 3.8950034381301737`*^9}},
 CellLabel->"In[39]:=",
 CellID->51154625,ExpressionUUID->"9b6e2685-b834-4b78-87d3-78b20e6a9dad"],

Cell[BoxData["\<\"..\\\\..\\\\..\\\\..\\\\..\\\\AppData\\\\Local\\\\Temp\"\>"]\
, "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8950034423465843`*^9},
 CellLabel->"Out[39]=",
 CellID->18368058,ExpressionUUID->"0ae25d37-8c8b-45f4-9ea7-f3d0b05ad7d7"]
}, Open  ]],

Cell["Get a path name relative to the current directory:", "Text",
 TaggingRules->{},
 CellChangeTimes->{3.8950034588868*^9},
 CellID->468743250,ExpressionUUID->"068227cd-7b9b-4469-924c-8f656baf49a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RelativePath", "[", "$InstallationDirectory", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8950034608826046`*^9, 3.895003464182398*^9}},
 CellLabel->"In[40]:=",
 CellID->167762536,ExpressionUUID->"c0dadf6f-a31d-4afe-aab1-d5797bddf3e6"],

Cell[BoxData["\<\"..\\\\..\\\\..\\\\Program Files\\\\Wolfram \
Research\\\\Mathematica\\\\13.3\"\>"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8950034646732492`*^9},
 CellLabel->"Out[40]=",
 CellID->30381722,ExpressionUUID->"34b4870d-0a89-4522-8400-08a51dc8928e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RelativePath", "[", "$TemporaryDirectory", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8950034708761225`*^9, 3.8950034759414268`*^9}},
 CellLabel->"In[41]:=",
 CellID->610826106,ExpressionUUID->"655febe2-02af-4efa-bfd6-df930e6cee92"],

Cell[BoxData["\<\"..\\\\AppData\\\\Local\\\\Temp\"\>"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.895003476251436*^9},
 CellLabel->"Out[41]=",
 CellID->640303693,ExpressionUUID->"f55e69bf-d3f4-44a8-93a2-ce7d6fc871ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RelativePath", "[", "$UserBaseDirectory", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8950034846163254`*^9, 3.895003499570916*^9}},
 CellLabel->"In[43]:=",
 CellID->625299561,ExpressionUUID->"b1c93170-e3ef-4797-988d-8a14e125eede"],

Cell[BoxData["\<\"..\\\\AppData\\\\Roaming\\\\Mathematica\"\>"], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.895003492435363*^9, 3.895003500018862*^9}},
 CellLabel->"Out[43]=",
 CellID->256233267,ExpressionUUID->"c2ab91e5-d2ec-4838-bf81-081075972a8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  InterpretationBox[Cell[
   "\t", "ExampleDelimiter",ExpressionUUID->
    "4b0877b7-1eaa-4602-bfa5-cf85637cdb6d"],
   $Line = 0; Null],
  #& ,
  TaggingRules -> {"DefaultContentBoxes" -> True},
  AutoDelete->True]], "ExampleDelimiter",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->717218889,ExpressionUUID->"b4b007c2-fe5f-49dd-a57e-066d0f38508e"],

Cell["\<\
Use screenshots to show features like notebook styles, palettes and external \
operations:\
\>", "Text",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->287792797,ExpressionUUID->"066b03ce-9ee0-4afd-b371-fa4dfcd4281b"],

Cell[BoxData[
 TagBox[
  RowBox[{"ViewWebsite", "[", "\"\<wolframcloud\>\"", "]"}],
  #& ,
  TaggingRules -> {"DefaultContentBoxes" -> True},
  AutoDelete->True]], "Input",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellLabel->"In[1]:=",
 CellID->794331063,ExpressionUUID->"ebfdf8d8-66e8-4c19-b89c-651bf6d85fa7"],

Cell[BoxData[
 TagBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3QeYXmd553/+/91/2d2UzW4Skg1LSQhlCUmAQGCTbEKSTUINPdTQewKE
HsAg426DCwbcsMEVA8YGDAYXsLGt3ixZVrFkS66SJdsqU9XGe8/9lYebOXrf
vKPpM9/PdV++xmfOe85zyjt6fjPP+5zHveX9L3vH//2IRzziQ/9//Odlb/7Y
cz/4wTf/68v/c/zPK9/3oXe/831vf9vz3vfht7/z7R989lv+XSw8Of7zpn//
iEcMfv2QJEmSJEmSJEmSJEmSJEmSJEmSJHVsoNivmWufJEmSWpjsnprGUc07
5iMNmeyfOpIkSVPXZPfUNI46yUd1HW6JvWl36tdM1KcZp1eSNEkm+18Ajb3J
7qlpXJBuSDqknlZZyXw0C032Tx2NvcnuHUjS7DXZ/wJo7E12T03jYqT5iHV4
1fo0L/1UkiRJkqY50g1Jh9RTU5L5SJIkSdLs0Uk+apWMFqc70t2SJEmSNM2R
bkg6rVKS+UiSJEnSbNB5PuIzSnzAcG4yGUmSJEmaeUg6pB4SEGnIfCRJkiRp
tmmfj3hGEn9X6kp8dmmyWy1JkiRJ44XUQwIiDdVnyJqPJEmSJM0e5iNJkiRJ
gvlIkiRJkmA+kiRJkiSYjyRJkiQJ5iNJkiRJgvlIkiRJkmA+kiRJkiSYjyRJ
kiQJ5iNJkiRJgvlIkiRJkmA+kiRJkiSYjyRJkiQJ5qPxdn26MH1NkiRJmubo
2dLLney+9tgzH40385EkSZJmEvOR+ejQcM9cnXrTQ5IkSdI0R8+WXu7MS0nm
o/FjPpIkSdLMYz4yHx0a/vJoMpIkSdLMQy+XHu8YdqFvTdek89LZiaF930+3
JNZflZamMWmA+Wj8mI8kSZI0U5mPxiof3ZGuSOeneoAT7+ZES36Y7kyj3zIX
cbLvXEmSJGm80OMdfc/57oeTzsXp24khfDekH6fvpIsSS76VfpLGpBnmI/OR
JEmSdGjMR6PZ16Z0efpRui6tTmNyOIeAC8HRkY++l2jtaLZsPpIkSdLMNib5
aEMi6fBnFMbLsZw/Xtye+NPGVYkMxYi7a9MomwHz0RTJR1u3br3yyitvvPHG
cb2Bx8/AwMCll14aV3PY8rVr11588cXbtm2blFZNTa2u9fr162P5JZdccv31
109Kw0Zq/vz50eDNmzdP5E63bNkSO503b95E7lSSJLViPjq0vZA1+HMYh8NM
gGvTmBzIKNESWkULaS0X4tC2OaJ8FBltzpw5J5100rjewOMnjjfaH5l32PIL
Lrjg8MMPd4aK6qDXOm68OQ87/fTTJ6ttI/LFL34xWrt8+fKJ3OlNN90UO/3C
F74wkTuVJEmtjEk+ImiQdJakVmvelFiTP7jwBw5G4o2yGbUx5qNplI+iVUcf
fXQE5A6XT4xrrrkm2h9XuS7s7+8/4ogjHGQ4TPNax3vtyCOPjIVf/vKXFy5c
eNddd01i8zpnPpIkSeajkW6ffHFZqh+wWpfG5BDa2Jhu7gBj/BhrRwuZVPCS
tD6NdO/jlI++8Y1vxJpXXnllh8snxqmnnnr88ccPDAzUhXFio0kLFiyYlCZN
Wc1r/eCDD/KXo3izTGLDRsp8JEmSxiQf8fEWut+3pVYd+x8X5CPG45GYRtkM
mI+mZj6Kkx995n379jXXHE0+2rNnT3d3d/uWxDqx671793bY8rBt27bY9Xe/
+91hy7/1rW/F8h07dnS+qRkjouL27duHBUY089F9991HPoq3W5ttxrWLSzNs
IdfroLdKFXdUtCf+WxfG7mJhJwcy7IVok4/aHP4h6Ovr27VrF1+PNB+1af+w
dTpp7SGfRkmSZirz0Ui3zwR9HAKj19gOH786t2N8/Oqu1Ml+WfMb6Zsd+26i
hbSWqQK/nkZ67IeWjyJrnHfeeUcddVT872c/+9mLLrpo586drHPdddcdffTR
Q59SOTpFv7HV8njJkiVL4utLL7303nvvPeecc1gh9nL55Zc3e3RLly790pe+
dPjhh7Pa2WefHTdhXSH64WvXrm12xSNOxvoReOvCSFix6zPOOIP/jRAa/zus
WxvXNBbGua0LTz/99Fi4bNmyiXnJQwczmu3Ea2OdY489Ns5J/De+jiX1JTUf
9fT0HHPMMUcccQTnPK57bC12xJpDly8uDWEkDG0ndnrqqaeyMG6V0047LbJD
3VHsIl5+zz33xL3NHRI7ih8jcQXj/jzrrLN4bTTyO9/5TvOyMsEmB3LkkUfG
/bBmzZq6wkHz0b95+Ndee200ppmmTznllFg+7C9o8+fPj/uWe/K4446LOy12
12E++jfb30lrR38aJUma2cYkH9U5Fjrp8LMOf3BhPN6NaZTNgPloSuWj6MVF
Z2zOz4vMwu+r44YZ6kjTSQuRg1otj5fMmzePzmQNUEObrX+t4ANExKsTTjhh
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
//nmp6WWLl0652DPlJEkSdKMNOb5aNKZj8bPVMhHN91008knn3zJJZeM7WZ3
7doVm7322muHLb/66qtPOeWUnp6esd2dJEmSpibz0WS3dzqZCvlIkiRJGj/m
o8lu73RiPpIkSdLMZj6a7PZOJxem3jTZd64kSZI0lujlXpQmu989lsxH48d8
JEmSpJnKfGQ+Gqnr0zXJlCRJkqSZoSfRy6XHO9n97rFkPho/5iNJkiTNPOYj
89FocM/wl8evSZIkSdMcPdsb0mT3tcee+Wi8mY8kSZI0k5iPzEeSJEmSZgPz
kSRJkiTBfCRJkiRJMB9JkiRJEsxHkiRJkgTzkSRJkiTBfCRJkiRJMB9JkiRJ
EsYjHz0kSZIkSVOM+UiSJEmSYD6SJEmSJJiPJEmSJAnmI0mSJEmC+UiSJEmS
YD6SJEmSJJiPJEmSJAlTOh8N7I8a2Lt3sPZN9dqftXffvihJkiRJU8HeNJDM
R+YjSZIkaTabUflIkiRJkiaQ+UiSJEmSMOXyUY6p48ve9Wujtpx3ZtTWb54/
WBefO6VqS9aDF38tatk3Loy68JvfivrWN78ZJUmSJGmyfCudnzakA4Gj7Vg7
85H5SJIkSZp5ZkY+Yq4Dvt5y/llRN/7yI6IWPv5XohY85henVM3NWvWY/xQ1
57cfGfXIxz8h6omPf3yUJEmSpMnyxPSr6cJEymDeBvOR+UiSJEmaPWZePtr6
zQuiSEbLnvWEqKXP+O1Dr6dntV8ywlqUtfYZj4064ZlPiXrKs54d9ZxnPStK
kiRJ0mR5TnpSuiSZj8xHkiRJ0uw0A/PRN86LWvDYX4wijyz5g0dPqVqYteYP
HhV13NOeGPXEZzwz6lnPeEaUJEmSpMlCSmKsHXM1mI/MR5IkSdLsNPH5iC33
pe1pSuSjP3zMYLX8LpXr/P5/H6yRbsF8JEmSJE15452PSECkoX2F+ch8JEmS
JE015iPyzuL/8ZtRS5/+uKglT3tsFPMwMCP3HUd9MmrzV0+LWvDoX4g6sOU/
fGwUr1r8lP8WteSpjxos85EkSZI0DZmPzEeSJEmSMKvzUSajpc98fNSKv3pG
1MLf+ZWoRU/41aglT/2tqGXPfmLU7s33RO3fuzdq5fP/JGrRkx45WE8erIWP
+6Wom/7iD6OWPedJUe1TkvlIkiRJmprMR+YjSZIkSZil+Yi5FDLFLHvm46N6
16+N2va9S6LWvvHlUfN/8/+N2vadb0RtveSCqLs+f2TUriULouY/6j9E3fLK
v43acu4ZUWSolX/77KjFT/6NqFYzNpiPJEmSpKnJfGQ+kiRJkoRZmo9KSmJm
hp61t0Sxhf677ojqWrEsqv/eu6OW/+lTohY96dejulevHKxVN0X13nZr1IEz
tmtn1LJnPymKsXnmI0mSJGl6MR+ZjyRJkiRh1uWjzCzMyL30j34natETfy3q
gR99N6rvzo1RD/zoe1EbP/PhqL6NG6JWPu85UUuf9tionrWrou484fCo+y7+
WlT/XZuidi6eH3VgbnCKveeS0eejPyqay9svqcufmdqv0+q7zXVabe2ZRedb
G9vvNtVWtdraWG2nfZubSzo5V5IkSRpv5iPzUSd7abWO+ejQ2txcYj6SJEma
CmZRPspkxBi5hY/75cHK2bwXPPaXorb/5EdRdxx9WFT3ymVRXSuWRu3r7orq
Xb8maueCG6LYy65F86J2b7k36vZ/fV/UrqULo3hK7MLf/s+DlXs5MFt4GWt3
aPno99PTEr3opyeWt1+TvjfLn5T4brOH/weJ7zbbwB6fmp5S/F5iHV7LEr7L
fpupga9Zv65Tv/sHRTM78Ko/TK3OW93v/yjq8lZnsqrn6smJo2vmmnpEzbPX
6nqxNY7UrCRJkjRZzEfmo/pa81Gr7ZiPJEmSZoNZkY+YhyGTy6qX/XXUpsM/
FnX/5ZdE9ay5OWrP/VujHrzq+1E75v006q4Tj4y6++Rjo/Y8cH/Uvt6eqM3n
fDlq0+Efjdq1eH7U1m9/PWrvzu1RPetuiWKE3h1HfypqzeteHLX4934ripaM
NB/Rr35e+l+JRPDs9Lfp6QVL/iyxhEzEFt6R/mein09vnF49r/3TVFMS2+Fu
+fv0yvSq9IrEdv4kvTS9OrFN+v+0vCYjjoh1aqbj6/+d/jrV19KeFyS20Mx0
NWGR116TXptYwjafkzg/zfPPcZEK2cubEkdN2mI5reLM/12q16XuhSW0kKPg
TD43cV3ITa1G8UmSJGk8mI/MR+Yj85EkSZIwK/JRzpDAPAxr3/zyKNZ84AeX
Ra16yXOjVvzlM6J2LZkfNbBvX9Sql/5V1HWPeETUXaccG7X12xdFXf//PSKK
ebz3dXdH9d25KermF/zpUG0++4tR7OX2wz4Yteh3fzVq6dMeF9V5PqpX5+p0
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
kiRJEmZFPmJ+hswmi57wa1ELHvtLUYue9OtRLO9aujDqvou+GnXjLz0iasO/
vCNqX09P1I6510UxV8P+/r6ou046OurGX3xEFM+Z7btzY9TyP3lK1KInPTKK
vSx8/H+NYi+HNj9DxcgxsglL6JnznFbGg9X16VeTPuhvvy4xroyePNtkO4ya
Y02ehcq84mSuOj6t2WNnC2y5toQMxXLSCt/l3qvt5GuOjlb9SWLvbKdmLmbb
5tjZe/PY60wLPGuVmbRJW3yXltA2jpdjZ/wb32XmbTIXeaomHdpWj4Jz+4L0
j4nvsp0/Kjif7Jc28FqTkSRJ0sQzH5mPzEfmI0mSJGEW5SMqx8gx2zbfJcVs
v+7qqHXvfF3Ujb/wiKit37ogihkbHrzy8qieNTdH3f2F46K2//SaqPm/8f9E
Mfpu1/LFUYuf8t+iSENLn/7bUezx0J4P2wq99LqE/jnPP22uT9bgVfS9Wb/5
vFGWs+bvFyxnnVZ7ATmlrkMPv26Z7zYTTT06vvu0gu3UNrOd2rammkRISSSj
upx9NY+6tqTuly2QdFjeTDEsZx3OeR2DV9fkKOoea9taHZckSZLGg/nIfNTc
jvnIfCRJkjQ7zbp8VIt5G3LmhO5VN0Xdd/HXonYuuCGKmb2Zr/ue00+K2nz+
WVEPXPn9qL5Nt0V137w8avPZX4rq23R7FOPrFv/eb0XVMXVjm49a9Zzb96hr
vmi/habO99JqnfbbbPXaztfsRDNhtW9hq+23P4et9tj5Oe/8iCRJkjS2zEfm
o+Y65iPzkSRJ0uw0S/MRyeWpj4pa+ke/E9V/16aorpXLom7/+D9HLXrir0dt
u+ziqH3d3VF7Hrg/ivREqrr1vW+M2nHjtVH7unZFrfybZ0Uxl/j45SNJkiRJ
48F8ZD6SJEmShFmaj6jMR8ue9btRq17211GLnvhrUQsf98tRi578yKjlf/4H
UWQftn/LK/4matHv/tehYv1VL3lu1PI/fUrUgfF1LfZrPpIkSZKmJvOR+UiS
JEkSZnU+on7/v0fVZ8X+3Ozfj/6FKOb0Zqzdgsf8QhTfXfq0xw4Vz4Rd/NRH
RbUaWWc+kiRJkqayycpHvenBZD4yH0mSJElTwXjnIxIQaWiK5qPy3NhW6Yk5
HJb98ROiGJV3kAR0YAuPyWq3L/ORJEmSNDWZj8xHkiRJkmA+6qgyJS35/UcN
Vtuxc52U+UiSJEmamsxH5iNJkiRJmIH56JsXRC18/K9EMSLuwFwKh1ZPzzrw
v78zWD+35FBqUdbaZzw26oRnPiXqKX/87Kjn/PEfR0mSJEmaLM9JT0qXJPOR
+UiSJEmanWZePtpy3llRN/7yI6JISQse84tTquZmrXrMf4qa87hHRj3y8U+I
euLjH//Ex0uSJEmaNE9M/zVdmMxH5iNJkiRpdpoh+Wj//ii+7l6xNOrOYw6L
4rmud5909JSqO7O2nnRU1HWnnBB1whdOjTr1C1+IkiRJkjRZTk3Hp5WJlLE/
mY/MR5IkSdLsMTPykSRJkiRNFvORJEmSJGFK56P9+6MG9u6dFrU/S5IkSdJU
M5DMR+YjSZIkSTMkH0mSJEnSBDIfSZIkSRLMR5IkSZIE85EkSZIkwXwkSZIk
STAfSZIkSRLMR5IkSZIE85EkSZIkwXwkSZIkSTAfSZIkSRLMR5IkSZIE85Ek
SZIkwXwkSZIkSTAfSZIkSRLMR5IkSZIE85EkSZIkwXwkSZIkSTAfSZIkSRLM
R5IkSZIE85EkSZIkwXwkSZIkSTAfSZIkSRLMR5IkSZIE85EkSZIkwXwkSZIk
SRirfPRAMh9JkiRJmr46z0ckIPORJEmSpJnKfCRJkiRJMB9JkiRJEsxHkiRJ
kgTzkSRJkiTBfCRJkiRJMB9JkiRJEsxHkiRJkgTzkSRJkiTBfCRJkiRJMB9J
kiRJEsxHkiRJkgTzkSRJkiTBfCRJkiRJMB9JkiRJEsxHkiRJkgTzkSRJkiTB
fCRJkiRJMB9JkiRJEsxHkiRJkgTzkSRJkiTBfCRJkiRJMB9JkiRJEsxHkiRJ
kgTzkSRJkiTBfCRJkiRJMB9JkiRJEsxHkiRJkgTzkSRJkiTBfCRJkiRJMB9J
kiRJEsxHkiRJkgTzkSRJkiTBfCRJkiRJMB9JkiRJEsxHkiRJkgTzkSRJkiTB
fCRJkiRJMB9JkiRJEsxHkiRJkgTzkSRJkiTBfCRJkiRJMB9JkiRJEsxHkiRJ
kgTzkSRJkiTBfCRJkiRJMB+pEwMNk90izXzT666bXq2VJEmtmI/UCft+mnjT
666bXq2VJEmtmI8my/7EOeTr8XsVvbWRvqqT9Ue6zWZ7MPr+ZHObI9Vsw2i2
OZojqld5NFsbq+00z8NIr/hI99Jq+3WdkbZ5/Frb6qx2sk4rh/ZOP7QtHNp9
bgaUJM1U5qPJYj4a276W+Wj8tmM+ar9985EkSTOJ+UjVQFGX7007U3dqvnY8
+szTneekE63OUn/iruPnTHOdie+lt2ptX6K1fN35a6ev8ciekiRNLvORKvPR
2PKcdMJ8NH2ZjyRJM4/5aGLUXhz54jPp3enixHebPai65Pz09nRKarXH+iqu
yzvT4almnFaZ6MfpY+kV6S/T36bXp+PSutQ80lZnYEP6YHpfuiW1OgOdHONV
6T3po8XH2vrXRBsWprr9zrfJWT0jcbZJlJ0fUV3nwvTPxbzUfmv1DLPO8en9
ibN9Z2qu3749qxNnia19KXWync6PuifxXvin9JL03PSC9K50Sao9c9pQt8YZ
49p9PN2XRtPmuv2udF7iXfyiRGv5+h3pnLQjNbdT1VZ9JfFOPy110sK6ha+n
t6W6hea5Wpo45837nLN3TDor3ZiavydxxJ0kaWYwH00M85H5qPNjMR+Zj8xH
kiRNFvPRxOO8/X361fTaxHdrH6N+TX+bXuJvpT9KW1Nz/dp7JIv9SmILrXrv
DyZ6lf8jPTY9Jv1u+p306PTb6Rmp9pnZZrPHztcLEtv57+knqdnyTs4kX38x
PTI9Of239JttPSr9x0QqqdtvbpMzz2vr9n8jcSycN65vzVydJEfeTX+VHpfY
IympeSZbbYcz83eJ7dDa01Mn57l+94hES7gTXpPaH1d7zfvhhekJibuLlnPX
cadxhh+f3pzI2rSh3tWkA67d76fbUvtz2ElruabPS7SWc0JrWUJrOQra/zfp
+tSqDXUJyeg/p1enkbaTjPPL6R8SyzlX9fp+J3Enc5/zvqjvFO5w7gHW4Qx8
LdU2mJIkSdOd+WjimY/MR5X5yHzUXGI+kiRpspiPJlLtkxyZ6DvRj+WT3Xy3
OQZmfSITPSc9JV2bmtsfKN6SSDpzEuvQn2SdXelViVax/ZcnekGMq2GPn0t/
nn4v0WtlxB3br+2vXy9JpKqnphtS8yg6P5+MR3pi+tNEuqHljHH6agPfZVwc
owSbY5zo8f5FuiB9N9GrpB9+UnpT+sP0pPTMdGtqnofmUcxNJCz2+Mfpz9K2
VK9v3U4zH70yPS3RKq5vve7Ns1qXM+aN+7NeL3rvrVrSXj0D3FG0jV73HyTy
4KWJdRjr+KnEWeV3C4cltrYn8fW3E1eBs7cxtboKnbR2cXp64t1RW8v9QGsv
Tx9KnP+6Pj8nm9uvX38gkbkYIzfS1vJO513/1sTyZj66InHXcb+dnDiH3PMs
YYwuP4V4X/Cu/5fEfBrN341IkjS9mI8mkvmIr81HrY7CfGQ+4mvzkSRJk8V8
NJFqn+Rbif48Pc/mHAV1fT6TTp/k2YkU8/lUt197JtvT/06M+amjyGp/kt4U
22Q8Ep/Lpofc6ogY3fTiRN+PI7oy1WNp9jPpFdMrq+OODi0f8clxxuzRH241
I/RIt8l5++vUat7m6nvpWYnzyZmsZ6OuX5cwko2xcMemNybGlbHlZjvRzEdk
WxIN/V6+Xp5atadumXGPpAzuOlJMs7/dybmtmX1zIgOSr2nh91P77VyTmP2A
O5zldXwd7xfO//9MI81HtbXMrvD8RNIhJX0ztd8OR0Sm4Pxz1FtS3UttFbNh
MEKP32+030vzuD6duHMYi1iPq17lHyTeuWTPOo9H08rEDC2863mPHJ2aLZEk
aXoxH00k8xFLzEd1ffOR+ch8JEnS1GE+mki1z0Afg7E39EwYn8N3Obd1/U8k
8tF7E73KN6RWvaybE3uhb8bYttoqRn+xDtuk51O3Q8+zXvearW5P9ELpPb40
7U7N/tjE5CN64KzTbH9Ts501HzFnAn3aVttsjo/itZyNesbq9WIJOZQeOK9a
kRjXxKfjGcVUt1DPRjMfsV+uLGO02HIdA9k82/Uo+Iw/+YgxdXx9aPmobpm+
NPczdx2juWqrmtr3uuuxjD4f1a0xPpPWcofX2UjqnVB/s1HzGr+X4EjZDiNU
676mTj7idzX1nd5sITOcM/M/P1v4vQo/czo/z5IkTTXmo4lkPmJ985H5yHxk
PpIkaWoyH02k2pNkPgRm/eVT2Cckvlt7L/RPmP2YUTp8Vp1eH6OS6Lezfu2V
kblIDTzdlStVW3ViondED2d+arakqe6LkX5sh/4Sn1WvR8HXE5OPWs18PtJt
1nzUfoaE2k/m6b18Op6ZkOsTQpt9VM4A/XmeMcoZYzYMlnNcrZ5z2sxHjK/j
DDMHBTN7cNfV8YfNvMZ9wt3Fc1pJasxlPdL5GZpbZowZdwvzWtSWt98mve5m
m8c2H7FlrikzXdBaMixnr7ak1RbqT0vSBBmT5yyTMprtn9x8tCa1Olf1Xc/v
W3gvs4U6A0zn72VJkqYO89FEMh/xtfnIfGQ+Mh9JkjQ1mY8mXu1N8Rlz+pzM
ncvy2gNh3mlG9ZCSyFaMniJb/TixPqPa+JrMRR+JT/rXNoAReszTW0eCNfuf
TbV/yJgc5pqgX0ryYs2Jz0edj69rv832+aiqx0jvlKvDVaszXbB+7XnSq2Rm
hg8nlt+f2DtH1xyHVrdZl9Or5+5iDmdG/fH0z+Y5r1tjLohfT6cmzgYj/bhv
m/vt5Epxr3I/kxSYx7u55kiNVT6q3+WpsnW2jfajE9u3iufzMr6O+5/3At+t
7/qpnI/qcrb2usTPENJ0PRZJkqYX89HEMx+Zj8xH5iPzkSRJU5P5aOLVnglj
0hiF9YLUnWqfk5nA6TnTv2U5T5/8zVQ/6117JmSu30pHpdqSBxMzV9P3/mTi
u52PQeJr7gRGH7G196Rmq8Y7H/2v1Mlc3J1ss+Yj0kr7LTA3ch0/1kwT9bwx
wopnsLKvOlMHPpjo6/I00rq15tc1H5GGfph+lH4t8axV1m+OE+Pa0T9nFvc6
U0TN8iPNR6Qtsga5g+3XlrTfWid7GU0+qtthLCtpjnuVc9hMGZ1sbV5i9Cn3
xkWJ79Z8PfXzUd0CmZF8xNOZ70rttyBJ0tRkPpp45iPzkfnIfGQ+kiRpajIf
Tbzar2DUEz0T5l5gtu26/r8m+qVnJ5Z/LdH/YYxc7YfQ62ZmAHrddVwW6Mnz
mX2SRZ21uPOcUtETY4+0iuW1beOXj+ih0R9mTmbSJc/x/FbBEkZ21ZFvNcfV
fMTsFvWZnvX+ZywfW2M0Hc/NpH9+daptri3nGazcA3+S7k31SLl2tf9Z12mm
G7b/qkQ+Yn5pjpQ+MKMQych1X7xDuTo8+Zflhyey9mjy0WcTZ5VU2Jy5opOr
334vY5WPvpEYEcdM6czM38l2muswWo93HG37cuK70zcfcXdxRK2edt1J+yVJ
mgrMRxPPfGQ+Mh+Zj8xHkiRNTeajiVd7C4wsYpQR/RMSE9/l3NLf5rv16a43
Jcbq0OOqY1rWpqcn+ur1uY0gi9Gfoe9NIuC7nX/CuvZp353o/TKbMdup64xH
Pjoz0UOjj0fPkHGJ9Or5mrzAuETmLqjju2oftW6Tma6Zv+JVBQmCXMNsAyRN
vq6933rd69eHJVrFSDy+S0v4uiZZrhQpr56HVvmI81CvLKP1OBvMw1DP6gXp
kem0xHLG4x1aPqrHyzNnuUNelOpIyKmWj0jZnHPeTcyX0sl2mkd0TyKZss06
q//0zUecbVJk8znU5iNJ0vRiPpp45iPzkfnIfGQ+kiRpajIfTbzaX+pP9LHp
q/NcUb5Lovm9xCwKzOzNdxkrVedD4DP4fPfyxPL/nXam2pJNiZ4/vTXmH+a7
neeUekRvS/R+mfWX7473+LqaZZ6dyBrMZvBPDe9N9EJbPV23mbnoAf5uQQ6i
50zOJTvwXmien/o1V6Q+I7imnibaTJ+Zr+s2O8lHrMN4P5Y3t/P6xHVZn/gu
OW70+YicxR3C3cucJJ1vrZXxyEfMn1DH14105Fhdh3ccaZq2MVsF352++ejr
iSPivVB/G2M+kiRNL+ajiWc+Mh/xtfnIfGQ+kiRpqjEfTZbaD/yXxAirOnsz
n8qnR1qX1z48zxJltNjxieXkLF5b55eufZWt6bmJJHVk4rud5JR6FPTuGIHG
1t6emlubmOfD1k/9d67VNv88MZcCIxtXpI8njoIjWp7YQnOMYt0+OeXJiVGO
5A56tp8sWMK5/f3EWLv6bqpXtpmP6swepOy/TbSZecsZxUcWeGuq1/czafTz
MzAXdL1SjDrrfGud7GWs8hHZgevLbypq8u3kXq3rLEucc87zuYnv1nz0/sTv
TOqTndtr5lCufk1Y45GP+GlTZ0fp/GxLkjTVmI8mi/nIfGQ+Mh+ZjyRJmmrM
R5Ol9i7OSPSF6AOznCe68kl5PifO8t2Jr/k0Pb3WOoqGzMVn8Fs9PZav6UXT
X2VG7uZ4rVbo+bDmHanOXcyM0KxZ+34Tk4/uS3V030AL7bfJSDDGN9aRYGAv
7JGxdq9NjJys+61njK8/lngVc2jUOSWaGIPHPPD0ruvTReuVbZ+PwMwAv5qY
pYG5rFlyWarrj1U+ujhx1CSOG1Kz3z5SY5WP6ndXJdIrWxvpGFTW4eg4dpII
x35tYs36vmZWf54c/fI00rF8/ATg6jOmtK4z+nxUl/MbGPIRz7nm3wW+O5rM
K0nSxDMfTRbzkfnIfGQ+Mh9JkjTVmI8mS+2fkA7on9CXY8aA+qzVOl9u7Qnz
OeinJEbKMWruNYnMRf+n7rf2bfjcPf1tZhhgvuuaLFodRW0JfXX6vYwZY44I
vjvx+YjzwHc776G1ykd/lUhDnJPamyV91GPn+bN1m7UN2xPb5Lp/KDGiklka
vl3Q22f5SxJ90VYjJzvJRzznlOvOTBrMx04PmRF3df3R5KPaNvreJA6Ovebo
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
0eff0Rjp3kfTWt5ZnW+BNcfv/Vh//o/H9iVJmlzmIzWZjzTxzEetmI8kSZpI
5qOpZqBhYl7bfpv7GkbfB2u2dqQm5tjH6lp0chRj28KJ3NdYYcvcXa3uukNr
7Uh13ubRt7Zz7c/PaK7LeJwZSZKmI/PRVDOa3sh49GTYjvlo9Neik6MY2xZO
5L7GCls2H7U/LvORJEnjx3wkSZKkhw1kSbOX+UiSJEkPMx9ptjMfSZIkSRLM
R5IkSZIE85EkSbOBM2yovYGH9kXt3d8Xtf+hgShH2ml2Mh9JkjQbmI/UnvlI
gvlIkiRplhrIJJRzMuzbtTqqa90JUXsfemjv4NKISCYkzTrmI0mSpFnKfCQ1
mI8kSZJmqcxHEZCietccP1g/+cuo/u0row6MrxvInCTNGuYjSZKkWcp8JDWY
jyRJkmadknr67v9xVNeNL4jqu2Gwula8J2pgf1fUw2s6W4NmC/ORJEnSrGM+
klowH0mSJM0mAw9P9z6wf+/9UbuWviaq58YXRPXOf1lUz0//MmrPvedFHYhG
A/sHBmdykGY+85EkSdJsYj6S2jEfaXrx+YZSJ6byO6XZtqncWmkGyjkZSD09
d3w1aucNfxnVN+9lgzX3xVH9N74waufiV0f17d4e9fDoOkfZaeYzH2l6sR8l
dWIqv1PMR9IkMx9JbZmPJstAMdltmZkOjBxIk92W6WRfg3dpJ6bXuZr67w7a
Nl3OpzR9/Czd7Om7J2rnwldF9d74/Ki+uS+K6p33wqwXR+247s+iutd/IerA
BuKHxlT9uSGNFfPRZDEfjbep3wOcmsxHh2Z6naup/+4wH0njw3wk/dvMR5pe
7kt702S3RZqK9qQtabLbcnCbU30X09r+NLltk2a4gX2DlSlp160nRHXNfX5U
z6I3Dtb8lw/WglcO1pLXRvXedmbUzmVvidrTvS7q4YTlKDvNZOYjTS/mI6k9
85GklsxHUgfMRxOpjhW5Ld2Zmt+to1/ajzBp9d1Oxs8099JsA183WzKRLawj
l+ake1Jz+/XrrWlh6rwlrdZp/91OttB+nc7PZ/NV7bfWyXaqH6ST0umpvmdH
eg+M7V3U+b460f5aN89eq5az5CtpXarrjLTlnVy75jbrFvipwjul2RKW8O5Y
nVqdjfb3aqstd3IUn0ykJJbQ2lsSS76WVqZme5rHPtI21PXH9g6cyqMWNbvt
zxq0e+fKqO65fx3Vs/w9g3XXeVFdC18Z1b3w1VF9K/8pqnvd0VE7Frwkqnv9
56Ie3pr5SDOZ+Wgi1X9VzUedt9B81P78tN9aJ9upzEfmo3oeWt1drbbcyVGY
j6TJYD6SOmU+mkicMb4+J12cWNL+X+f6by5jzM5NzTXb92c62Vd7rf7177yF
nfdYmut8JrXKR/UMfzX9bdqdOt9Lc81WOjkbo99LXYd3HL3HztvT6h4AI50+
kA5L16cL0ofS9sT69Tx3svemVlvo/F49tF7og6l59tr3eGtrv5FuT3Wds9Pa
1P4YO79Gna9T90U+OjzVV9X93pCOSu1b1fxuXxrNHfipVPMRra35iPfvitQ8
xvZG8xOvueZofl6N5ietNNYG8pbsiepd/k9RPTf+fVTfyg9H9S59bVT/+mOi
elZ/Mqp71b9E9W46I6p70esHa+5LonZvuyLqQNbKecIn+7iksWc+mkjmo/Zb
MB91so75aKT7qsxHLDEfdf5a85FmCvOR1Cnz0USq/77T8/x2YklP4uuuxNgw
+qV1C/Rd6bVuTDtS3RcjZ1alVu2hN3Jz2pbuSvxbXz8rzSiXmkro2yxKXP2R
tvDWVPs/qD0KerOLE18fnepd1OyBkIaOTcekH6fmVcCmtDzVJFVxlpqjp/ia
o1uS6vWqGFG5NPGuqd/l/HM++bp5TsC1IMtwbjkzzX3dlGo7W2VJ7sbao664
E5pzYnAVOKLmJ+v3NXAd67wBnAeW70zN/fI1x8j5aR4vMxLQb28ur2eb91Sr
s8f6nLc1qR4LV/nj6YrEO6J9suAoliXeX81rUVtI8mL9VteOe4zzVt+V6CQf
zU+fS8028C7gbNfrxXb4qdL+DtyQOJPNc9IqH9Xxfq1wn9RjR7MNXMHmz0DO
A9eaJbyn6ru7ec7ZL+/x5ju0HnXzZ5o0yQ6kmMF81HfP+VFd1/9FVN+aI6P2
bZ8f1b/u6KjuFe8erNWfHizy0YYTonbNfWlU90+fH9Wz9I1RA/t2RT3kXA2a
ocxHE8l8VPduPqrfNR+Zj/jafNTqTMJ8JI2Y+UgaIfPRRKo90vMTY3VYMjd9
OB2fGP3yprQ+dSc+y/wPiR4OfVR6NYxAo7/Bmp9N7J1/8ckORyYSx4sTn8dn
O2clejIfTezlovT+dFx6c6KPQcqrLfx84rX0TMgsjOOiDZ9IHB1ng/7nOxNb
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
SWR33/1Ru5a/N6r3pvdE7Vz2lqiu1R+J6rv3gqiudcdF9d5xVlT/lkuidm/+
blTfrUdH9Sx65WAt+PvBmjdYvcveHNW37hNR3UvfGtW78FVRPYteE9W/6B+j
uhe+NOrBjedFHWjTDB9ll3eUT8WdocxHM4n5qHPmo5G2xHw0UuajsWI+0lgw
H5mPxpb5aCYzH02W+hl5lvB1s0/eanl9jmf9bnN5fU4os3mTg/hsNVeN3MTo
EV7FWJ3mv/51+3UvnbeQbdblzVEuzXVa7aX9WWq/Tt1Ls53tj7eu0zyWet6a
52GkZ6Opk3PbqrXtz0+zJa3uyX0NrdrZfG2r5XWEGPNmMFKL7TPusdURNa9U
5++dVuetfrfVWarbbL5fmmep1Xuqk+Xt29nJNltdhbH6+dPqLmq+I5pL6nbq
FvhXhrk+GFnHLByMx2POijoyuXl+mvdn+7uoubz9dTy0d7HGx8+Swv6BPVH7
Bnqi4sfK3p99b6aN/iKJDOzfE7XjljlRuxa/PKovAlHEoqVviOpe9eHBWv3x
qP71n4vas/WKqH3bl0b1rp0T1b3i3VE9S988WIteG9W79B8H6+Z3Re1c/Pqo
rgWvjuqZ+8LBmv+iwSJJzX1B1K6VH43q770zKt4A+R6YOee53jk/dw8N7Mny
2bgzh/losrTq+Yy+f9Jcbj5qtU4naaLV8dZ1OukNtjpXh9az6uTctmpt+/PT
bEmre3J4f9F8ZD4yH5mPJp/5yHw0fsxHs4X5aPao/5rzSXbmvOWT7NelyW2h
VO9SZk5m/ormdzUb1CvOnAnM1MF8JsyBUJ8WLWFg8AGp+/ft3xO1a/vlUX07
bozKsVA//zPkQJ92+o6++1n62Nd3b1T3mo8PVuag3uXviOpe/KqoXcvfEdW1
+LWDteTNUd0r3hXVe9c3o3Zv/kFU1y2HRfWuOyaq//ZTo3oXviKqZ/nbonbN
fXFU9+I3RPXNf3nUgXyU1Tv3xVHdN38oascdp0XtH9gbdZBzPm3kuR3Y97Mq
9u64Jarr7sui9u3eGfXwpeBemkmpcDYyH80e5iNNfeYjVeYjHRrzkfloLJiP
Zi/z0WxjD1PSzONPNg3s74nat3dH1M8t331XVN/tH4/qv+P4qD1bvxm1r/+B
qINtaXplJfrwgylvz9brovo2fS1qz7YfRvWu+WhUz01vjerfcFxUz9pPR3Wv
fG9U/8aTo3bffXZU/+ZvRfXe8fWo7nVHRvWu+8xgrT08ateiV0R1z31RVO+C
l0X1zHthVPe850f1zXvRYM19cVTvmo9HdS96ZdT+HTdFPdzM4fliiiIvt5h1
YU/Xxqje286J2rnwHVE9G06LOvDt/fsGi80cGITnz6Xpynw02/hulTTz+JNN
5iPz0RgwHymZj2an5ifZW30qWZosA8Vkt0WTrzk3RXOeBM1m+/f3R3Vtvjhq
394Hour80nt6VkZ1bTwsqnfTsVF7Hrw8au9950ft61oedbD5qKfyKKn92SMf
nAOhe8fiqJ6bPxDVv+ojg3XP6VG7Vn0kqnfVh6P23HNp1L77r43qveucqN3b
fjJYd54V1bvuiMHadFrUzlUfiurZ+JWovju+FtWz5HVR3QtfHtW1+FVRvas+
FtU17+8Ha+7fRPWu+Oeovo0nRvXe9M6o3ZsvixrYsyvq4cQxNc/nz+ZaqGPj
9vdtjuq98+uDddd3o3auPCJq+43/OFi3nRG1/6H+qIGH9kbx2v4Hb4rquX9Z
1MPp1TnApx/z0exkPtLUZz5SZT5Se+Yj89GhMh9pOPORJEmaxrL/SZ+2f/P5
UXsfuCzq4bmX9w5W6uu7N6p381lRu+/8ZFT/6jdH9d76gai+nT/Jujpq/77u
qJ/rzR/4kP4UmMO5ZI3+Pdujeu77aVT37V8YrBXvjOpd87GonUtfG9Ub/xu1
/B+j+lZ+IKp/zceietceFtVzywejmKuhf+Pxg7X+qKi+ey+J2rno1VG9S98c
1b3yHVG7lr8tqn/jl6J6lr0zate8F0R1LXtjVN/qj0f1rz08qmf+iwdr4zlR
B1peRqBNGs7egfF+w/Na386VUb2bvxv14NLDox644s8H68o/i+qa//qoB5d8
OGpf7z1ROW38Xsbk7d29Parr5qOi+rctj3p4q9NrxKYGmY8kSdI0Zj4yH3XO
fKQOmI8kSdI0VsYv7b3/h1F7Nh4Wtb9rRdTDKw2ORNu/vy+qb+t5Ub1rXhHV
c9PzonrXfzhq971nRfWueVdUz8bPRO1+8IaoPbu3R/38Hid1Jucy10H33d+L
2rvliqjdW74Z1bXiXVG7lr05qndwcN1Heha/Oqp78eujetYdGbVr2VsGa+UH
onpvetdgLX1DVN+aj0V135J183ujdi59e1TX4jcN1upPRfVv+mpU14JXRPWv
eF9U74r3DtbN/xzVd+tno3oXvjKq78YXRj244KVRe3atjxp6nOqEj7LLK9XI
tvv3dkft3r0jqvf+eVEP/vi5UV03fyaqd83pUTuv+4fBuvqFUQ9c/ZdRXVuv
j3r4WvQP1v6+qJ51X4jaMe/1Uft674t6eD9Tc1Sh2jEfSZKkacx8ZD76N5iP
NDLmI0mSNI2Vfm/f5ouiule9Nqrv1vdFDfRvivq51fdsieq/67jB2nh4VO/d
J0XtvfeLUX2r3xbVv+YNg3X7nKjeey6K6r/zc1F7u1dHHawRE5OVfjZSa3fP
LVEPLn5lVM8tn4rafe93B2vLpVFdaz4d1bPy3YO16MVR/euOi+pee3gUMzD0
rT8pqnvZG6N6N54Ztfueb0f13PKJqO4lr4nqWTxYXfNeENX907+K6ln0uqi+
Wz4UxezfveuOj9pz5/lR3cvfGtVzw98O1vyXRu2Y+3dRu9YfGfVwTpmQ+QoG
Bn5W9Qzu3h61d9v8qK6N50dtmf/OqJ47Lo7qXnNi1IPXvSaqd8G7ovrmvyVq
5zXPj+pae2rUwyFvz2BxLbbMjdqx5INRO289JWpP1z1RQ00xH0075iNJkjSN
mY/MR03mI42C+UiSJE1nzKI8+J993Wujem9912Dd8tao7ts+ErVv386oOlfD
3v61Ud1bvhLVf1/WbZ+I6lr+wqjeVa8arNs+FtV391eiupc+L6pnxQuj+jd+
PGrvzh9H7d/fHfXzzWEmh3FIAQc6/LujejccE9W1/C1R3av+OWr35suj+jd/
L6pr48lRfbefPlir5wwWM2+v+9RgrT82qnv9EVFdqz8WtXvbFVH9t30+qm/d
p6N6N5wa1RNhZ/lb+9Z8PKpr1WFR3YvfFNW3bk7U7tuPj+q95V8Ga3Cg3fu6
lrwpateCl0f1LP6HqO6lb47aufAlUbsfvDrq587SGJ8fBtEN3/L+ntujejec
HdW94F1RPSsPy4oI+ekHr/iLqF2L3xO1Z9OFUT1L/2Ww5r09qnvuWwbrpk9E
7R/YF/XwPPCDN1zvA/OjutZ/Mar31hMHa8MZUft3d0WN8dFpApmPJEnSdGY+
Mh+xTfORxob5SJIkTWc/G7+0f8/mqL4Nn4jqv/XDUb0bD4vavWtF1IG1s3+7
/6HB2tO7Kar77rOieta9e7CWvzCqf9X/Ye++/6Mq+reB/x3Pz8/zy/f+3kVF
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
u7h9kQzHSOwftsSQ4QhKrY/UltQ+Eks+onpe3P8BmdpnXvFYySM3trb2cWzy
yJ/HVV/D2pCv5PVSn+WW5PNl79U085Bj++R5g2yteqfVFNY4tc/647VW98b6
mmekHp0tTx6Z58mwSlXvHLUNtbeT4dVJ7j3eV/xUqq/kY34uWJ+qM0759w32
bfI+GfVzV5cW8rqrNZcaXk0+y78P8O8hbGFN93bt1zH52UoZfpPw7Gr/rshV
wrYlXyP17NRnkz9xyd9+rLzU+ojv0lWSTiJKfWTfXAHBrDbCqV6QKDpOdhdO
9XggFsoKFBfZncDI/wCqYgFIjIRZEsjEpEgsLLiLIHQpDYyTb0Jwb1sw97QT
DnaH4JEU4WgPMA53g+DBrr/DXyM1DygSW7oL+9qC79hAiIUdkOgH2TbbvAbu
I/3B3N8RuNaBcaCL1DVJl3v2S8qz5sEUCOxuK5yfCdUdHwY+Nq9vAt/etmAf
6gbmgS6m2GFnBQ/ROcm9VvFY5oEeENjaBnxrmoN3Wwcwc4aAcX0XxMxyUC5C
9e2grLMdvL4L3OuagbmtCwS3dlZ0USRvSbKtM/i3tYfA7l4Qt8rgtyMntUWn
PkXXR08/uj7S9ZGuj3R9VJcW6vpI10c6DxxdH+n6SL0ddH2k81DR9dHTjzoG
OC2TXGVwzthymTUyrE34LHt7rZLdMuoIgaOLVTI84lEZbuGIlHPwOM7ku7gf
HpFHvyjDZ9kGjmCXyqTJ8JpyhMbt6giTe2MVxrEWR0TcwlHxShm+nlsWynCG
odpjHAFul6mphzm/jvUL38t9qufFNvNZHrdKyT4ZPmaluViGdetkmWsy6jVl
z3DkzPEk509y9MiqitszZNQKbqcMryZfw/7kFWE9yLuFr2ePcT98F/uT153n
zrlh/ITyrDmrk32rHp13IPfDPV+RUe80ntcZGfWseUT2DF/Je4zzOdVrx3U8
eG/zlWwn78zxMgdlKmR4vfhKXkHe4dz/LzInZDiqVz8RPNOaKjW2RP18sbrh
s7xq3D/7UH3vVRm2lufCXlqjhH3Ia8p38RPHK8sWHpap6R7mealX5JwMn2Vv
sP28e1Nl5svwzlR7nr2qXp1NMnyWFSWPwhbyNbyfWY+MkVG/Z3hc9gDfy0qW
805nybBXeb+p3yQ8d/WzUCDDZ3lnqldnrwyf5V8/2Bv8JuGdyce1/8VD528R
+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
6Itt4LMckar7Z2s5VlfPiz3A2WLqfKegEo5yOfbjOI0jOr6S9QvbxhGmugo6
98m5Uhz9craPeiyOlpPrI45v1T5hOB9JPTt+drhn9i33qa6uzP7hcTnqVkfI
7G11LWuOKnks/ut1VmSsj9Qry9UPOCbnJ1edu6VGPWu2jfPc1HllPKLaNvaA
Oj9NnQOptoFjbP4eq1qz8LH6+7ZqLcmqR51fx9lfau2mRq3j2PM8rtrbvDPZ
Y7wbWVmr10v9ZKmzy9Trpa7dzTazh1lf1LSytzrnlp8O1lN8Vl33g1s430yd
g8d7T/1FabVCZ3+yn7lF/fsAn1W/Hzh7jZ8+3p/qzFv+jSJ57ivDtT64igK3
8Ljq33DUTxzDTxxfyauj3i3sSX6H8K5gTcc2q3P51G9Xnb9nEp90rrAdvAOu
lZ3Av6wVBJcLgeUthQeuj9pIokryZLSBqKcEEseVzH1Dwf1rE3DOaAjuKf8G
1gWOTV9BoHAzhIPlEJE/K1tT4rij78bt8gLwH08F57L+gqwpXFNeAM/MRuBL
bwne9FbgSxPcsxrDnV/bQ8h3FdSZaBHjFrgXpIB32kvgTm0Kvo3vgmfrp+Bd
3FOY1wFcU/4D/qxZwL6NRSLA3XlOzAbXtBfAM7cNuNJbuUTtJs1qBqzFnFP+
JcxpBa5tX4NRugVithtqv7JR/D8kHg1eywH33ilQntYTHKNeEH74J7jHNALv
yBcgXHoA1D24tvwIZSP+Fzi/7lHqI+fEplD54z/Au2kkVF+2eyuE6NTf6Pro
6UfXR7o+0vWRro/U6PpI10c6jyu6PtL1ka6PdB49uj56+lH/D87Re/L63hzN
quMZjkZYHbAPOaeIo0TOTEv+HUZumSqjjqU5d0gd83AkrK6NzH9drs794xiP
11r9V9J8Vp1fx39Hz3EO1+bleI93CMd16oidZ6TOpuP8OnVWmDre4wiN9QVb
y8ccdfNZHosjeY6+uH8+5kxC7o1jS45vOdbi3vgs5yXyXext9ifn7/E1/D8y
KxG+l1eEo1D2POsjtjZ5Bhp7Q/0dWHXWH0fIagWhriPNY/F68fXq1eE9o85Z
YjvV2YzqnDReL76XvcTaR519p9YLrMHZP9wPV95IrvpZU7MfMpXw7NhvvDM5
25OjaLXPeS68A1mp8f7kugTcA+fd8Vrz20m9RnzMs2ONzFeyQuSngP/eX11f
Qq1f1M8je4b9yS3q75nyCvKaciTPvzbsU6Le1eonkdeX14hXWV0hgcdVf0uX
vc39q7Ps+Cz3w+qSW3gd2XJu5/cJe4OP2dvcD/uK14u9ynqHe1arM84M5Mw3
niP3pq6UznuA9zy/c9RVTXif8KzZTrWe4pmqf53gHtS1KfRcu79zfpveBGHL
A45d74N3TXdwbuoFvg19wL+sLQQy2ggsgla2E/6kUBJz8/zLm0PMmQfVxxWC
B74F76+NgDWCR3KlNofKaS+Da+qLwvwu4Nk1GoyL+yFqOeG+f9Wv/EdiRlnU
hMjNY+A7MAEqFveGyhkNwD31BfDOaizMaQOuGa+AZ80giEctUNcrCF0/DpUZ
b0Dw8Hjw5qSCb89IYU574Prevt3fQ1U8IsWqqsf/5qU94EL5M6tZYG5b8M1p
CYkVHqa+IMxuBe6Nn4GVuxRivotwb2bhH19HsT552Hke3CcWwe0l78KdUS9B
xQ//EMY0APf4JsKEpuCa0ASco16E8MVjoO7Ts/47cIz4Jzx6fcQjOkf8Ayp2
TIXE5dL10XMRXR89/ej6SNdHuj7S9ZGuj3R9pPMkousjXR/p+kjn0aPro782
HM0mj5E4qlcrKY6a1Fey5znnRJ0pVNNR1C3J853UcA4MR0fqds4O4ngveQ/q
vxbnFraKe1Pbz9eoc7S4N3U2V/IWRt0/28NZVepYkXtW28938ZU19RWf5fhW
nZHFZzmG5AiQZ13TTB4+yzFq8nwqzt3iuFRtG89UPaJ67sk9xqNwrqC6arT6
rNrbyXtLPiKrS7ZQPRbPPXn2mvpeVsSsGWu6qxlW/cltZs+r62Oz8mKr2Nvq
PtmH6hxU/jWAnwh1deiawro1+bx4lJo+HQzbw6vMT6K6vgdfwx5W7xPeD3yX
Wgsnh/3Pc+H+1f2oV0cNe0/9S0hNLUn+PuEniG1L/tzxbxrJvzzLI/JzEVfC
vfEqqzWjGlY0atWm7pmfX/V+YNjP6t3LIyb/dUjn7xnWRxx7R0NBcB0dCUbB
AvAcGQ6B4nnCjnfAu7ID+Je3hsCS5kJGW6Gm+kjWUP5ljSFWngPVx5W/wXrw
O/DOaQiutJau+1e3TqxlnZh11gRcU/8DXEvBtbAz+PaPBvv6caiK+kHdf3Ki
YQOC146Ae89oqJzfA9xTXxRmNATn5H9BYPdI4IoQsVgYEqugXz0Ozv1joWzN
h+DYNQTcs5uCc2EvCFtOiFfF4lWJb4yI8zw457SEylkNwYmCaMbLFanNoXLt
B+A5vRRszwWI4Zv1bixRE7GElauC37tu+A9vKZhnM8Cz5l1wpzaByskvgGfC
S1JjSKzOjVIIBZE6521CY6gY3QBCV06C2nvelV+Cc8Q/naI+EqsrPHp95Prh
H1B5ZCno+uh5iq6P/tro+khtj66PdH2k6yNG10e6PtJ5uOj6SNdHuj7SefTo
+qg+Rh1FPE/HqntqalXdW/vXvvLhXv/k8igtefpnkXzEZ7/nn51rnZxH/zQ9
6FFqv4LPcl/pPPvhGJUrG/Be8u/7EoJbBoBvXUfwbB8Agd2DwLP3XWHbOxDc
+i74M9pDzfVRe/AvbQLRO1mgHtd/cDh457wCyfXRfbgut1yj25PeUpjVRJj2
IrinNxAy+oE/ayZYZfkQjYeh9h6IBB0QKNoKrq1DoTytNVRmvAbBG6cgscZC
NAx8lydrDjhXvg2eI+PBfzwdrLJCqO7cMERDFlRs+BCcc1qAd90g4WgqBO4U
QvRuJFq98sR9V6T6PyFklEHw/E5wbx8CrrmtwD3lBfBObSjMagbO9FbgmtxM
qL1mGd8YKkY1APvGaVDb4Mv4GCp+/BdwJt6j10fuEf8Eq2gnJHopLs9Vp55H
10f1Mbo+0vXR442uj550np1rnRxdH+k8T9H1ka6PdH2k8+jR9VF9T5WSJ73P
hxuFPrnRTu37r6n9DzcafNBzqb0PH1efPJ291eUodW9J3Y9Sl+v1KD386L33
oO990CM+6f3X/YgP19tP7lkdnT+JsgqBJ/MrcK3rAcb+oZD4jdflzcC/oRP4
tr0GwdNTwbeiNfxJfbSkMURvHwH1sP6jY8E952X4k/qohoqJ6zlwJp5rRmNB
ruNdMaMxOFcPBO+pFRBy3QC14qhxDp77Eli3TsGdvWPBf6sA+Fu6nDUXtdxQ
tn8GeI4IIc9VSOxWrswQj8fAcWoV+PPWQLgsD+7GTEHtfqUlfMzfcjWunwDn
zjFQMb8bVE5/GZzTpFnNofp3b8XvyfK3bp1pLYRJTcEtiqAaaxaPdGfMK2De
KgC1Db5lH4Hrx38LNdVHExrfU3uJJJaDaOoc+QLYl45D4oR1ffRcRNdH9T1P
YhRR+1jor21b3ff/cGO5hztW3V//ePvk6eytLkepe0vqfpS6XK9H6eFH770H
fe+DHvFJ77/uR3y43n5yz+ro/El0faRE10e6PtJ50Oj6SEdHR0dHR+e5ilof
FWSA9/g4MHImgXddCng29IfA2h5g5aVD4PDX4M1oAfwd2Jrn1zWEyM2DoB7W
c/wXcM1pAM7UFvAA9VHtc/BSW4BzRgNhygvgSmsDvg2DwcpfBpHAdai9YorH
TLCDFRCTiyaw6uGMO8N9A7xn10Pi3coqCtFYCCK2B+6vgKJwX/ffDUOoshB8
eSugfMN7cGf6K1A5+SXwzGoqzG4lyKowuQc8aYJDck5qAnWpj26ObghGWTFU
t4f10Qfg/vHf7j+qj9wTGoNz9EvCmJeheg1wFEqN3eMa/cY1riE4xjaCilEv
gVlWAtVdrOuj5yG6PtLR0dHR0dF5rqLrI10f6fpI5xGi6yMdHR0dHR2d+hmO
4WU1xJF84vG9+ihiVYI/+zvwbB4gZI0Gq3g5mAXzwDgzB9xbB4BnXRfwrmjt
/cNZdon5dQ0hfHM/qK3xHJ8ipL8Ej6E++oOKScw6S8xAk1tcU/4Dzl/+Fzxz
W4N/+5dgnN8GUcsFao2j1jXxaBwS01jFVLvqddHv3v3dbxtUT3UVv9mafA34
LttRCv7TC8C7cwi4FnQBx7q3wZ05DJypjcE1uzUkqr86nHVlmuCc1Bhqr4/4
bNnYxmBWnge1nd6lg+G++mhsQ3BKjtEvQuXsPuCY3hmcP/wDXONeAc/YhuAd
3xhck5tD+U9NwJ05GariIQk9GE/UR7wD1cc1zn/UeRaj6yMdHR0dHR2d+hld
H+n6SNdHOo8/uj76+6Q+/nvn+tVaHR0dHZ0nkqrq330V5OPklyTPKFNeGb62
Grzbe0Nw7wfg2fkOuDf3FtangG/nG+BZlwL+jNZQc33UCEI3doB6XG9OOrjT
Gkh1Hf8/OOy2hWtWY3As6wPulf3BMfNlqJjWACon/RscC3qCcW4T2OUlwN+T
5Wy6RF/J8qYqFhPiwt2qqMDnlV87ra6exNO2+zr4zq6Gis1DhQWdoGxeO3CK
RRWau5Z2A8eS7uDL/BECR6eCd/0gcE9/WahDL903v44z3P6gOBKz4DzjGkL5
hOZgOK9Cdctj4F70FjhG/htc4xpD+c+themdwTGrE7i2jgLv8XkQ3D0enLO6
gHduN3CldoGKqW3ANb8PxKNOqP7B2wiod+Mf3J8sleJVv6fzjEXXR3+f6PpI
R0dHR6deRtdHuj7S9ZHOU4yuj/6qPM2R/7NZZSTXa89mO3X+Pqlp/eq/qj3P
X3R/6vxJqgeav80Hq/GFrJeMMghX5IB9bTd4zs4C//XdkBjnxyU5OPWfmgKe
xY3Btbg5eFd3FDb1Ad/2N4RNAyCwvLWwop30+/rIt6QRhK5tBbaHFYfvzHzw
pL0ktfA87vrIk9YKXGktoHxmQ/Bt+AD82bPBsbATuJZ0EVa8Ct7Nn0HgyEi4
s7QfVKx+B/xHZ4B96wTEI0Go7v5olaiM4nKVgXtz6aKBWxD2XQH33rHgSG0G
rhmvgDu1CXhWvwbu3V8Lmz8A/9mFEDw8Hnz7xoJn7fvgndMO3KnNpD8/60R9
NLkJuMTyCH+42rZYkdsz9hWo/LkVmN5bkFhd/G4YHPP6QcW0duA/MAPcqd3B
MauLsHAAVMzuAY6MweBd/w045/WGyrRuUDatEzgPpELw1lmoqooIkTAk7rFL
h8GTvRiMc7sgdKcIYrYfqu/eP66equ//JDpPPbo++qui6yNdH+k8a9H10ZOO
7k+dP4muj3R9pOsjXR89A9H10d8nZUr+6rb8eTiO4t31cHvge+Myj7dtjyu2
DD9Hyc9yO1/z9NtWv/LsX2sdHZ3qtRQebOwXi4Uh5CkF8+YBsG7sgVD5SfCf
ToXg2VngXt0W/IdGgy9vLvA3T6sPLo4VNSrAuf0tYU0X8K7uDJ413cC/cyAE
dwn+ZS2gxvpocSOwr2wG7p7VhDd3CXjSXoTEWgqPqzia1Qy4GoNj+itQuaQP
eJcKvhPThfy1YJycDYGzK8F/fgeY57eD/9QSCOwbBc6tn8Cdta+DL28RWFf2
Q2KlbnmhorYPrNyVUL5uIDh3fA1Gznxwrx8srH5dWDkA/HuHQyB7EgSzZ4H7
0BjwrOonrHwNfPM7g2dWM+AswcdbH7nHvgzOSW3B9lcAr0vsbgQcc/tC2cwu
4Fn6DjimdgT/8nfAsWAAVM7rCWWTW4P7F6FiTi9hbl/wZE4Hf8luSNxWsRCw
ojcrSqFswZtwZ/zLULl3MjhndofK+a9BxfbhYF/YCZFgBZjuGxCtikVr/psA
PyqJ1R4441Gv+fCEo+ujv090ffSsRddHjyvP/rXW0dHR9ZGuj3R9pOuj+hJd
Hz39sN/2yHD0m1hcUxndqbNQojIhGfXZmmamJe+NfT5P5pxM8rHUPdQ0zqzL
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
//I24Fkp+Le8CYHlHYSMNkJifYYOgd/qo9IloPZAqHQjuNJfBEdqS6iuj2Rl
JOfLuaa9LMxsDM7ZbaBiTltwL+wKvsWCe0Fn8MxuI8j5dZ70xuD6tQk4F/cA
78GJ4Fn/NvhzUsGx/SOwzm0Gb9Yc8B35BfxF66Fi9Wvg3/AW+Na+A86M/uDf
/x1YOTNAPZeIoxAc278E/8HRUL6yF1Qu6QauzYPBs+Vd8B36EcySDeBcMxA8
C3uBY1YrqJgjONJbAGtDb7rwROqj0S+CP60X3I1YkKiPTAdUrnwfPJcOgnvD
UHDMaA+V4xuBa9QL4B79Ejh/aipM7wDlk9uA/+xqqL594hCNhqDiQDq4No0A
+/oJKF/zJZSNfRlc4xsK4wTHz62gcsEAcKf1AMek1uAc1xA84xtBxfjGUL74
bWFuX6iY3FLY+gO4lr8Dld/+P/BMbAzOOX2Fdd9A4ORyMK6dBCvogj+pgtRZ
eYm5eXpW3r3o+ujpR9dHuj7S9ZGuj3R9pOujZzu6PtL1ka6PdH30942uj55+
2G/8Pz63cHzIsTHHeByHcHTEkRtHdBxxcSTP8RhHCBwDc3TK7Rzb8FgcX3Hs
wS0cY6ijaI5IOe7iyFwdNXHUyjYHlLB+YZt5LhztcCTG8fMPMnzMkS3vk1IZ
zs7iHjjG42MefY4MW8vxFUf16lwshufLNQ24hW3Lk+E+1fNiOzmW497Y5+o8
sUsy3DNfM0WGc/m4T45FOXpfIMNPBLfMl+FV4+iOV4Et5FVjD6ujSr6eo3qO
P9X7h+Nhju25RV3XgmHbWLmw5/m5YxXJ2pBjdd51rI65ggdHs6wveEZ8ljUI
j8X9s528M3k1eV7q3C1eU95dfD17nrM9eWVZ+3PUzbPjeJ6v5z3DLTw6azHe
D+xt9i2PyxE+7wS2gVt4LNaAaj9zO4/O8Tz3rN4V7A3eUdwnR+/sPe6T58V3
sU+S61bOqOT9o36W+RlkGybK8Brxs89rzdfznmRLeCer585nec/wWrBv+f3M
PfB+4GPe26zrecemybBX+TmdK6POgOX58lpMleE9w0qKdx1X7WAFxLqS++d3
HXsjVYbzh9Vz4WN+srxK2A9VSh7H97GOzH0z5WobI3HEFTY9YFYUgKdoJbiP
jgbWFL4VHYVt/wX/jjeENV2Eza8Jcg3t8PkMCJwYB75N/cA6Mwf82ePBueV1
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
wcr7COyMN8DZOg0K57UH/+TGYMxtKyzuA866T8BY+yH4koaCkTgEis/mgZ3Y
D7hKQ+GEp6Ao7VWoqiiB21f6c/2u415C10e/VdQnn6ltTzVn0PVRZAYVueVu
eyDy1fq3Vm1D5Jba3lXbcXR9VJ/+rE+f1L/P73Z0qT/r+iiyDfXZp7az1P/s
Oh660PVRbR2j6yNdH+n66KEPXR/p0KFDx/2Ixy+rf/yuSMf9DllG1OSioW/W
QyC5MVgZXcA5MhXc7e+Cs24IBLeOAmfjS2BldQQ7LUpY1caWSzGAu7IV2CsE
Z9MYCJ5aJHw5CZzt48Db9joE90wAb0UrCGZ0FNKjwE5vCc6xGCg+vRRuXtkN
lcXX4Y72K5hFcwUGzqAT6zH842//L2SBldoG7PVjheO5UG5dgdoyeTXKS0wo
+W4TOAUTgLPmrOgG/8BvVr29erasmGrm4Ck1y8LmwDl4RkoXcAo+AmPlQLCW
tgdzibS8C/gT2oO57n1Q21nqOwXusUSwVo8Ce0EToWY1iV9SDdWsbc7ZdDGN
wJrzDLixzcFMfxmCh+OgzDwD5bcqy2/PWvwno4tzF2+GwPvpFBStnws3UkZC
Uc4HUFHsVtyukmruV/XtGXl1TMqT3ypbUngOQt9vBX/+B1AY0xWMmPbgn98J
OL/OTBkB1tEMKFw+FAI574F1YBlcn9kcrGX9wZ8yGIrmtAFzSlOpCVjTWgg5
74OZ8RrYK0cK+CHjNf+6T6EopiNYse2gaNUrUB6+CjWXoiujXzV0faRDhw4d
9yMev2ri8bsiHfc7dH2k6yNdH+n66FEMXR896hE5y6jumTkPw5F13G38unmp
vrP3L+qeN/jwhL77Oh5oKDOaSs6vAmd5IyG1DXD+m1cwHEKHp4GV3w+cnG5C
fn8hpwd4GZ0guCoK3LR2QmJTcPJfhODBz8HbOhrCp5ZD8GgMWCtbgZvXA5xt
r0Lo/AqouOnAnWlytcwyf97CTLrUfwK8S1ugqrIcmD9zn5s3ToK1Mgq40ri5
pDkY0Y3AXNwOrPw3IPRVFpSbP4K6qkCt88SKLbj57RawCz4Bf2J3CMQ0AjP6
WbBjmwp3fB+rmIPHVRT8CxqDsfol8A7HAr8f1khoCXZSD7AWdwB34wegtqTc
+g7sfTPBTOkP7qLmUHOuf1ENyXmASjVkzW8M5rwGYMS1EjKHQfjLeCgPnIXq
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
zHp4f55539D4b5u1DfW4VHwe1qO7oNsyDzkzwhTjesB+fAeMhxYiL6wdCqeN
RWZoILKHtYLoR57joLaki/3+jszU0ai+fgOePWm4e7dBnkX8RGQ/erQi+9Gf
NrIfycjI/IEj+5HsR7IfyX7014nsR79XGjedu43S+PbGt4gVbo23Jm5/8C2N
t+m9Ne/HN9438e6Le3VqXlEjZpWLVXNizV7jLXs/b+O98jyjOjFbXNFMfO39
/1Z7blH/83DPRGvxGHU9hWcLje+996Cot3j9jvJsoVHvaNxHGj+y0S0/7ue/
9ueerd1vf8R6kPvtiYyMjMxDjPdv0Yrcb6CbMRile6fh0ufHUfnpITi3xqFi
yzhcfW8fLp1cg5LtSbCNa6VYFKQ4sgi3nMWovVmGB68TrlPVXr+MiovvwfXe
EVz+9jUYZw+Be9dUVH3zJq6bC3D7WiXu+7pUnmuqqu5UmHDl/NsoObUNlW9s
gm1yJ9hjnoIj0UehznDwNKa0TgoxIfzf9CP+p1/h2BawpPeHeXksrGvGQT9l
AAqSukMf3wnF4b7Qx3VAUXBzVL1zGGL/G2prUVtXB/PuFTAuiYRlSQgMm9Kh
mT0K+sVjoEntg6LJQ2FfNR7u1/dBP2skdAtCYZg3BtqwNiga2wq6pF6wzhmF
otBWKI6irLUzxrSHLrEr9NMGwjB9MNwLQuFcPBZZsQEoz/0CnmOu/je97lIJ
LKsmwLBoOIriA6GN8MOv1Y8EMeM6N7wTskP8URzXAxdGt4ZuZbxi/VRot89D
5cfHcS3/O9TdvISmrGBX/3jQcLkwD87P3oLtjRdxdnQH5KYFwbJ/BSq+fhe1
t66j5uZNeLaujNm423jVaN3Na6g2aGB+di0KZ4QjN7o3skb5IH/CQOQNaYn8
IB/kDlfccyiCfXG+9z9wcV4qxN8TPOdj8kyjUWQ/+r0i+9H99srzjLIfyX4k
IyPzB4jsR7IfyX704J8R2Y/+fJH9SObXjZjg/XvvhYyMjIzML433X3Vu6y/A
kdYJlgltYUjyh21qZ5QdnAb7ijA4p3RF2ZmdcJ/Zi6oPD+HS5y/jVrkVTZkp
U3f9Em47tai6+BY0M/rCmNYR1vWxqDq9Hc4NCdAn+6PsmQw4dkyBZUZflB5a
gMsfH8cdWwHu3uW08J6VeI33p/6uquYWrhadQ8mx1bCtCIE5qT2s41rCNqEN
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
spt3FfrrOj5gX/mC4MSY/sDUf/FHL4XEH+WsxB/lrHJLP3OLxB+JRKIclvgj
8Ufij0QZlvijl0+cl8dKWdeK5I2irJa+xriek5Qyt5VEJdZsaVXLaheJco00
f5R0/SK49GEpcLFrALjUrbiiWBZxuatBwvv+IKaFL4hvaQWt/EDse+7gxqEd
wDQUOoVJvUFsfRcQ1zrAoKUviG/hb9C6GDhd3xVcmzse8FPJSYnA5LBG9QJR
9QuB+NYBgCdsx7XyBzwngZhqbukHYlv4gDPNvMDZlj4goYU/ONvKIKGVH4hq
7AHundh774/TFbi779ZFEN2pAjjbwhcktAoApvrVeE09ae0P7p05AVhBsiJu
YGcQ854bONM6AJyq7wXoko6/AJyo6wtOVXAAZ0Z/DUwRgDkSf5T7Jf7o5ZP4
I9HLIfFHIpHomSX+SPyR+CNRhiX+KKfEfO+mEq/cU7qhxCuM6u9K+mcZeb6O
UYpXYskFSqeVLO1TSn//EncWWXpX1xklzvs5JV7fpcTM0/p2denvPlD6Rcm8
pKXeWvN6p9IjJUutW1/br0r7lFI1WT/29Ms8a53W12B9zem3wghwJfPKNSV+
S/DKVSV9DVP6PO5R4rwkKC1W0u8O66NnPjq9La5V3mu8EqfEVX1FyfxTzxol
kUiUPUpNSUlNu09vHt4PfnmnMNhbyxPsqemRpfxS0xNsfdsdrK3gBtZXKGRQ
MV0quYO1xe3Ama2rgT6iA8N6g8jAfGBD5SLA9CnWXKEw2FjJYHlpB3Bx70/A
FI2kFHD/1mWwpl4gWFvOBayvXBisq+gK1v4Nbn+wTrGeqBY3VikCVgbkB9Eh
wwHbSnnyxECdKbGxV1uwonh+sKmKJ9iIThpdNWrYULEwWG8Ex21DlSLg7plo
wHqSUw1+7t4crC1pCzZUcgdLSzqBeYGOBsWccpz5JVzBvCJvgvXd2gLT+Rip
6lwKUS6X+KOckvij9GvW3xV/pF+xvk7ra7C+5vRbEX9kKUoikSh7JP5I/JH4
I1HGJf4oO6VnTReVNirxykylTUq8skRJ90d0HHqdrIF5I7P9U0p6GX1XUvr7
7vQemrelv7tZaasSW6R/4UqIVNI/+0TJ2kiliX04q8S29J6cUIpWsqYt/To9
11ol85HqsrSny/xTJ5WYb+v9tFTD88XEUuuUue+wJEs5vKVe6TXrZXTXwBUY
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
ln3YBUwq5gemVywJvrXJA4a72IKBBV4BofUbAsZNlNsl/kgkyk6JP3oRJPEU
iV4+iT8SfyT+SJRZEn+UU9Kjxyv863s+65P522NNlv4anU/e5N/48wQAPnWU
J0Vbk41bejf9vJ1/287nh/L5p/q71tepX9HHZX0NeklLr60pqZdhPDlH5j2x
1HPzWHFG9Cexpj9qPkv0pJL5u+bi+klU4hWuH/1scD75NP3e8pm8vM6nBnMV
8Vm6mTsLegT0Z6fq5XndvAZL9fDJrZbiZk2f0x+dpevmPeH9yHmxFAFrahOJ
RM8sbX/dr+fOgJjxA8DGum+ByOKuYFmgC9jRqg448N0nYGkpN7A80BFk8v46
L3sQ4l4ALKgUCHb16wXCC+cDM7wLggjjcbEFZ/g4gam2/wf2jx0B9GFd2LAc
TMn3P2Bz1zZg04cdwPoP24O4edPBwaDRILy4B5juaQdCC+UHS1rUBju//xSE
BbiByMb1wKxAD7C8XTOQ8uQxSH2SaJCaYkCzlHQPsA/ntm0BQS5vgmneBQGd
EU9meFaXZPJHLq+DFY2rAd3b8myNOSU9QFgRG5A9/ohnLwx1zg9+9HAG+yeM
BLvGjQah1aqBqSUCwHAPRzDQ6U3Ac78HvPlPsLBtO5CiDKd8t+d2iT/KKYk/
Ykn9ivgj8Ufij0Qi0XNK/JH4I/FHokyS+KPslH6/XFbaqsQry5W2KPHKaqU7
SpbqZHme/8ynXh5Syrr+U4uVdittVlqjlBXtZqeYzWYkhnpmvlMp/bO7dTHD
5xng1tS/Q4mzTy82QYlem+eH88mzlmqjn1qmxCtch78qPevY05c+9qtKY5T0
Ea1QojtLv7aDSnzNXwP2KllqMSvEUfBXAl6h06SvzLp2RSKRuVKTk1PTfhe6
sH4l2NSsBois5AvW1ygJtjeoANbVM9jaoi5YGeAAMu6MzP1RWFEHMM0xL9jV
9xOw8P1GYKpzXsB9d3QWfL4q/dGeUYOBPq4LW9eAYKfXwPQAV7C6cXWDtg1B
RHF3sH/MEHBo/HAwxTEvmB3oDpZUKQWW16pqUK0cmFXOB0zzsgch3g7gxJxZ
gG0lJj4GySTF4O6dKyCiSkkQ5Po64BkRz7qn7m/8kXNesLxFbZD09OkfZ2H/
euUiiAgoBKZ72IIs90fOqNZmqJMtGFggLxjj4wlWfNgN/DR8KAiv3wCMKewG
+jvmB4OdCxg45gPjPZ3B7Ho1QdLDh0lpv3vTs2fL8hdlssQfZafEH734En8k
/sh6iT8SiV4ciT8SfyT+SJRZEn+UndKzNe5i4nNCuf8qSOm40i0lZrbcPbVN
iXljghLroSth+fFKzO1Z/3ol+qbDSvRcR5VYw34l1r9B6ZTSKiX2Rx8F53qT
Eq8wv2WOzbya9exRYpbO8mxdzx5ZhteZG99Qokeg82L2+7MSS7IV5vbs+Tql
X5QYAdbGnVrcY0Y3wZiwXebYkUqPlG4qsQ/sJz/F+vUMnK6HtS1RYqz0WWYM
9V1kjNUJpbVKHBff5YzToXCkMUr6+tHdBN0xo8FRhymxDKN3TYnrgauFrdBD
8Ump+5RilX5Q4qc4XrZCF8DeMmJcCVy9epQ4C1x1HAs9vh4ZvjtJiddZZrgS
e8VZYOvsOffRMc5DlU4rbVfijDNu+j3CaPM62+V1jpr1M1Zc+ayHq45946fY
B8aEEY5QmqdEr3RWifWzn1wDbIu7UumaGUO9n7IfQyTKiHR/dHTEILCmVjmw
qU4ZsLtbY7CvXzewsnQRsL9dE7A6wNGghCswnc8Q4Gig/E5kSTfwnPvrvAsC
PsV1S9d2YG7tyiCkiA0I87Y3UH4h1McRBNn/C2wf8A3Qx3Vh10YQ4pwXhPk4
gRVt64Ftn7YDIX7OYFHbemDbsG/Aisa1wJzSvmCCqw1Y3vhdsPWzjiCoiC2g
P5rmnh9M9S8MEo7sAyqbT01MfAT4jbS0d3cwtsA/QZiPAzB5Ou+CIIx42v1B
qKctoAOyxh+taFkbJD1NTUo71eDm+bNguq+LQbb4o6GO+cFoDzcQXLEUGO/j
BRZ36AjW9ukNNg3+Dnxv+yb4zjEfGFDwdTAp0AOM83YBP/oVAU/u3AJpi1L8
UW6V+KPslPgj8Ufij9hz8Ufij0SizJX4I/FH4o9EmSXxR9kpPf/R81JmtvRK
3GHFSDJHZVbG3JVXliox16IToVNYpMQ8f44SfRBnipFnlst8np8KVaKLof9i
rsg51XdeUewhc0LmjdxrxwycuR/7zIx3vhJzXe4+4q5CZq28wnc5Ln4qWImv
6S/Yf/osforZLHvIaDDf5n4z9oRZbpQSS9L1TFZiSWbXLElfRu/DTJgOiJ9i
fNhb5rd0rwuU6K0YJfaZubH57DOX5ikQjA/ngpFkzsy5XqiUaibWQ7fCtcE1
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
iV5MiT8SfyT+SJS5En+U22WeH6afxWV16y+CMqs/L864rMnJ0y+ZFa2/mDVn
/x1hTc3/4X9/C94qd8k88i/aWMz79uLs4xVlRLo/uv7LTrDmLW+wr3d3sLlx
dbC9fUNwclEIOLXA4MTYYWB/v15ge6emYEvNUmBj1QCwOtAFrAl0BquLuYBI
WCFQ3AWsLukGIovjn87LPPOBxZ4FwPb6b4OT04PAw+vXwF/6qdxQajJS/T/c
UIoFtE8pElOSQfKjB2DPxElgRpW3wMGpY8DW/r3BZIe8YKqXPQh2LwCmFHwN
zK1YHOzo2gbMrl4ezHnbYM+AXiCycXWw45vPge7OLu8/BDZ1aw/Wt20MIkr7
gx2DeoFp7gVBUFEXsLh8AJhdzB1MdnoDTLB/BYT5O4JVHVuBHSP6gfHuBUH0
6mUgLSZ6NKyYa965FvatxW3dDLb9OAJsGtgPfPqPf4BBNq+AUYXtwUhXWwM3
GzDawwGMKmwwvWk9sPmLz8Cab3uDpR93AqPLlgAren8Mtg7/Dixu0RBM9CkC
xvgaTPBRlCgB1vYfCPTePsNSFr0wEn+U2yX+yFzij7Kn9RezZvFHOSXxR6Kc
kvgj8UeU+CNRZkn8kSg7lZqucrp36Skr8u3nq+HFj5VIJBJlp/SdV5eWzgFr
fOzAhioBBqWLgJ8/7gBuHN0PYpfMA6fCJ4P1jd8Bx/p1Afu6NQHLvOzAqhKu
gDvrVhZ3AWtKFgJ8SuyqIvnAcl8nsLlzCxCzcSV48uQR0PvGTP4v5wxYawX+
OkbNA54/sB8sbFwTHJoRBE7OmApCPQuCaY6vgVAfF7D2sy5gXbd2YEnNKmBx
szrg2OzJYFGremBFO4OruzeAlKQngK3cjDoJQgMKg42tG4K5VcqC8NJ+YH75
ABBS2A6EeTqCOSW9QWT7BmBZvYpgUYUAsKxRHXB81kzw07gfwKPER8AUk7/f
VGhlUIzda6YIm21kuxZ/BqweNRKMCvQC39m8Doa7O4OxxX3AxFIBgB5nuLcr
mFa+OBjmVABMKhkA5rVpBI7OmALmtmgCZr5dBYRXLg8GudqBKcV8wPDCTiCk
9rvgSXIKeL5hiV4EiT8SZafEH1mqM6s/JRKJRC+rxB+JPxJ/JMpciT/KKVna
3WGe/TLOKWbiu4w8nz7J63yiJc8N1svrLVraZ5J+SV18+iefKss+8Jmt5rWZ
j8vca5iXND+7wLyH5jUwVnzSa/o9SX90rIfjuqekv6t/lqd8s4z5GM37n767
Sb+kfoX3nf5cVPaEz9g1XzmW4q/30DyePH2dzxo2L2/NWrI0Oj7rlk9WNX/X
0qj1cVlqi33Wv2f4xFg+9dV8FaW/QtIvyafE8qm4luaU4rxw1ClmYhme1XBW
Kf3Ypr+K0i9vPi5L0TaPifnsm0eez/blSPXVaP3KMe+VNb1Nf1VQjC1fc1Xz
6cN8anD6c20pepbWrSg7pfuj6LkRYF0VX4O3S4DdHZqBmAXBIH5BGDg6egj4
6dP2YHP98gYNK4AN75YEK30dQWTJQgo3sNK3IFhWKC9YXdoDHOr7EbixdxfQ
k3tm6SlJyeAv+X8mKSklJck41+UJ2NG/D1hcqxJY3a4R2PV5Z7C6TX1weOpw
cGb9ErCwbnWwsWsrsLp5TbC+Rzuw+bNOYHoFf3B8xhTwNDnRQOni4f1gjMsb
INy/ENjWsTmICHQH00t5gnAfZxDq4wpmFfMEK9o3Aus6NAdb+vUFR8KmgYvb
NoCHd64B1s+DGdKmMHOiRBdpvvvu3s0b4OCCeWBy7RpgUIH/A0PeMBhk/waY
4OMGxno6gvCKpcHWQd+C7QO/AVMrlAXfvJ4HjPYpAiaXCgCLWjYEIz1cwChP
ZzCmtD948NuvIK1bckpD7pP4o5zSs2aDlnIq8Uf6dfFH4o/EH6Vf3nxclqJt
HhPz2TePvPgjUfZL/JH4I1M14o9EmSTxR9kp/X/za0q7lXiF/1Pz7Ghe2a50
U8lSnXRDzEP4xFVeYbacdf1frcQnvfKkaz7JNP0a9PwkK8RR71Iyfzf9rFJ/
l+Nar8SRci7MP8Wzyp/v+a03lH5VSr+kXudhJfZqlRIzf3oNnppuTevWKEpJ
j+fz5YHmMWEWzQjzCjNqriVe4XpersQrR5TS9yOMD0vSKTNK5j4344pWov/i
FT7jeJ6SPq5lSvzOtFQbvxt54n3m9jN7tF/ppBLjoH+bPevK0cvzf5ZbSozh
TCX9Vxp+f1qqjf9P6WtphRLv3+cdseiFEZaKWi7g7I5NYOs7JcGuDo1AXNAo
ED0/Avz01ScG3VqDBf7OYKVHfrAq0NGgvBeIDHQDy7xswZIi+cDmGmVA9PhR
4MH5s0BvPDE50SDpCcgKT2Q+Ur68enAX2PN1T3Bk8Ldgc7+eYMPHncEvw/qD
FV3agXnVy4Pw0t4gLLAQmFXCG4SWKgrmVS0BtvT5BKSo4xJY/+XDe8Akd1sQ
5PImWFA+EES2rgdmVAoAq9rWBcvqVgaLK5UEGzu3BBveN9jUvjmIbPEeiNsY
CVISH4PUlCSDNNuQRaEy/XbB3XdaKykP7oOYyKVgYatmYIiDDRhTxBEMtMsL
5rxXG2wdNhDEbloJ5rVpDoY72IKp77wFFnVuCcYGeIKQquXAxDJ+YKi3K7h2
5jTQe5I1oxRllcQfZafEH4k/0iX+SPyRLvFHusQfiZ5B4o/EH5lJ/JEoIxJ/
lJ3S75FzSvQyjOREJT5v9L7SSiWWZ9bH3InR5nVm8rwyTYm5OjPDfUrMJ7nj
brNSghJroGdhuyxP78a29B0yFPcUrVMyH+NFJWanzFi4QjjeMUp0UsxtmFNx
5fAK62d/Tigx86cLYJ26p2BtLM9WHmhieX6W5bknjdeZ3+r956foPvTr85XY
7hFNNzQxbpxlxp/R0CPPK/RxwUqcQX7qjBJL6rva9JEy29ezR9ZGr828lO8y
thwp9z7pa4+v2U/2X19pPystVuK4+C7XKnuyRYkt6jWzBq5trmS+y2hzrpmp
MjL6KJi18soSJZbkiJYqcR+apfVMh8VcmjWsUaI/opc5rsS1zfjwCmvgePU4
cM38oqR7Yeb/+u5W+iC2yzL8xqO/ZvTYFudL91Z8zbXHKHENcG3wLmbM9d8Z
zHepMT68d/RVxzKsh9f1mWV8dL/A+WJtXD8cKeeU88u7gOXpdlmScdPbZXzi
lPjdot99vMfZK94F+rgilbhWOa5xSnyXseXa072SftczYnuV6OCmKHHUXMN8
l6uCrzkKRoB78Ng6x84WGU+W5DfYU1G2Sz+74Oy8GeCnri3AwU/bg1Pjvwc/
fd4NHB0xGERNGw92D/gSRE2eCH7p+xFY6mEDFnvZgvWt6oKYlQvA/d9uA/MW
09rN7r/C18cbtW4l2D34W7B90FcG3/UGW7q3B0HuNmCi65tgelFHMKe8H4go
6QkWlvAGi6qWBNu/7An0Vm6ePAxC/AuB8AA3sLlPd3Dr5EFwbvMqcHDsYLCl
ZycQ2aQW2NXzA7ChbUMws4QXWFS9Erh3+RxgzQxctkZM80rm78YdOQRWfdcX
DHJxAWP8fcDq91uBrYO/AvO6fQDGlC4NlndqBxY0bwBGFXICE0v5gUU9OoKp
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
q2R2Krgo90r8kUiU1Xq5HcTLPTpziT8SiV58iT8Sf5SdEn/08kn8Ue5VxvPS
jOzw0a9Y/7fMz9fDjJfJurayf7yi3CiZWZEoy6X2zqX97bwiNe1U5v+Sm8+0
k1DFIDEJrP6gLVjwdlmw/L1aYG2z+iB28VwQFTIRTLZ/Fazv1Abold08vA9M
LVwA0BOFetqBEA9bwHO/Q7wdwRT718DpuWHA1BF1AsbT/6LQ/7tyy/NwRZYk
/ij3SvxR5rYo/kiUdZKZFYmyXOKPxB+9MBJ/lNsl/ihnxRimWpBekh4kfUfD
6+Z/D6hfz1w3kf7fHlpThjIfnaXPWjOK7IyDef16zXzNv8pPv930r6c/ImvW
jKWazctY06J+kjafuWmpP9bXZqkP+vWsmzuRSCR6OaRn5lcP7wazS/mAPd9+
CmZVLAU29/kUrOzaFswu4Q42dH8fmHyl0o0j+8BEt/wg2NsBhPk4gYjAwmB+
BX8QEeAKNnRuA1KTH4O07/n/Xmckejkk/ihnJf6IEn+U/vX0R2TNmrFUs/gj
kUgkepkk/kgkyrjEH2W/9OyOpwTfVHrWevipjOSKfLqr/sRG84w0UumOEq/E
Ky1VWqfEZ2XyW5FPwNRzZkvSW9mndFXpWUfBvulP6nxW8Zxk8ydUnlY6q8Qr
HOl1JV7ZpWTpr/WvKG1VstS6HoctSueUnm8sWSfzlcaVwLueV6zxwpZqE4lE
IlFmSX9i7M7hQ8GcqmXBrHK+YFGzWmB65RJgVrFC4NDwfuDp02SFoV9PHgEL
yxQFC8p6gYVvFQXzSnqAxaW9Qah7fnB5/8+An0pWhxTk3LhFosyR+KPsl/gj
vS2+Fn/E1+KPRCKRSJRxiT8SiTIi8Uc5JeaHN5SYVTKGzMmZebIkI3xIidFj
Jj9NKVqJTueU0kkl1s85Yiu8zoyd765SogNiK3p+y5rHKV1W4vU1SvoVeiVm
9ayNbuW80mGlB0rWxIF+J1YTS3I31xGlM0r3lSKU9ivxuZmM4XElPQ50lIzD
RSV9RMuUWCevcz0zqr8rDVHifrkEJd378BmgMUq8wt7SVR1T4tNF+a4ebc4L
o82e8zrLM7asgWPku4wbx6vHijWzPK/rO9P4+oIS/azuDS3Fn2LcONL1SowD
32WcuZIZN46Lo2A09P4z2rzOkvqaZ81cRayZzwtmz//DDSYSiUT/xdLP1v79
+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
R+lWzOVjTMt22M9PJ4yoi6+uTpO/O/Rrujajd64l3k3uBPLlhPE/s9R4Li3g
koR+TYPmDiG1Xp3XYjt0H65/7n7PHQzYDq/L1vL7z/M9M98r2gfXZPHVudPC
V5PifezpTfn9SSYk7BtzU+liPMqR8u8DfI745PKvGZ9PbkxYn2Nhrmze8uiV
/MtG8X2RJGlosR+pEfajZp9RNYf9KH/UfiRJ0q6zH6kRxfsz0G747W++Zix6
c8KajJeYz8bYlXsLM+K6O7kv4b4KjP0YKzJXipl7jL7Y5ryk+FvzzOdhdh9z
qGhbzFZiBhRr0rDYAo9y3fLoJ5L8jtCO9DpZcRYlnZclXEXMi2OO2SMJjzLO
p03Tnk5PmJnGLDU6ArMu2U4+f4w7KixP2CbXFfuQNxE+HczWy/ece4Ywa5Tl
fF7oR9yHhM8Un7spCXvC/nMNM9eUu3B/JWEJnyaaEcdFm+NZ/DsDd6LgzPDq
7AlnjC7GEubX0QHzeX3sFUed33eide+7JEmtYz9SI+xHrT7DGhz7kf1IkqTm
sh+pEfloh7/WOj7Db7Izp4gRFOszgqKPPJZwL+WHErbGb80zn4cl+Z0TmCmU
j4G53riK8t9b51HmCDHWZd/YAq+S35OZESm/7c6jbIE94ViKx65OU7wyuQJZ
wvcl3lPG/7z7PCtfn/l4+cxM5o9xv3pmY3JdcY9rtrAoyRsBrYrGxNXIcrbG
+myfPWFJca/Yc5bwqeHV87sicHeF/PszyzlS2kre3cDVzr8AzE1YzqeY9Xld
Pmt5d+MoWJJ/7ngW/3ZRfF8kSRpa7EdqhP2onPOsgbIf2Y8kSWou+5E6h2Mq
qRG1PikDXd7Io5IkjTT2I3UOx2lSI+xHkiS1jv1IA5XPUsvnBeWK6xefVXy0
1vZr7UMj+5bvYa29Kr66I8ahqP67Wf8aYEnxeiteS8Ut1NpmrUcb30JxH2rt
W61PUK3t13+01p40vs+SJA1d9iMNVD6+sh+pc9R/NxsZ1duPGvksNLLPkiQN
XfYjSZIkSYL9SJIkSZJgP5IkSZIk2I8kSZIkCfYjSZIkSYL9SJIkSZJgP2qb
vr5If9+OyO/6+40ZTH6XwrW0Y0ek3Zd1QdrP6r61/XSZoZ+driVJklrAftQ2
9iOz67EfmREW+5EkqdXsR23gT3ZJ2nV+L5UktYD9qA38mS5Ju87vpZKkFrAf
lSr7ad49e3pk/ic/Eplxyt9U8o7XGTOIzP7gOyNr7rw1Ur3S0oy7Nl/n2Wyo
5VdcHJn2lldFprz2JcYMIlP/5mWRhz/7iUjP6pWRna43SZKaxH5UKvuRaUHs
R2YkxH4kSSqH/agc/ZVbMVTHq90zp0W6XnxYZMzBT4+MO3LvSo54ljEDy5GV
jB21V+ShA58SWX75RZHiVdeuq33+WWdGxo7aM7Lw85+MLPvW140ZUJamLDn/
S5FJJx0XmfLq4yO969dGdrqBgyRJu8x+VA77kWlJ7EdmBMR+JEkqk/2oHNX7
eCcLzv5ohGY08YRRkQkvPNiYQafr+EMj44/ZPzLxZUdFetauiTx+8ZU3bsyb
0eZpkyJjD98z8tiYByLl7IOGtx3d3ZGul4yKLPvO+RGWd+j97SVJQ5D9qBz2
I9O62I80ctiPJEmtZj8q3/R3/HVk3FF7R6pD3Oc/x5hdTbqWxh29T2TTlK4I
11uZs+z6d/RG+Hr1LddHJr70qMjjj1ZGsP09PZX09hrTaNJ11bd9W4Rrad4/
fzAy54xTI/nVVc51Lkka3uxH5bMfmZbEfmSGa+xHkqQS2Y/KN/3tr4nwm/X2
I9O00I/SdbVp8oQI11vb+tHN10Um/sWRkZ3uN+7v0WtQqldXun6q/ehDp0Qe
f9R+JElqDvtR+exHpiWxH2lYsx9JksphPyqf/ci0JJ3cj/JOZD/SoORXl/1I
ktQ69qPy2Y9MS2I/0rBmP5IklcN+VD77kWlJ7Eca1uxHkqRy2I/KZz8yLYn9
SMOa/UiSVA77UfnsR6YlsR9pWLMfSZLKYT8qn/3ItCT2Iw1r9iNJUjnsR+Vr
Wz9Kr9X1wkMiE15wUCXF5W0f5A/kWJq8Tc4JWz7uwErafpgDPyf2o/JVz3B+
D/O6y5v2ujSCYXc+a7EfSZLKYT8qn/2oWcfS5G3aj3aZ/aiR5U17XfuR/UiS
1AL2o/KV2o8Y86eMPXzPSg59RmTCsQdEuiq16OBxo54ZqS7Pe1NnJu3huCP3
jow/Zv9IdfkuNZqDKknnZNwRe0Wq5+G4Aypp+yE3GPtRqfpTVB77kSSpHPaj
8tmPdv2I7EdPEPtRqexHZbMfSZLKYT8qX0n9KI3wxx97QCVH7xuZ/cF3RuZ9
7AORrhcfHhl7yJ9H5v3zaZGFXzw7Qu+ozrh70SH/K9W9zbLTozW6FS2sOKMv
P/bq7L58m4X5ftU2d9TekdmnvSPSPWt6ZMX1V0Q4n10vPqyS4v6kr9kCW67u
VWH7a27/fqR7zozI9Le+OjL+uc+OsOWd9rnusVdfKz9v9qPqSkO8HxX2/7Gx
D0Y2TemK5MvX/fzuyPrf/iJSfWoawxdT3ebvJ+PFW5Y/WmMfVt54dWTrogUR
llTPf3UL6ev+vkqGBfuRJKkc9qPy2Y/sR/ajcvanJexHbWI/kiSVw35UvrL6
USXjn7df5NG7bo8wjto0uSuy9eF5kYkvOyqy6AtnRVZcd3mk2o/SXLUxBz3t
96FJMfeMhsL+jzn46b9PdTZaoZUwf2/8c/eNVDtOem71DGTrjE0Z85zdI2MP
2yOSb42u8dD+fxph/L/qpqsjXS85vJKoPy84qLozaQvVV0zPouOw/8wkZPtd
xx8a4ehmfeDtkR1buiPT3vKqCOewum+cgfR1db5iWvL4a1W2X5zNyKPVOXut
bkn2o1Zjz1P6tnRH5p753sjMd7/595n38dMijNVXXHNpZOUNV0aavCN9OyKL
vvCpyKZJ4yPN3X5nsh9JksphPyqf/ch+ZD8qZ3+azH7UVvYjSVI57Efla3k/
esHBEZrO9JNfGWFc0XXCEZHRz35SZM4Zp0a6XjIqMvUNfxmp7tURz4pMetnR
kSXfOCfyyPnnRhZ86szIrH94S2TGO15XySlviCz8wqcii7/yuUh1Blq6y8GE
Fx4UoTUwhpn2hpdHxh6+V2TmqW+s5F1vjnCPhdkfPKWS9789svTir0Xm/dP7
I+OO3jfCWaLvMOdt+6oVkVW3XB+Z/IpjI3S6ReecHXnkm/8VmfLXJ0ToQRzj
rH/428iCT38s8vB//Etk3FH7RGiRq75/bWTbskcizEWcdvIrIzPf9abIonM+
HZn3sfdH6HELP//JyNKLz4vwWuwh/XHOGe+KLLvk/Mis9741ks9dtB+Vsz/N
RSvh6/W/+XlkymtfHMnX2dQ1NsIMt22LF1byyOIIj/asWhFZcdUlkdU/+F7k
0TtvjWxfvjSyZe7sShbMjay57abIo3f+IFLr7G2ePiXSt3VLZMfGxyKbp02O
bJo4PrL8iosi25YsihSfOxTZjyRJ5bAflc9+ZD+yH5WzP81lP2ov+5EkqRz2
o/K1vh/94c4ME084IrJ92SMRfk98+tteExnznKdGRu/9J5HVt94Q2XDvLyKj
93lShDHeoz+5o5I0N489p8WsvuX6SN+2bZHVP7gx0rPu0ciq710VGXvw0yPM
eWNu3uYZUyOLzv2PyP277xZ59K7bIut+dldkzCF/Huldvy7CDMBVN10T6du+
LfLw5/41wly18UfvE5nz4fdEdmzeFNk8fXJk5ntOjnB0LHn0x7dFetevjUx8
6VGReR99X6S/vy+yceK4yKJzPxOp3tUh3bGBLTBvioa15GtfiPT39kY2jhsd
obWtuvm6yIbR90aWX/mtyJa5syJ0PXrT1sULI0vOPzfCOHn2+98WGTdqr0hL
3nf7Uatlf+mV1jP5pOMii//rs5GeVSsj+eoLzv6nyJKvnxPp69ke4bP/yDe/
HJnzj++KTHrFMRGuloejtn/6Y5Ne+fzI4q/+Z2TSScdFVt14dYRtcjXy9dTX
/0WE+XVbFz0c4Qp8+LOfiMz96Psi/HtCf09PZAif+cR+JEkqh/2ofPYj+5H9
qJz9aTL7UVvZjyRJ5bAfla+k+zNU56RVZrhNe9OJEe423Ld9e6TaTdLdDFZc
fUlkzZ23RsYfd0BkR3d3hLsTcAeDbSuWRR468CmRR390SyU//mHk3t12iyz8
z09GuL8x2+T+4Xz92NgHIgs/f1bkgWf8UaQ6s+iOmyP0o20rl0eYk3bvH+0W
WXbZhZFNUydFuKMCezLm4KdFumfPiMw+410Rjm5H9+YIR/3gHrtFaHlLv/X1
CDPcetauiTCbLt/Ph57z1Mj8T5we6Z47K3L/U3eLLPnq5yO0ttH7/klk8l+9
MMKMprkfPy0y9c2viNDvuHf65qkTI8uv+k5k4suPjTz20P0RzvBDBzwl0vWi
QyP2oyEpn+E2dVKE2ZhdJ4yKcL3x6KIvnhVZceW3I9uWL40wz7P63CldkTmn
/32EJfM+/oHIsksvjLCE587/1zMi1Rfv7Ynw9cxTXh/h3wS2Lpwfmfr6l0by
nZ36xpdHti1dHCnu/9BiP5IklcN+VD77kf3IflTO/rSE/ahN7EeSpHLYj8pX
6t+HTf2Ie2I/tF8l/EY543nm4Sy98CuRdT+/K/LgXn8c2XD/ryu575eV3P+r
yLqf/Tgyep8nR9befUdkxXWXRR7c448jCz/7ichj4x6MFPsRM9O4H8J9T94t
svJ7V0X4zfRqP1q+LDLrfW+LPPjM3SKLv/wfEdpKfq7GPXffyJZ5syOMkeZ+
+D2R7pnTIjSphw74swiz4FbfdlNkzumnRrpnTo1wt23aFnf/Zh/Ywy3z50Q4
Y49c8OUIZ2P0vv8vMut9b430PrYhwqynNXfcEll987UR7jvBvq29584IcxHX
/PDGyPxPfiTC3RuKf53WfjTUcbcEZpYyo7J6h5MLvxLhqLlC+PcE/sbx8u9e
HGHmHn+pedWN10Sqdwi/6juRBWd9NMKr5P1oxjtfF6Efcd3OePtrI7xW76aN
kelvf21k2+KHI9UdHbLn334kSSqH/ah89iP7kf2onP0pk/2o1exHkqRy2I/K
1/J+xDg5/SVTxmDcuXryq18UmfCiQyLbli2JcCeBZRefF1n/659GRu/35Ai/
8c39gRmzMe+OeWvMzVt1y7WRB562W2TR58+KMCav9qPq/Rl2j2zqGhdZef0V
kfHHHBjhd8nX3H5zhG6yffWqyKIvnh0Ze8Reke4ZUyN0HLZDo6FfbF24IDL/
7H+KTHrFsRHuvTD7Q6dEaGe9G9ZF5v/bhyNzP/zuCHOQ8r9LW+1HaZ9pi1uX
LIyM3udPIksv/Gpk44QxEeYWTj7p+ZHeDesj9DLmyzHvjna2aeK4yMrrLo/Q
qia9/HkR7n/OfTNa0ojtR62W3Z+Bf09Y/t1vRXZs3BDpXbc2MvmVz49wpXGP
BfoRo/eZ731LhM8j11W++bkffW9kxTWXRViy/PKLIvP/5fQIS/J+NP0tr4ps
njYpQiuf9sa/jPAoM06nvunEyLZFCyLVlxmy599+JEkqh/2ofPYj+5H9qJz9
aTL7UVvZjyRJ5bAfla+k+3unmXX8dvZjYx+MbFu6JLJ1yaLI+l//LDL2sD0j
9COayOh9nxTZPLmrkpnTIuvv/WWEey/M+Ps3RLifw/LLLow8uOcfRxac9ZHI
ul/cHRlz6DMidAH+jur8sz4SYfRId3hs9H2R5Zf/d4Q2xF5tWTAvwr0XNnaN
jUw68XkR7lpcHf8fvU+Ee2vPP+vMCPu85LwvRGg3zDViHiD9izsnbHjgN5Hq
32nN+hG9Zv4nzohwN4mH9ntyhHuAr7379gj3GOddW3DWmRHOJ11y4/jRkerf
203nvHvOzMimKRMjzOtj9iB/gdf5deXsT5Ox5ym8szNOfWNk+t+9NsJfE2ZO
Jqs/csG5kRXXXBrhXZj25pMic8/8h8i8f/5QZO6Z741sX7k8sujcf4+s/uGN
Ebaw+vvXRhZ/6d8j1V3I7u9N6++eMyPCXUTmfOidER7dsaU7wr8YbF+6JLLT
UQxB9iNJUjnsR+WzH9mP7Efl7E+T2Y/ayn4kSSqH/ah8Zd6fgdloYw9/ZmTK
619ayetOiDBKp3fQZcYdtU9kxjv/JsJfO2Wm0ITjD4vwt1M3do2L0CYmvvjw
yITjDqwkHcUT3LM624fJf/WiyKQTj43QcegIXccfFuGvbXKvY/4m5oRj94+M
f96zI2wn33L1tVieQn+ZdOIxkSmv+4sIMwyZz1Z9rfp31X7BwZHqOum4Hn9W
pUPlR0rvYw4ho+LqbqR1xh+9byXpLuLTTj4pMvFlR0dYUjwW+9FQt23ZIxFm
XVYXpWPs79leSRq3868H8z72/ggz37hHCvdPWHbJBRHm7/X19ESqm0nvXa2R
f7UrZa0tb09PsM4QZz+SJJXDflQ++5H9yH5Uzv6Uw35UDvuRJKkc9qPyldSP
soZS/VuxjNufW0n1dbOxOp1lymtfEuHuB9ybmr/Tyt2zuSMBvWOncT7dgdQY
t9N0xh+zX6T66sfsH6EfMb+OGWhjnrN7pDoDrVabqL4WSY3phYdE2P4THGP9
PawmbS1fp8azeK0Jxx4QoVfutE72nvJodX5g65qR/ah8/X0phWPJ7uFQ/Euy
tOmlF30tsuQbX4ow/437gRefpZz9SJJUDvtR+exH9iP7UTn700L2o9LZjyRJ
5bAfla/UflTsSjVG6fQRxvOTX/mCCHchWHD2RyOPz1jbKzLIewvUffXqPLQT
jojstH5TX6XM89mG/bEftUs2w63mo8n25Usja3/yo8j63/ws0rdlS6S45qB3
JaX+kqHKfiRJKof9qHz2o+Kj9qMmxH7ULvajUtiPJEnlsB+Vr239qOExP3cS
GHvIn0f426nMWGvJXalTqrPU0oy19p+EIRr7USerf9Qj85wMkP1IklQO+1H5
7EfF2I+aEPtRJ7Mf7TL7kSSpHPaj8nV0PyL87dR0F4LqvQhKubdA+w98SMd+
1Pm4C3cayVffl5F8NgbIfiRJKof9qHz2o1pj+/Yf+JCO/ajz2Y92gf1IklQO
+1H5hkA/MkMxndyPatz1Wmpc9epK14/9SJLUOvaj8tmPTEtiP9KwZj+SJJXD
flS+Ge/468i4o/aO2I9M01L9K8D7RDZN6YpwvbWtH916Q6Taj6qPpnllPT2V
9PYaM6D0bd8W4Vqa9/HTInPOODWSX13lXOeSpOHNflQ++5FpSexHZljHfiRJ
Kof9qBz9fTsifD3/3/4xMuagp0UmnjAqwsi2y5jB5fhDIxOO3T/SdcKoSM/q
lZHHL77y5rPlXYw5fmMOeXpk/b2/jJSzDxreeh/bEOHfBJZefF6E5fYjSVKz
2I/KYT8yLYz9SCOG/UiS1Gr2o3Lk9/LtnjU9MvGlR0bGHLR7ZNwRe1Uy6pnG
DCzpyhl7+J4RrqXlV347stNV19ar/eHPfDwy9tBnRBacdWZkyde/WMl5KV83
pm7O+0MWfenTEWZsTnn9SyM969ZGqv8C4H0/JElNYj8qh/3ItCT2IzO8Yz+S
JJXOflSq7Cf41ofnRRad+5nIrPe+tZJ3n1zJe/425WRj6iZdJ+9+c2Tev5we
WffLeyLVKy2/n3bb9KdUrLr5usjM95wcmfbGl1fy5ldU8qYTjambV1TyxhMj
09/2msiSb5wT6V2/LvL4hWYzkiQ1k/2oVPYj07TYj8xIiP1IklQ2+1Eb+NNc
rePVpZHDq12S1AL2ozbwZ7pax6tLI4dXuySpBexHbZNmQFXvSZv/frExAwz3
Q+jU+xtXZtlV941Zf+0+XWaopvg9U5KkFrAftY39yDQp9iMzImI/kiSVwn4k
SZIkSbAfSZIkSRLsR5IkSZIE+5EkSZIkwX4kSZIkSbAfSZIkSRLsR5IkSZIE
+5EkSZIkwX4kSZIkSbAfSZIkSRLsR5IkSZIE+5EkSZIkwX4kSZIkSbAfSZIk
SRLsR5IkSZIE+5EkSZIkwX4kSZIkSbAfSZIkSRLsR5IkSZIE+5EkSZIkwX4k
SZIkSbAfSZIkSRLsR5IkSZIE+5EkSZIkwX4kSZIkSbAfSZIkSRLsR5IkSZIE
+5EkSZIkwX4kSZIkSbAfSZIkSRLsR5IkSZIE+5EkSZIkwX4kSZIkSbAfSZIk
SRLsR5IkSZIE+5EkSZIkwX4kSZIkSbAfSZIkSRLsR5IkSZIE+5EkSZIkwX4k
SZIkSbAfSZIkSRLsR5IkSZIE+5EkSZIkwX4kSZIkSbAfSZIkSRKa1Y/WJfYj
SZIkSUNX4/2IBmQ/kiRJkjRc2Y8kSZIkCfYjSZIkSYL9SJIkSZJgP5IkSZIk
2I8kSZIkCfYjSZIkSYL9SJIkSZJgP5IkSZIk2I8kSZIkCfYjSZIkSYL9SJLK
15+0ey+GM84wP6favS/19GXavS+NGirnVpIGx34kSeWzH7XaUBnD248kqdPY
jyR1PsZjjCH7M8U1a402i8vzJfnWikvyfci/Lj6ruUc9OH0F7d6jRu16Z8y3
sCK5PWFJ/aui1vveCvme8HNzUlJ8NL/yy9zDovx1H0nuTIr7nK/f3uuw/vcK
SarFfiSp89mPGmc/4mv7UXPZjySNHPYjSWqu4piwN8mXrEny5bXGk7VGyAMd
cxY7Zr63xSW19qHWmsV1+Lp4jAM9h/X3rXiMfM3Pmu8l+XMH+uq1zkCt421k
b/MlP0vGJo3vZ61XLDaCWntb/7iK5zP/emHy/WSg57bWNht5x+u/I/XPeePX
niTZjySpuYojNPtR8bmNn8NGRr/5fvK1/ai4pNb6xeMqns/8a/uRpOHNfiSp
M+Xjmc3JxGRcsijJ19yW3JfcnbCE8TlLpiSMncYndyTrE7bG9ucl+f6w/oZk
WZLPiXowqTUGuy1ZlUxNvpuwb806Y90JM8puTvJRd/keytRfc20yIam1TiPj
23wd3qObEpbk9xPoSX6a3JIw2s/f09bJR++/SLjqWJJfFXMSjoJ3dklS3OY9
SX6M9c/YQB/Nl/Dp47zlR1TsUFcn7Nv25P86N/+3xpsO3zf4XAz0uZJGMvuR
pM5kPxoo+5H9yH6Usx9JGhz7kaTOxEiGMRXjKzrODxMax9yE9RkPP5DwKDOX
fpn8JLkuoaHQaHiUURzbuT65Mcn3h20yfmZc/bWEsf2VCWuOTvJewNbmJ99K
GBUvTxgbM55k+2yBMScz8WhnNAjW/G2SjzkZOV+a0Pi+mSxO+C7N8W5M6I98
32YcznbYB16RJYyHf5XQ8ti3GUlXwiiU7dMuOQOc8/sT2iXbzDsC63Pm2c60
5DcJe86akxNaMPufXy31+1H+ivz84txekXB0vPqshGuJ9Tlq3inOFe8m7wI/
1zjGvL/wftFS8+bSeD+iv/864Wq5KOH95Urm/ZqdcG1wnjkbLOEdzLfD9h9O
WM6a+c9olvBTvn4/4ujydb6azEw4V7yPvGK+na0Jn2WuxvxfJzjbvOO8Lyxf
nfAZ593h1VmHf0u5Ibksyc+JLUlSffYjSZ3JfmQ/sh/Zj+xHkspnP5LUafLR
C98x7koYKzKm5XsOY8visxhN8SjzpniUES/fqViT0de1CeswNvtBkm+TsShz
nGhqjPx5FRoNI+SbMrQw7oTMlukv7MlVyTUJ42q2842E0TXPpTtcnvC6PItR
PXtII7gwYfusz4iUBsfWOF7ODPuTvzqvRWdk/M/4ljl7lyTcPfszCWeG/eH8
MFbn2Fmfdnlrwlllhht7zvbZNzrX+QnvOM9lbiRjXbZMR+gvyM9GrX6Uf832
F2doTLTanydcD8yKZE/OS2ju5yZ8zXvK+PzLCevnx5t3pfr9iG3+T8I67BWd
9EsJjSDfW/o7d+GmI9A+8neQI6Vtcd2ynxw7M9O4NhrpR8X5dez5fye8v3TP
byesz2uxn19JuN7YK9rZfyX5co6Fa5vj5esFyecSzg/vPu/aY4n9SFIj7EeS
Oo39yH5kP+Jr+5H9SFL57EeSOk0+emEuECNnRsuMgvL5Qvlz+Q7DuIsljFf5
mlEW852YncV4m7ET6zCWY0Sab5nROON2xn5jEsbA9As6BXPeGGHSNWgNKxO2
zOwgRt2PJuwDo2XuSp3PDOS5vCJ9hPEt54Q9ZJzJmJZRKONkGiXjT8bAzEpi
ffaBc8JYmr2lYzLO53XZN0bX9Mr8r68yEs7PGD8RmKeXn43iO857yrvM0fFc
mgKtijbHmo1cOY30I9ZnnM/55JzT9Thq9p9ZnbxTvHf5sdM3+Zrn5u8m7xFn
gHUa70e8U1zPvCO0DPYqb8f0X34W04N4Z+mqbJ+tcZVyXeVbwI8Tznn+7w/5
PtfqR8V3gXPFPE9abX5XcK5zelA+o5VzyzWQvwr7z5rsIcs5Uh7la5ZzdMzJ
LO6nJNViP5LUaexH9iP7EV/bj+xHkspnP5LUmRhl8X2GHvSjhJEqYyTGwKzP
SOxfEx5lphZjPMbJjCF5Fn2B0T6/4U4DYjzGb5fz/Sof7zGjjPsG0DtOT9hP
lvPqdA3G2OwzI3+2zwiT8SG/Xc7cNvoaY0jaDa2BOUWM99gmdzBgy+wb8+h4
XfaZcSndjVlGNERGpPzuPOfn4oQROKN9RtTMo2MuGa/O/D3mdDHTjzEn55a5
aoxI6RqcE845x8Xr5qNWxvAcC8uZwchPFloVTY32x3wwnpV35MHNr+P9ovHx
vvAqvCP8Xj/b4VF6Je8dbYX16TV0GbbGO8V9PPJ7DuQNqH4/4pov3vmc+ZPM
O+WomXvGo3SEcxJ+RnO18w7SZNkf3nf2gauCTwGfo/zndf1+lD/KvzzwXvNO
fSehm/OJ4/3lU0b351rNr0aWX5BwLbGc65lPCi2Pa5tzznXI+8tZ4llcS86v
k9QI+5GkzmQ/sh/Zj+xH9iNJ5bMfSep8jHYY0TEq5q7a+TqM6xhFM55kTR7l
XtPMoWL8OTHDyI05UfxmN/OX8jshg7HZpoTvgcz4ykdcvDrbYQktg3E1bYh7
GrOcrzlGnsX+MDJnfb7TctQsZ74WY0hehe3wKizha+7mzbMYITO+5dXpF3zN
s2he+Wwuvm8z2uccsjzvp+whPwWYo8g7wk8H9o1jYR4UI1uey/nkUfaW7sk7
lR8RHZM94Wzk93wu9qN8NletOWAcO6/LEq40mh1Hkb8LjP+5Ntgme8g2eV3O
NuPz/Dos7gkj//xu6nnXoPVzDvM5gewVZ4k1eV/4mlfP/4YyX3Pe6EH5s/Ij
5YriLvTsSbFTsLV8hlvx/gycE44uvw8/nxe6J58mjo7WxhljHzjP9CN6Vj5+
YK4jVy9fsw/5/dW5fnit/FzZjyTVZz+S1PnsR/Yj1rQf2Y/Yjv1IUuvYjyQN
XY5zmquc88kIOf/rro1oZN/ydfhZk98RopHfzS/nDOR7wizK/K8Jl3MPgeKR
8jOd+0vkna7Yj5jJmd9RYVfOLU2fe540stxPvaRWsx9JGrocKTWX/ch+ZD+S
JPuRpKGiL1McI7Gk1jq1lhTXb+RVituptZ/FZ+XPLW6/+OrF9WttrbjN4prF
Ldc/M8VzW/9YGlmn1vvbyLPqn58c/Suff1hrzcaPpf55Lm6teCaL6zNLML/D
fK2tNbLPjR9RcXlxP2thtmT9c9vIKxaf1fjy+ttvZJuSVIv9SNJQ0UhzqbVO
/RaQP9rIqxS3U2s/i89qZCxXa2Re3E6tPay1fnHL9c9M8dzWP5ZG1qn1/jby
rPrnJ2c/qn9ExeXF/azFfiRpeLMfSZLK5Ei18/keSRrJ7EeSpDI59u58vkeS
RjL7kSRpuOr8cX6tGXSdbyjusyQ1wn4kSRquOn8Mbz+SpE5jP5IkSZIk2I8k
SZIkCbvej7jPp/1IkiRJ0lDXeD9an9CG7EeSJEmShh/7kSRJkiTBfiRJkiRJ
sB9JkiRJEuxHkiRJkgT7kSRJkiTBfiRJkiRJsB9JkiRJEuxHkiRJkgT7kSRJ
kiTBfiRJkiRJsB9JkiRJEuxHkiRJkgT7kSRJkiTBfiRJkiRJsB9JkiRJEuxH
kiRJkgT7kSRJkiTBfiRJkiRJsB9JkiRJEuxHkiRJkgT7kSRJkiTBfiRJkiRJ
sB9JkiRJEuxHkiRJkgT7kSRJkiTBfiRJkiRJsB9JkiRJEuxHkiRJkgT7kSRJ
kiTBfiRJkiRJaFc/kiRJkqShyH4kSZIkSbAfSZIkSRLsR5IkSZIE+5EkSZIk
wX4kSZIkSbAfSZIkSRLsR5IkSZKEWv2oL9mWbEgeTBYn7d5rSZIkSWommg6t
hwZEG+rL2I8kSZIkjQSN9KPtyaZkRjI+sSVJkiRJGh4WJTSdmQkNiDZkP5Ik
SZI0cjTSj/qT3mRLwu8oTU/uT+6VJEmSpCHugYT/D6L10IBoQ/0Z+5EkSZKk
4a3xfsS97Ph/pe6E9VcnyzUcPaJhZ4mGo8Uadtp9Takl2v0TQM3X7pGaWoJ2
Q9Oh9dCAaEP2oxGu3d911HztHh2oJdo9llfztfuaUku0+yeAmq/dIzW1RCP9
6HdJsSXxP038vtIGDUfrJA0FazXstPuaUkus17DT7pGaWoJ2Q9Op9T9H9qMR
q90/SSQ1pN1jeTVfu68ptUS7x/JqvnaP1NQSA+1HeUvid5R41jYNR1s17GyR
JLVJu38CqPnaPVJTS9BuaDq1mpH9aMRq93cdNV+7RweSNHK1+yeAmq/dIzW1
ROP9SJIkSZIkSZIkScL/B0gdhSo=
     "], {{0, 456.}, {560., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag[
    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
     MetaInformation -> <|
      "Exif" -> <|
        "ImageWidth" -> 1120, "ImageLength" -> 912, "XResolution" -> 144, 
         "YResolution" -> 144, "ResolutionUnit" -> "Inch", "Software" -> 
         "Created with the Wolfram Language : www.wolfram.com", "DateTime" -> 
         DateObject[{2021, 8, 2, 13, 55, 27.}, "Instant", "Gregorian", -4.], 
         "TimeZoneOffset" -> -4|>, 
       "Comments" -> <|
        "Software" -> "Created with the Wolfram Language : www.wolfram.com", 
         "Creation Time" -> 
         DateObject[{2021, 8, 2, 13, 55, 27.}, "Instant", "Gregorian", 
           None]|>|>],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{560., 456.},
   PlotRange->{{0, 560.}, {0, 456.}}],
  #& ,
  TaggingRules -> {"DefaultContentBoxes" -> True},
  AutoDelete->True]], "ExampleImage",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->244557913,ExpressionUUID->"212df301-30ca-427a-9bf1-7c8a72fb403d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->{"Source & Additional Information", "TemplateSection"},
 CellID->871630328,ExpressionUUID->"b6d92264-971f-4084-8503-6e2a88f5a96d"],

Cell[CellGroupData[{

Cell[TextData[{
 "Creator",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Contributed By", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter the name of the person, people or organization that should be \
publicly credited with contributing this paclet.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoContributedBy"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "aacde7ea-54b6-448e-9489-1784a6a431c5"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Contributed By"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Contributed By", "ContributorInformation", "Creator", "TemplateCellGroup"},
 CellID->57534933,ExpressionUUID->"f32b62cb-dd44-4de7-a06c-8a78dab12ce5"],

Cell["Peter Burbery", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8950035443889313`*^9, 3.895003546141612*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->855757352,ExpressionUUID->"63678134-da2f-4154-a387-9285ce9bf79c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Source Control Repository",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SourceControlURL", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "If this paclet has a corresponding source control repository (e.g. \
GitHub), you can provide the URL here.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceControlURL"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "953b9804-5cfd-48e8-912e-b51918b1a4ba"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SourceControlURL"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Source Control Repository", "SourceControlURL", "TemplateCellGroup"},
 CellID->221376991,ExpressionUUID->"9b847160-57b5-432b-bd11-0760f1c0b211"],

Cell["https://github.com/PeterCullenBurbery/file-paclet", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{3.895003559583912*^9},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->75689085,ExpressionUUID->"42f46f23-ce56-4b18-8e98-ba6c7461e0f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "License",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"LicensingInformation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Choose a license to specify the terms and conditions regarding how \
your paclet can be used, modified, and distributed. If submitting to the \
Wolfram Resource System, this also includes the terms outlined by the ", 
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
               "\"publisher agreement\"", "Text", ShowStringCharacters -> 
                False], BaseStyle -> "Hyperlink", ButtonData -> {
                 URL[
                 "https://resources.wolframcloud.com/publisher/publisher-\
agreement"], None}, ButtonNote -> 
               "https://resources.wolframcloud.com/publisher/publisher-\
agreement"], 
              MouseAppearanceTag["LinkHand"]]]], ".\n\nSee the ", 
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
               "\"style guidelines\"", "Text", ShowStringCharacters -> False],
                BaseStyle -> "Hyperlink", ButtonFunction :> 
               Symbol["DefinitionNotebookClient`ViewStyleGuidelines"][
                "Tag" -> "ChoosingALicense"], Evaluator -> Automatic, Method -> 
               "Queued"], 
              MouseAppearanceTag["LinkHand"]]]], 
           " for additional information about choosing licenses."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLicensingInformation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "9452aeee-d46e-4290-a4cf-8d861d8127ab"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "LicensingInformation"},
 DefaultNewCellStyle->"Text",
 CellTags->{"License", "LicensingInformation", "TemplateCellGroup"},
 CellID->279656547,ExpressionUUID->"7bce3d6e-9954-46e4-9615-ee74b053c18c"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           RadioButtonBox[
            Dynamic[
             CurrentValue[
              EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
            "MIT"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"MIT License\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
MIT"}, "HyperlinkURL"]}, "RowDefault"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           RadioButtonBox[
            Dynamic[
             CurrentValue[
              EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
            "Apache-2.0"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Apache License 2.0\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
Apache-2.0"}, "HyperlinkURL"]}, "RowDefault"], FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           RadioButtonBox[
            Dynamic[
             CurrentValue[
              EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
            "CC0-1.0"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"Creative Commons Zero v1.0 Universal\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
CC0-1.0"}, "HyperlinkURL"]}, "RowDefault"], FontSize -> 12, Editable -> False,
             StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           RadioButtonBox[
            Dynamic[
             CurrentValue[
              EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
            "None"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"None\"", 
              "\"A license is not required for personal deployments\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           RadioButtonBox[
            Dynamic[
             CurrentValue[
              EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
            "Other"}], "\" \"", 
           StyleBox[
            InputFieldBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "SpecifiedLicenseID"}, ""], (
              CurrentValue[
                 EvaluationCell[], {TaggingRules, "RadioButtonValue"}] = 
               "Other"; CurrentValue[
                 EvaluationCell[], {TaggingRules, "SpecifiedLicenseID"}] = 
               Replace[#, "" -> Null]; Null)& ], String, FieldHint -> 
             "Other License Name or ID", FieldHintStyle -> {FontSize -> 12}, 
             ContinuousAction -> True], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJylVE1PGzEQBfLBV4QAtVKPq6jXJLTqqSfCBkokCihOe+jN7M4SC6+99djA9tRrf1Nv/\
Sn9JR3vJpvQElUtl5V3bD+/efNm+\
q0OazCbS2DNC2czZztsPZxAdANxsoL1M4EUaQwtpJg0yv9kDesjJyFZxdpI3yW1Msy23w/\
HwZmIQCGw2s+v3+jg5mmegZFC3bC1H9/Z4cTaDN/2egZQOxMBdu+\
0TAxPI6ld3I102rvkkQQ7gkyjsNrkPVlCYo/wWY0+\
ywjs9zMeTWDGIXjdPVjC492TeJTPdDz81ny9jNXL0AC34haCUKepVhh8AqOD21fdg+\
CDorhBLpfwHDyJZxgedOgVKmi5WGC4MeJ3R/\
oekGLbY0gzyS1QwB8pWDfb51pBm71p94MpYCAwUNoGBj47YSAOEm0CYotacRnEkEmdp6AsttnzSwPW\
5mOtpRXZDJ/\
VPWbFooFbQ0WOOxEgY4quD3LFUxGRcq3QGUNQH7l0QD7cOb6lFamoVQhSzlhia8yvr4W69njI9lkGk\
UgExFMHDAdsxSd74lTk7xLyPhUh007Fx/cZiYo+uoY1Bt7W//fs7ojHQh85a7UqbrLGhZ2AeSruI+\
l4lajSkke+iHUmtQ1XZ4Iy6tdzJ+X022TWENZsFzcLnU+FsuxFwa/qk3OeQkC1LPDLwzvzw344+\
McWW58k1bQlvkDYqmK7IcWEctphv5Ab62NTqdFhG5dGk11szp6VLxO7oSITpYUSNHgusuLarHXmrx3\
HwvIrWjVOuESY5zQA8v5jOw+k/J3+o9KS6yqjkq5L5J+\
iDyDhTpYFLfWu9vaGdNb4RCrbLVqwKpsftFq6VKFf7wyVBUOWtIUYbLOvcuauEGj8bocOrU6LZpnmO\
Q/6yYxFYxHglNYfuewx0imyf03lwXj9h0xao+l8GtP4Ys1yJHVYvfhtLfQH/gK4wD9R", 
   "RadioButtonValue" -> "MIT", "SpecifiedLicenseID" -> Null},
 CellTags->{
  "LicensingInformation", "LicensingInformation-RadioButtons", 
   "RadioButtonsCell"},
 CellID->253890516,ExpressionUUID->"82946e90-f548-459d-a65a-d9640cff1c50"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the paclet in search results.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "59893cbe-4690-499b-a28c-6a9adf160e49"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->913860664,ExpressionUUID->"5b25b9e1-c33a-45b5-8fee-ce5975dd9c04"],

Cell["File operations", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.895003563348422*^9, 3.8950035651480274`*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->560424104,ExpressionUUID->"cd914a7b-336e-42ea-ad23-895044041c26"],

Cell["Directory operations", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.895003563348422*^9, 3.895003567857496*^9}},
 CellID->261387980,ExpressionUUID->"3870d945-d9c4-48dd-8aaa-d5cf370692ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Categories",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Categories", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose categories that best represent your paclet. These choices \
determine which pages your paclet will appear on when published to the \
repository.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCategories"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d9f7136d-9d53-4015-8593-fbead2ad806e"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Categories", "TemplateCellGroup"},
 CellID->651640710,ExpressionUUID->"b4926b77-057d-4b3a-a7b5-e36aee1434b2"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Cloud & Deployment", {False, "Cloud & Deployment"}], 
           "\" \"", 
           StyleBox[
           "\"Cloud & Deployment\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[
           "Data Manipulation & Analysis", {
            False, "Data Manipulation & Analysis"}], "\" \"", 
           StyleBox[
           "\"Data Manipulation & Analysis\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[
           "External Interfaces & Connections", {
            False, "External Interfaces & Connections"}], "\" \"", 
           StyleBox[
           "\"External Interfaces & Connections\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Geographic Data & Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Geographic Data & Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Graphs & Networks"}], "\" \"", 
           StyleBox[
           "\"Graphs & Networks\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["Images", {False, "Images"}], "\" \"", 
           StyleBox[
           "\"Images\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Machine Learning"}], "\" \"", 
           StyleBox[
           "\"Machine Learning\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[
           False, {False, "Scientific and Medical Data & Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Scientific and Medical Data & Computation\"", FontSize -> 12, 
            Editable -> False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Sound & Video"}], "\" \"", 
           StyleBox[
           "\"Sound & Video\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Symbolic & Numeric Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Symbolic & Numeric Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Time-Related Computation"}], "\" \"", 
           StyleBox[
           "\"Time-Related Computation\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Visualization & Graphics"}], "\" \"", 
           StyleBox[
           "\"Visualization & Graphics\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Core Language & Structure"}], "\" \"", 
           StyleBox[
           "\"Core Language & Structure\"", FontSize -> 12, Editable -> False,
             StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Engineering Data & Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Engineering Data & Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Financial Data & Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Financial Data & Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Geometry"}], "\" \"", 
           StyleBox[
           "\"Geometry\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Higher Mathematical Computation"}], 
           "\" \"", 
           StyleBox[
           "\"Higher Mathematical Computation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[
           False, {False, "Knowledge Representation & Natural Language"}], 
           "\" \"", 
           StyleBox[
           "\"Knowledge Representation & Natural Language\"", FontSize -> 12, 
            Editable -> False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Notebook Documents & Presentation"}], 
           "\" \"", 
           StyleBox[
           "\"Notebook Documents & Presentation\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Social, Cultural & Linguistic Data"}], 
           "\" \"", 
           StyleBox[
           "\"Social, Cultural & Linguistic Data\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Strings & Text"}], "\" \"", 
           StyleBox[
           "\"Strings & Text\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[
           "System Operation & Setup", {False, "System Operation & Setup"}], 
           "\" \"", 
           StyleBox[
           "\"System Operation & Setup\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "User Interface Construction"}], 
           "\" \"", 
           StyleBox[
           "\"User Interface Construction\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdj1sKwjAUREVaa63oSrqIEhAKYotxAzG9ajAvcm8+sntTEUR/\
D3OYma5peckpaeCrIZKP1PKKPUA+YbotsDgqzKTsCQxi3UVyRpCSLV+\
PwXkIlPiGCYK7Cwowu4Mn5exvtmJOR/MHd70lCD4AidngdWcTj1eE3NewiDnY27wHy4PQCF/\
4nlKcnM1sewZ0MUi4JJ8fjELq2d8zZ7IK06eYLV9301GV"},
 CellChangeTimes->{{3.8950035707719193`*^9, 3.89500358459569*^9}},
 CellTags->{"Categories", "Categories-Checkboxes", "CheckboxCell"},
 CellID->508531351,ExpressionUUID->"5934350f-4d94-48ce-a219-cd40c5179cea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Resource Objects",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Resource Objects", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List the names of published resource objects from any Wolfram \
repository that are related to this paclet.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedResourceObjects"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e78bf3d0-c393-4978-b901-362b928bfc6a"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Related Resource Objects"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Resource Objects", "TemplateCellGroup"},
 CellID->280622473,ExpressionUUID->"a32d807e-3038-41a5-8358-c7e527cbd97f"],

Cell["BackupFile", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.895003593229749*^9, 3.8950035949190288`*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->694609509,ExpressionUUID->"507c13fc-7aef-4e38-9733-ad6a4cda4ec8"],

Cell["CreateRandomFile", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.895003593229749*^9, 3.8950035990348372`*^9}},
 CellID->42652510,ExpressionUUID->"a5a12353-606c-4428-98bb-797c92ba7705"],

Cell["DirectorySize", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.895003593229749*^9, 3.89500360241395*^9}},
 CellID->822818096,ExpressionUUID->"33165412-0b20-4f15-9960-feefdaf75541"],

Cell["FileNameEdit", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.895003593229749*^9, 3.8950036096255283`*^9}},
 CellID->162528376,ExpressionUUID->"4ab9adab-7e03-46b4-a20a-7272c471ab6c"],

Cell["FileQ", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.895003593229749*^9, 3.895003611789045*^9}},
 CellID->24222174,ExpressionUUID->"ad12154f-16fc-4646-9546-5d1bad0e58bd"],

Cell["FileTreePicker", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.895003593229749*^9, 3.8950036151574564`*^9}},
 CellID->125966734,ExpressionUUID->"785bd381-c682-43fb-a56a-af0093b8b93a"],

Cell["ImageRead", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.895003593229749*^9, 3.8950036177568703`*^9}},
 CellID->773352153,ExpressionUUID->"b8e8896e-97b4-4c1e-9de7-02d051089aa5"],

Cell["ReadPNG", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.895003593229749*^9, 3.89500362463327*^9}},
 CellID->147564606,ExpressionUUID->"ab73cbb7-ea15-4ebc-8843-180f32f4eff3"],

Cell["RelativePath", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.895003593229749*^9, 3.8950036270409365`*^9}},
 CellID->328919131,ExpressionUUID->"0c3ac0c1-8553-42a8-aafd-d4ed1337ff9a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Original Source References and Attributions",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Source/Reference Citation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a bibliographic-style citation for the original source of the \
paclet and/or its components (e.g. a published paper, algorithm, or code \
repository).", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceReferenceCitation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "0e44024a-ccd4-4e14-bc9e-a98e79db3e15"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source/Reference Citation"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Original Source References and Attributions", "Source/Reference Citation", 
   "TemplateCellGroup"},
 CellID->687116677,ExpressionUUID->"a66465b0-7e10-4081-a5b0-464f6cd19ce0"],

Cell["https://github.com/rhennigan/ResourceFunctions", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{3.89500368595788*^9},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->702019342,ExpressionUUID->"01f395c0-c596-49bf-a641-4d7487c81d91"],

Cell["\<\
The image is from \
https://commons.wikimedia.org/wiki/File:File-dynamic-clay.png.\
\>", "Item",
 TaggingRules->{},
 CellChangeTimes->{{3.8950042681825137`*^9, 3.89500427185052*^9}},
 CellID->249816909,ExpressionUUID->"e2aeb206-ed93-475f-9ea5-4de34ebcb2f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Links", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List additional URLs or hyperlinks for external information related \
to the paclet.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "25718dd4-5457-4597-9602-6d7ea8508c52"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Links"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Links", "TemplateCellGroup"},
 CellID->179193585,ExpressionUUID->"7decd957-cea9-4aec-ad63-c1bd6de82aea"],

Cell["Link to other related material", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->938599834,ExpressionUUID->"1d3c66e6-a7d4-40f7-8b1e-d2a87272c991"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your paclet to ensure it is \
discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "bd1e90e7-e070-4387-985a-5ea071ec0ba8"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->31633819,ExpressionUUID->"1c64d657-e54e-490b-8339-97a39487319d"],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "1b248b6d-6e3d-4b24-9d11-a48925d31eb3"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{
  "CompatibilityWolframLanguageVersionRequired", "TemplateCellGroup", 
   "Wolfram Language Version"},
 CellID->267876551,ExpressionUUID->"f9d10684-448c-453f-8910-6d9ab3cb95a7"],

Cell["13.1+", "Text",
 TaggingRules->{},
 CellChangeTimes->{3.895003635251051*^9},
 CellID->156311662,ExpressionUUID->"8dfe3fee-e389-4b3d-b061-c93495414321"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Operating System",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityOperatingSystem", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Select all operating systems where your paclet is expected to \
function properly.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityOperatingSystem"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "a68e6530-9917-4eb6-ac16-37393c248d4b"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityOperatingSystem"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityOperatingSystem", "Operating System", "TemplateCellGroup"},
 CellID->54346056,ExpressionUUID->"063233f4-9001-4f6d-b36b-68b235333412"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Windows", {False, "Windows"}], "\" \"", 
           StyleBox[
           "\"Windows\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["MacOSX", {False, "MacOSX"}], "\" \"", 
           StyleBox[
           "\"Mac\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Unix", {False, "Unix"}], "\" \"", 
           StyleBox[
           "\"Linux\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxFUNFOwzAMlGi7MUB8Ab/Qj6gqIVUadJpB8JplHkSkThQ7Yvl73IeWN/t8d/\
a5u2uhASkeYTNmiVla2PbfaH/\
wfKm43jsW2H44Oodfhs2LsSN8Qv1O7qrCQXDihXa54fqY1WilL8U6qVS/\
mKxgs3eUr4vn7SGFiEkKPPVhikbcyXknZVRQG/\
qCwrpVrxyjuEDMuy5LmHRm59ODzxNxX7XwOJBgignFzETYdVQgnxg14n2fWUUDaWBuno1n/AfnUFy/\
BlLs4YgccrL4VqK+6GCsR/kDqQVqcg=="},
 CellTags->{
  "CheckboxCell", "CompatibilityOperatingSystem", 
   "CompatibilityOperatingSystem-Checkboxes"},
 CellID->729105876,ExpressionUUID->"7b2daab8-10b5-48a9-b5e5-a5aba95382f7"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Environments",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityEvaluationEnvironment", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Select all evaluation environments where your paclet is expected \
to be compatible. See ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "$EvaluationEnvironment", "SymbolsRefLink", 
                 ShowStringCharacters -> True, FontFamily -> 
                 "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> 
                "paclet:ref/$EvaluationEnvironment", ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " for more details."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityEvaluationEnvironment"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "04cb0e56-4b86-4184-a1bb-58714f575e42"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityEvaluationEnvironment"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityEvaluationEnvironment", "Environments", "TemplateCellGroup"},
 CellID->701114648,ExpressionUUID->"d1c523d8-bfeb-4adb-a04e-46a1ed0b4943"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Session", {False, "Session"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"Session\"", "\"Local or cloud interactive session\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["WebEvaluation", {False, "WebEvaluation"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"WebEvaluation\"", 
              "\"Cloud evaluation initiated by an HTTP request\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["BatchJob", {False, "BatchJob"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"BatchJob\"", "\"Remote batch job\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Script", {False, "Script"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"Script\"", "\"Script run in batch mode\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["WebAPI", {False, "WebAPI"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"WebAPI\"", "\"API called through an HTTP request\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Subkernel", {False, "Subkernel"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"Subkernel\"", "\"Parallel or grid subkernel\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["Scheduled", {False, "Scheduled"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"Scheduled\"", "\"Scheduled task\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdUdtugzAMlTZaym4fsfd+BEOdxDStqJ60ZwiuiBqSKHYq8fcLGwS2p/hyfI6Pk9/\
tYQM8KITt0bP1vIe06FBcsD2nlLxLYkgBiaTRsAXhpGXIwDcXdBoVPH5hc7jWytf8gwhpXpUBITpsv\
cIWdi81i+7NNEGpZOxp5j3fUHIKkIV/DmJnFpzeWF8tsISx+2+nv+nCPa06vSvuuPoSxm50s/\
a1q5yx6HiA58L0Nug0UkkeFtWDvkpndI96PPDRjjWiLPds+gAQ49WN8r2m4nYPT6VmdNYh/\
zrIcj0Em4Rh+L7wFIZKHf6KNq+1IlyK43kp+TA61B5OSMY7gZ+DDW6rWijkb1lVrDw="},
 CellTags->{
  "CheckboxCell", "CompatibilityEvaluationEnvironment", 
   "CompatibilityEvaluationEnvironment-Checkboxes"},
 CellID->637301816,ExpressionUUID->"ce970a79-1a11-49e3-8c3a-28ac68d7ce18"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your paclet is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "1f737588-4125-4cd9-8d49-33193710cd31"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{"Cloud Support", "CompatibilityCloudSupport", "TemplateCellGroup"},
 CellID->677592290,ExpressionUUID->"dac912e9-7da5-4102-820f-c62368756d60"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[True, {False, True}], "\" \"", 
           StyleBox[
           "\"Supported in cloud\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxFj0FqwzAQRXGxmzQNWWSXXS7gQ7iCgKEkIeMLKPKEisoaoZlZ+\
PaVoSHbz3vMm27TQgMyB4T3i0pSaWFlftD94viouP72LFwPWbFwveDEz/\
XxxvVNi7cHTYmy4Hj08egC6fg01tdMCbPMcDA0JSv+\
7oOX2SzQv1buXZJ4iswfnQpNhXJLBAWdIpuqhV0fBXPKKHYBYfVFFNDGFj6NclH6WMK5OdnA+\
BqXWq7PFMu2vSGTZofDnMqrV+sCyh/5oliM"},
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->729759554,ExpressionUUID->"7d74e982-51a4-4720-8818-3cd7d2055dc0"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Required Features",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityFeatures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Choose any other features that are ", 
           Cell[
            BoxData[
             StyleBox[
              StyleBox["required", "TI"], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " in order to use your paclet."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityFeatures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "cff422b0-26dc-4a0a-ba48-52613267768c"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityFeatures"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{"CompatibilityFeatures", "Required Features", "TemplateCellGroup"},
 CellID->666988317,ExpressionUUID->"fe241b71-62ca-4e93-b889-82e2f4ea13b3"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Notebooks"}], "\" \"", 
           StyleBox[
           "\"Notebooks\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Parallel Kernels"}], "\" \"", 
           StyleBox[
           "\"Parallel Kernels\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Cloud Access"}], "\" \"", 
           StyleBox[
           "\"Cloud Access\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxlkMFqwzAMhsearM1Wxi679wXyEMFQCC1tqPcCjqswU8cylnTw289h0G3spv/\
Tp8Ov7rnVtebsQT+dhaNwq9fqE+wNrtMDVUdHhdQ9w0zT6jtPj1RdpFw0J2QYEW/\
0a7xv3waTjPfgdwdIATz9J3d3qzzKdddZC0R/U6s3Q8IIibN+\
VzhHw2503nHeg2FJUIz1ObLDQNR0wjgXwy410MscSK1a/doHhhQTsFlE3XQhaxkJSrkXJVSO+\
lDKU703nuAHLr2pOmEobHsBQkkWPnIs7xqM9cBfyEVv1Q=="},
 CellTags->{
  "CheckboxCell", "CompatibilityFeatures", "CompatibilityFeatures-Checkboxes"},
 CellID->960234497,ExpressionUUID->"be6eb95d-921f-445d-8cce-7ecef40e518b"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Disclosures",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Disclosures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Contributors to the Wolfram Language Paclet Repository can include \
a list of disclosures with their paclet. These disclosures tell users how to \
expect the paclet to interact with their environment.\n\nDisclosures should \
be selected if your paclet interacts with the environment in ways that are \
not otherwise obvious to the end user. For example, if your paclet needs to \
write information to local files somewhere to store persistent settings, you \
should choose the \"Local files\" disclosure so that users are not surprised \
to find files that they didn't expect.\n\nFor cases where the interaction is \
inherently part of the paclet behavior (and clearly documented as such), the \
disclosure is unnecessary. For example, an exporter function that's clearly \
meant to write files in a place specified by the user would not be necessary \
to disclose.\n\nFor each disclosure item, additional details can be added by \
starting a new cell under the cell containing the checkbox. Use this space to \
clarify how your paclet interacts with the environment for the corresponding \
item. For example:\n\n", 
           Cell[
            BoxData[
             FrameBox[
              StyleBox[
              "\"MyPublisherID/MyPaclet utilizes the local file system to \
cache data by writing files in the directory \
$UserBaseDirectory/ApplicationData/MyPublisherID/MyPaclet/Cache\"", "Text", 
               "DisclosureDetails", StripOnInput -> False, LineIndent -> 0], 
              Background -> GrayLevel[0.9], FrameStyle -> GrayLevel[0.8], 
              ImageSize -> {Full, Automatic}, StripOnInput -> False]]]}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDisclosures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e63a4bc4-2e85-41c5-a139-7d580e9a84d4"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Disclosures"},
 DefaultNewCellStyle->{"Text", "DisclosureDetails"},
 CellTags->{"Disclosures", "TemplateCellGroup"},
 CellID->376414000,ExpressionUUID->"845c9569-e449-4b67-bad3-c6fe32c1a08b"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["LocalFiles", {False, "LocalFiles"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Local files\"", 
              TemplateBox[{"DisclosuresLocalFiles", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following during loading or normal usage:\n\[FilledSmallSquare] Creates, \
deletes or modifies local files\n\[FilledSmallSquare] Imports data from local \
files\nFile operations related to normal paclet installation and loading are \
excepted.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
                   20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {"SectionMoreInfoDisclosuresLocalFiles"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVE1uEzEUpiFpkyZqN8CClYVYEg7ABjXTFkZqaRXnAu7Mm8Sqx2/\
kn7bDlkNwGY4Al0AsEWfg2ZmZNFWRmM3Yz+/ne9/77KPxlA+4qxXw3QvvKu+mfC9ZQXYNefHE9s+\
kJcsgdVDaYme9L3q2P/cKaP90jrdhG8x8fIaZUKyQCoLvcC5uZ3hH654dL6CslHBAhqLf+D8/\
ljZTaL0BG0NPY+TA9hNQijLskfexcKLYtcNTI8oY3Vsf8y+\
9ZIVogbmVtAwrJ1EzWbAavWGVyBQ4lksDmVM1yxEsE7pmWJA/\
sAKVwluplyz3JvwUijz80TCNpqQ2vBVLeLf/8+\
s3lhgg6PYNy4GyUibyKjGXhaS12jQdndOyQuMsywk4KwyWWx6hRQILRgS8lhkIrOTMYVu3gS61dUKp\
6EbI8w6hMMDgLoOKwt7yyTkaSHWBC7jrBmP3ZyK7Xhr0OicaRx+MqM/\
gBpQp4vfnfec5ibyeC7OkgsmzTYZoj8LYzvDje/h+bzIczEMZQjYnfN4mg+\
5klJZEIZefoZUIpdrlRAbkTZ5f7+3oyDssqc/sH82MjgPr4oqW/YXx0B0Mgw4WYtkJk7/\
mNG4irM3zuMDa+HGIb1rvEDb/\
ZJbMuvVhckglJh9R5QmSjkkDdDcOTm6E8nFAUZAvEyWza5JWEAcNSRIAU8Zz/\
irVSmpocV1UoMHMvHOo25vB9zcQp3x4aYJKXL1t3ruIOrftHfqvXmgQegVGkmDuLbvuBg+\
Ma25PcrnmfHAqlIXHpvHgpBsHf3GP9+kW/ASVL7W9N/QpP0i1A1MZyhq5Gh3pmvsrC/\
TwjBNvyTHV9DA19TbG8CbZ/ifUZJvMwdLFz2BRV/SUXcZLNOWHYV6eGmsKJzt/ASlfxEI="},
 CellChangeTimes->{{3.8950036924855766`*^9, 3.8950036925995064`*^9}},
 CellTags->{
  "CheckboxCell", "Disclosures-LocalFiles", "LocalFiles", 
   "LocalFiles-Checkboxes"},
 CellID->59412863,ExpressionUUID->"4eba14a1-4312-4641-90e1-be0e8e40e345"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["WolframAccount", {False, "WolframAccount"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Wolfram account\"", 
              TemplateBox[{"DisclosuresWolframAccount", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Requires, uses, or records any \
information related to user\[CloseCurlyQuote]s Wolfram ID\n\
\[FilledSmallSquare] Interacts with the user\[CloseCurlyQuote]s Cloud account \
or Wolfram account\n\[FilledSmallSquare] Creates, deletes or modifies the \
user\[CloseCurlyQuote]s cloud objects\n\[FilledSmallSquare] Creates or \
executes cloud deployed scheduled tasks\n\[FilledSmallSquare] Uses cloud \
credits, service credits or Wolfram credits\n\[FilledSmallSquare] Makes \
WolframAlpha calls", "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWolframAccount"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1SE0EQFkiAAJVcvMhpypMH8wJeqGQBTRUIlYnleZjtTcZMdtbpGWA9+RaWJ1/\
ER9CXoDxaPoM9k90lgFS5h2Smf77++\
bpnsNvnbe5KDXzzzLvCuz7fSmYg55BmT7B1opAk7ZGDBWZry3u2jq2x10D3jbG5Ctcg5r33RmdWLJi\
Q0vjckX57LK6G5hqQjHYnsCi0cECCrFX5PDtUKLVBbwEr90Hl3cZWAloTyhZ5HAonsk3cPiaLiLC+\
VPNvG8nMGATmZgqZKZwyOVMZK423rBBSg2OpsiCdLllqAJnIS2YysgeWGa3Nlcqnr3ZuvnxnY/\
joyRRfMo/h11hGjsamSyeVZ8YuRIxgIZSSMmeCrb35/BVZXf/\
oMKKNcgdWSIfsSrlZjNeYJtr4tG5UiHOvdxEgsUAxKI8UqArKnOwWJlWZovMdOBnhzMUHKhNXfYMLX\
IP04by0SqHQpqTUUc4gJR6pCIHzpds7bOykhVQ5ik5BLpWEWrCabSWKrqdiDk0PBrqYCSaF1sj3To2\
FEfVuAtfN8ODOUMj51FKxKVHceW1FeQKXoG0Wvz8HjeVe5PxU2KnKMXl6ixDlcXjvIvz8Eb7ftwjdc\
QhDNI9Fqjwm7UbTGS3EFLj6BPUYE9Qmp8QhrXB+HWBn4J0JxMtHiukcBobEBR1bE+\
uhUWyHGZ2IabM8/AUnjmiCapzHF6DG2A0YVflNltV/\
MkyGzbmX9CjM3huj08TQrtHM0A53jy6F9nFq48LsJ1rJOY1+\
GCYLq1PNn49yrXKoczsrIAc79M6ZvN5e3r2bZp9vn1tTgHXlQ9XWWdxHrPf9v2oiUvIZWEXrtXJsqm\
zfEy77fERzGPvfPhYa4V/M3NM01PD9FQ76D0pIjPaLHFeGoM+7cbcLS8ixb51BXnJ/\
gUAOu4lHMhzl9JhWMW+F4R3F1luTk2xvDEiPlIRJWdDzex7fqj7vBe5oX9MqcLL2F7qSDpU="},
 CellChangeTimes->{{3.895003712925178*^9, 3.8950037132688074`*^9}},
 CellTags->{
  "CheckboxCell", "Disclosures-WolframAccount", "WolframAccount", 
   "WolframAccount-Checkboxes"},
 CellID->992770807,ExpressionUUID->"2c188fdb-1ae1-4a0d-af5a-03b035a95c2c"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "ExternalServices"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"External services\"", 
              TemplateBox[{"DisclosuresExternalServices", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Makes requests to external services \
(http, ftp, ssh, etc)\n\[FilledSmallSquare] Creates or uses service \
connection\n\[FilledSmallSquare] Send emails", "MoreInfoText"], Background -> 
                   GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
                   GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresExternalServices"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVE1uEzEUJiVpkyZKQWIFLCxWgJoLsKkat4VIDa3iXMCdeZNY8diDn912uAh3QRwBLo\
FYIs7Am8nMpEQF4cWM/X6+9/M9+7g/Eh3hcw1i9yL4LPiR2ONLiFYQJw+\
wfa6QJJ2JhxST1vqc7GB7FjTQ+\
eHM3hTHQiwen956cEZqhuCuVQSFR3cmb8b2lvY72J9DmmnpgQRJu/\
J6dqIw0haDA6wBRO3fwTYHrQlnj3xOpJfJLnbPnExLjJ21Wnxu8aW1CMwvFTKbeWUNUwnLbXAsk5EG\
z2LlIPI6Z7EFZNLkzCZkDyyxWtsbZRZv9r9/+sKmckV6Bx8CoEfmLYPtstjLpffZIUuKD+\
LykIGPXpXe3AHVRzk4FpD+\
lQuLrDEUnvIqzQSYmEEqlUYxmFoHE5PYOQWqe4v7YxmtFs4GE1P1vbdO5udwDdol5fp11FgOynZMpV\
sog/zJBqGUl9z+ifDta7F+\
bhCGsyIMdWAmYxWQdxpNb5LKBQj1EWqWCWpXRFJDXOH8OMLecfA2lV5FfymmdwJEgbyibXvuAjSKbk\
HfXC6a2RKvxbpNNc6/pqNG6RcoVQOaPKs/H/Nxsz/\
gBxRo8M7qmFsaRfBAQz48vZY6yCJqOU1PuVbRiubCsZSyYIrScGmpFy8mRisDdXYXGRhw4+\
C9NfVwi0fbiY5E99LZDJzP71PuXZQDi/WV+K+6iBqzBKc8xHe2TaWdLeG626exWrPQOZMa4T5+\
tjQNQeL5HSZG9xTBrQ6pwTvDMBLDiSG7zBF22b3esclFuEKgN6XPA5LhxNCbU0XdCIvnBtvvrSHZYA\
ZI9ziCeZ7RK3VZXueROCgYDFReFZi3fgNdbbnI"},
 CellTags->{
  "CheckboxCell", "Disclosures-ExternalServices", "ExternalServices", 
   "ExternalServices-Checkboxes"},
 CellID->603047762,ExpressionUUID->"d22cc2bb-c260-43d9-ba3c-8759166031b8"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[
           "WLSystemConfiguration", {False, "WLSystemConfiguration"}], 
           "\" \"", 
           StyleBox[
            TemplateBox[{"\"Wolfram Language system configuration\"", 
              TemplateBox[{"DisclosuresWLSystemConfiguration", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Creates persistent local scheduled tasks\
\n\[FilledSmallSquare] Modifies WL system or environment settings\n\
\[FilledSmallSquare] Modifies ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "$Path", "SymbolsRefLink", ShowStringCharacters -> True, 
                    FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/$Path", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], ", ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "Directory", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/Directory", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    ", or similar\n\[FilledSmallSquare] Installs additional \
paclets or dependencies\n\[FilledSmallSquare] Creates or imports non-public ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "ResourceObject", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/ResourceObject", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    " content\n\[FilledSmallSquare] Makes FrontEnd \
modifications\n\[FilledSmallSquare] Internal handlers"}], "MoreInfoText"], 
                   Background -> GrayLevel[0.95], FrameMargins -> 20, 
                   FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWLSystemConfiguration"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJztVs1uI0UQxlk7sZPIQSgrLZwaBIjDWnvbwx6w4km8a8khkTsiQhyWzkyN3bine9TV4+\
zsY3DhAZC4cOAFOHGGB+\
CKuPHzDFS3PRMn2ggOOexhfXFPd81XVd9XU10HOz3e4q5UwDdPCpcXrse3ohnEc0jSt7A5lkg7rZGD\
DNPG8jndwOakUEDP9ybm0j/\
6bf7RuVGpFRkbCz0txBQYlkgvstjoVE4LK5ykVQPbE3E5MC8A6dWdM8hyJRzQRtpcIbFDibEyWFjA8\
zEPKNE1kBY2I1CKwLboxUPhRLqJ7SF5D0Ab9XH7DF64cL61Av+\
xEc2MQWBuJpGZ3OMxmbLSFJblIlbgWCItxE6VLDGATOiSmZTsgaVGKXMp9fTJ9u/f/\
sQiCxQ6shwsEjZox5SJhWIYzyAhjhLmBM4xGB+bRKaSrM/HFTPGMtALaY3O/LsIzhH2DXPP+\
81k72E7qLZMdvNMTJf8dQaFc0YvH2oT3vrwVLgZ7/IyuzAKJ5COpZ5XQuI+\
n5lL7iz5jmbCithRPtg8swXUNttDo91QZFKVfI8TVzEwLjSyU2tqo85AIASvPtjDUpN9TMHuDo9OrV\
wQV1+NUjrajQprKePPhSqAd45NgXCyAFvXUvNafB3vOzLKWJ/45OkgrO3Lxz98ev7ln337ifj+7+\
df/Na3Dz7mre+++blfleoNnO0lO55B/vZS6icW0keBndqqS6XmpTwVSeLVaA2FQp/\
QOyHOgzwH4kjHQKzztnfwTOjkzsjkGw/vQvLOYahhY8s3sq/Jvr8me83QayP984e+\
JaCkU2FDFxhpdEIpakIUkW9V1FyWKaA3TSAHnYCOqVFc60h0JrPcWDLTRvfy4kLJ+\
C7qqjsBDFGfXHxN7L0prrXienetuK7T9NpUWN/fxj6A5R0j5lQrQ7p/\
3JFOWBaunDhcsbgqP3Lga25GUSjyxXePjYWRTo2/WNdYEPF8ak1BsTaw89SKcgwLUDYNv3/\
6teVuuKSPhZ1KjdH+WtR+v9J5DeHXX/zvryuE7sS7IQYmIpEFRq0rTUcZjR1cvoRKdILa5HQhQ7LC+\
aOPnYPCmYySjG9JpnMIpKK4oOV1Ztv+2yFh6lGIP+IkLrFV4fzn4FJB7XioFQt1sKv/\
aBAN6vVetOeL+5lRSWRoVAIHNJh1jxZU5gHSA/\
H3Ivq85zSeWBLRApMUi83COf9gpJXUUIV4Qh0D7LJqq+\
GL339ltD3eppqh4caVt1psnYQJCqvh7X9lSErpGVjpIFlb1jm3bmwuyT+iBhhEWX0zr5DrxkmtF39/\
TZjebZlQBygyjWsF0uPd8AXklhwEMjsHuuTFBU1qPb4TFUiGI01j88r11aafmLH5mdG0t1s1g7Myp0\
H7NHSJHt/zghaU48px1PgX5OsiJQ=="},
 CellChangeTimes->{{3.895003997407484*^9, 3.895003997559459*^9}},
 CellTags->{
  "CheckboxCell", "Disclosures-WLSystemConfiguration", 
   "WLSystemConfiguration", "WLSystemConfiguration-Checkboxes"},
 CellID->481056919,ExpressionUUID->"e3dea04b-59ad-4ad2-b925-5c2afd443957"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "WLSystemSymbols"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Wolfram Language built-in symbols\"", 
              TemplateBox[{"DisclosuresWLSystemSymbols", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly modifies \
definitions of built-in symbols such as those in System` or other internal \
contexts.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
                   20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWLSystemSymbols"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1y0zAQpiVpE5JpLpzKRXDjYF6h06gFMpPSTpSZXlHsVaKpLHm0UlvzBDwcvAVHhm\
dg7dhuaQuDL17tSt/+\
fJ90PEpEX4TSgNg7j6GIIRH7fAPpFWTqGfbmGsnTnwXIUe1s12oXe4togNbPF+\
6mWlZu8frSGeVlzubSrqNcA1tFbUKiLcMyXzlTIQwW8mbqbgHp2GgJeWFkAHKoXoNyeKIxNQ6jB7yc\
ixIptWiO97HHwRiC2acjJzJItYeD95SzhtjdhsXXHb5xDoGFjUbmiqCdZVqx0kXPCpkaCCzTHtJgSp\
a7TCsNyDJQ2upqL51Rj2pnGNMNk0igFTQFtrV9Zs4zFzbgyRfAW2lY6si6DfhOjM+\
ch5lVbknrdnD4YirTq7V30WbUy/CDl+UcrsF4VX+/jrqd47q5M+nX2iJ/eYdQ+2vi/kT4/\
q36ft4hHCyqNNquFzLTEXm/iwxnOZEk9BdoKSSoPZFKA1mD8+\
MIh8cxuFwGnf6lmeEJ0EDlisze0kfoAoOKjKVcd8IRbwXNnAbc4vyD6hZkVIE0/XdlNn8+\
5dPOnvAJ5Rl/dCbjjmQFAUjAB6fX0kRZJa2lcciNTq+YIs5yKoIoIzOv4+\
LNzBptoS3uvAALfhpDcLYVqpg8qDMRgwvvCvChfCK2f15rD1tx/1dXxIslNekA2T2z67P/\
wLkd9WmmtxT030uD8BQ5DyIdO+\
LVPRqSxz1wZ2Ju8Z4QEnEwq6ReeIKuRzc8tqWIKwR6LEY8Im2cWXpMmqR3zuodwd4nZ8k3XgDSjUxh\
WRb0/FzUFzMRk4q+SN01ifnObyvfqbA="},
 CellTags->{
  "CheckboxCell", "Disclosures-WLSystemSymbols", "WLSystemSymbols", 
   "WLSystemSymbols-Checkboxes"},
 CellID->747051267,ExpressionUUID->"60c9b67a-31e8-4365-983d-bd5b7ebfc69c"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "PacletDependencies"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Paclet dependencies\"", 
              TemplateBox[{"DisclosuresPacletDependencies", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly installs or \
updates any additional paclets. Paclets that are included with the Wolfram \
system do not require a disclosure.", "MoreInfoText"], Background -> 
                   GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
                   GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresPacletDependencies"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1uEzEQpiVpExK1UuGEBLI4k75C1TgtRGpJFUfi7K5nE6tee/\
HYbZf34W3gLTginoHZze4mlILYy9oznm9+vs8+\
HYxEV4TCgNibxZDHMBL7fAXJDaj0CXYuNJKlOw2QYbqz3qe72JlHA7R/Ond35bY0i+\
dXMjEQmIIcrAKbaChjenN5N3b3tN7FwQKy3MgAZEg7ddyricbEOIwecA0x2UboYoeDMYS0T1ETGWS6\
h71zL7MKZXftFl92+\
Mo5BBZWGpnLg3aW6ZQVLnqW15VpD0kwBdMWgzSGznkWc0UFIZO2YFIpXQZKU4fgMVuXhIQrA5MeKDg\
xUYFidzqsyAzsozMp1cOwQBoUU45ZF5iHT5ESMkl5mwaPxfDSeZja1C3gvh0lPhvL5GbpXbSKGu2/\
87K4gFswPq2+nyftyWHV+aX0S2qCv9ggVPaKyt8Rvn0tvx8bhIN5mUbb5VwqHZF3W09/\
msklCP0ZGlIJak8k0oCqcb6fYP80BpfJoJO/NNOfAE1MXtOys/ARWkevZGohl62UxFtBhNDAG5x/\
S6HBGZQ49QjaSus/H/Nxuz7kh5Rq+N4ZxR0pDwKQqg/\
ObqWJssxbSeclNzq5YSmJIXMVwbTMKr94M7VGW2jqm1E14McxBGcbLYujP0sdid6Vdzn4UDzu3p9VC\
sXmFvxXb0SQXYHXAdTWsu22+\
8C4nvkZSbrionsuDcJjLD3wtDSJ11t8jB5tgzsTM4tbohiJg6kN4HNP6NUM+\
6e2EPEagZ6SAY9IB6eWnpo678ZYvjLY+eAs2YZzQLq6CSyKnB6ndfKROCx5jNRgnZjv/AIz17RW"},
 CellTags->{
  "CheckboxCell", "Disclosures-PacletDependencies", "PacletDependencies", 
   "PacletDependencies-Checkboxes"},
 CellID->873213451,ExpressionUUID->"edbecdc5-403f-4a1a-8420-34e66a89ca38"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "OSConfiguration"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"OS configuration\"", 
              TemplateBox[{"DisclosuresOSConfiguration", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Modifies OS settings\n\
\[FilledSmallSquare] Makes any use of ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "SystemCredential", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/SystemCredential", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]]}], 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresOSConfiguration"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJytVb1uG0cQjmxSIiWCNAwXgd0cXARJQaRL4SKEuBJtApIpcIgEQYpkdTdHLri3e9gfye\
fHSJMHCODGr5AqdfIAbg13+XkGz97xThTjBCnChrszszPffPNzx0dDaIMrJML+\
zLvcuyEcsBXGa0zSj2zrTFiStKcOM5vuVff0jm3NvUS6353r63ANYrg3gyjWKhVLb7gTdNqznTm/\
HusXaMnqaIFZLrlDEqStzaOHJ8LGUltv0M6A3Xreti2GUpKbA3pywh1P921nYnhWurjTqDsLfOFKfY\
3FsZXWFiO3EjbSeXAXiTQqtDdRzmOJLkqEwdjJIko02oirItIp2WOUain1tVDLJ4dvf/\
w5OteJSAWZUHoWnSOFrRR8vXnoKRI9DgTtAr5rOyW9FeD9BV9W2XfH3jmtqktjAvegsMQ1M5igcoJL\
6EORXWpp55ieCbWuybcPYKWvwRmCw1bc8Nihsba1MB4bm8OJVm7CMyELGADlHmMEXNnowujGqDvmFk\
sAAfdJocg+Jty9yemFEVdUr++\
nKal6zBtDoL7i0iN0zzVlPbtC03DeuoWvG2IzLbUJHMyfjsuzefnF6y+//vb3kfmUv/rzu2/\
ejMzHn0D7px9+GdXttePnsCIqkAmPqtI9MZh+\
vktU86BPTeRIdsGTJNSqPeHShtzul5CP8xyJLhUj1QI6IdYzrpL/\
jVfonWuDU5Xq0JRbafB4vTTaU6g9231qeHGGVyhNWv7+GjWWvbLBz7lZCmXZg62gQV4XasvDb7+\
G3x83HvrzEIYSmPNEeMvaN0WZZnyJIF5iXTVytQ8xl5hs/Lwb2e6xdzqjGYz/IZnuCVIZ+\
CUdbxPTCe1PvDa7Aj4DGjKavtrPv4x77eQoONnk38Dc/\
LMxGzfnARuEvnymZcI0rRZ0SDurf3pFHVq6DI7gIZMiXtNUmygjEJEgFCYr9fB4qqRQWIOb5ajQVA1\
XLysY7OAcQofKnKNxxQd0B7Ny2dh6wf2nrKguaoVGOEy2jk2e7R1hRfVpIqoSbBr8A8XZ0TTVgUdbZ\
Rj+PQcaVZ8pu9UIQ+\
hPaapMbsh1SV33WBXgL2kjDuGIeUuGU0Xfj03QG2H4dNjWc61I1pujLcdlUeT0xbkox3kIg1A+\
T9ltArO99yhXWLI="},
 CellTags->{
  "CheckboxCell", "Disclosures-OSConfiguration", "OSConfiguration", 
   "OSConfiguration-Checkboxes"},
 CellID->353371864,ExpressionUUID->"0d4e938f-822c-47e4-a8e0-38d50896089a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "LocalSystemInteractions"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Local system interactions\"", 
              TemplateBox[{"DisclosuresLocalSystemInteractions", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Executes Shell or RUN commands\n\
\[FilledSmallSquare] Uses external evaluators via ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "ExternalEvaluate", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/ExternalEvaluate", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    "\n\[FilledSmallSquare] Interacts with external libraries\
\n\[FilledSmallSquare] Reads or writes to streams or sockets\n\
\[FilledSmallSquare] Launches parallel kernels, subkernels or GPUs"}], 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresLocalSystemInteractions"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJytVc1uI0UQ3mzsxE4sB6GVdoFLa5EQByy0Fw57IIondtaSs7HcDghxgM5Mjd1yT/\
eoqyfO7JEjRy48ABIXXoETZ3gArogbP89A9cx44lhkxQFf3FNd/\
VXVV19Xnxz2eJO7XAHfu8hcmrke3w8WEC4hih9gYyyRLM2RgwTjnfI7foiNaaaAvnenZuU/vZm/\
NTahUAxzJG8mtQMrQieN9idbU7HqmxtAcj+cQZIq4YAMcaM6/\
fRUYqgMZhawAOIFzmgTpomNAJQiuH06eiqciPewNbQiKaAe1tutGdy4Yn+\
3gv96J1gYg8DcQiIzqQdkMma5ySxLRajAsUhaCJ3KWWQAmdA5MzH5A4uNUmYl9fz5wW/f/\
sgGNxBmjlz4gsIxY9n08iULTZIIHWHhcom0TTmA1UQJXAuVCWcssmspmCdyu45dbBVtKOvYm4l5SU6\
7nzlndPlRu/A3BhX2oIQG3uV5cmUUTiEeS71cNwkf8YVZcWcp+\
2AhPJVgERszm0HtczA02g1FIlXOjzgxEgLjQiObWFM7tfsCoUjA532aa/IPKe/OcDCx8ppy+\
HIU01YnyKwF7T6hxIC3z02GcHENttZJ405+bR87MMpYz8H0rF+s7auPfvj408//OLbvi+//+uKzX4/\
tk/d487tvfjpey3AL56AkypPJ3ykb+txC/OE2UfWBbkCBKc+\
JiCIiB5tDodDX9maR8kmaAtGlQ6Be8JaP9YLa+7/xyr/aKZSyFjiylXSLW80oeWWFlVDqaQoiQq+\
0lZVeec4wdBZEUhjR0H11pedYZDpckEtKSSkFii0JEBR+wDC7qtb+\
0NnkEnnn3FgY6dj4C7PBpQiXc2syqncH22dW5GO4BmXj4vf3ce3ZKS7fubBzqTF4tFG5t6/\
VsoHwy8/+9+ctQnfqwxCLUxHJDIPmrTJGiZgDl69gLR2C2uM0GiCqcH4/\
xvZJ5kwinAzvKaZ9CqQFcUXLu91p+TtIza0HG3/GoZg0a5z/MJLWYIcerOKhTrf6D/pBv14fBUf+\
krwwKgoMjUEgST7AbiVPwvRA/\
O1AyXBJg8eyhJKhaUrLpNjnT0daSQ3rJC9S0GBL9a8HK398T7493iLtpWBd/hqf/Yu0rK5xd+K/\
tkrql16Al2e0sazrbm4ZyxYMIlm2prp9/9K0rZ26a/zdjfb07q+F5kmWaNwQSo93C5/\
UUoiC0vaJznl2hUCP3WGQITmOND2GVfBbo38HsfHSaLJ1poDFnZ7lKT2fk2Lm9PiRbys9D1EVONj5B\
0BEqb0="},
 CellTags->{
  "CheckboxCell", "Disclosures-LocalSystemInteractions", 
   "LocalSystemInteractions", "LocalSystemInteractions-Checkboxes"},
 CellID->510770857,ExpressionUUID->"63faa599-018f-4c34-bccb-707410a85c01"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Other"}], "\" \"", 
           StyleBox[
            TemplateBox[{"\"Other\"", 
              TemplateBox[{"DisclosuresOther", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Add additional text as needed in a new cell below to \
document any additional disclosures that are not listed above.", 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {"SectionMoreInfoDisclosuresOther"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVNuO0zAQZZekF1p1QeKJFyzeyy+s2nR3ibRLV3F/wI0nrVXHjnxpN3wj/\
AWPiG9gkiZpWUDCLxnP5czMmXFmoykNqSsl0N7Su8K7Ke1HW0h3wLMXNrgXFjVh7CC32cXxnl3aIPE\
S8P4y0YfqWqlpuHRbMKgdJOww109g0TRaQV5I5gAVWdB4vl4Im0ptvQF7DAptEIGUGNxHxwVzLOvZw\
a1heR14eTRTO+\
OcMM6FE1oxSRw8OcIsUQAcOBGKMJQPJEVnsgapD8RpwnXqc1DoqcrzaH6qgrgtQ7sBorQjEotEOLbW\
e/hIxw/aQKwyvcJsbfP21Zylu43RXnGsenhnWHkPe5Amq8/P685zXLfxwMxGKBu9PSHU+pr83xG+\
fa3OjxPCJKnSCLVJGBfeRmFnGcY52wAVX6AdA0L1aMok8Abn+7UdzrzTOXMi/\
UczwwVIcGyNYrAyHjrDoKJ9xTbd8Ol7CmnFX4vzxyjb0FEV2nTdFdd8o3k07+Sr6ArRx5+\
05JHGZQEHuHqTmz2TnlWp6tG/\
i6RIdyTThuSYGmeNYl7b6YdYSaGgLWlZgAIz985p1a5fs51TOng0ugDjyk7TXxYVim3X8786QOYVRg\
vckzOx6yl8pjySeYOrV5Mc3jJp4W/0P7N0/\
NM3Z0RP28ojLX2u7NmAp3QSKwemMAhYkzOcqZL6tQV8yKPIW3SMFT70JtVJWb1xG3zWCnXjBKz2JoV\
VWeCv4ZGlsoq/qgbksacmcXTxC1nIgX8="},
 CellChangeTimes->{{3.895004003122659*^9, 3.8950040081198444`*^9}},
 CellTags->{"CheckboxCell", "Disclosures-Other", "Other", "Other-Checkboxes"},
 CellID->793947667,ExpressionUUID->"1dded6da-25ae-48cf-a62b-c2144790693b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Author Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Author Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "This section, when used, will appear near the bottom of the \
published resource. Content displayed in this section can include background, \
possible improvements, additional information and/or implementation details \
that are otherwise beyond the scope of the paclet documentation.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "2b79d534-c325-4a1d-b736-701fcab35b41"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Author Notes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Author Notes", "TemplateCellGroup"},
 CellID->951557313,ExpressionUUID->"cfbbaf58-81d2-4e6e-a7ff-22cdae15772d"],

Cell["\<\
I am marking this as 0.0.1 because I have not added documentation yet. The \
documentation is on the Function Repository though. I set it to load at \
startup.\
\>", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.895003924736307*^9, 3.8950039445992317`*^9}, {
  3.895004009892712*^9, 3.8950040161888685`*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->908162033,ExpressionUUID->"1f8f957b-dd3e-4868-98a1-484fd361f81b"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1152, 585.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
WindowTitle->"FileUtilities | Definition Notebook",
DockedCells->{
  Cell[
   BoxData[
    TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
   CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
   RGBColor[0.33333, 0.33333, 0.33333], CellTags -> {"MainDockedCell"}, 
   CacheGraphics -> False], 
  Cell[
   BoxData[
    TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
   TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
   CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
   CacheGraphics -> False, CellOpen -> Dynamic[
     CurrentValue[
      EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]], 
  Cell[
   BoxData[
    StyleBox[
     TagBox[
      GridBox[{{
         OverlayBox[{
           StyleBox[
            TagBox[
             DynamicModuleBox[{Typeset`var$$ = False}, 
              InterpretationBox[
               StyleBox[
                PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.8950039632735697`17.34308289307533*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.8950039632735697`17.34308289307533*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}, {"", 
                    PaneBox["\"\"", ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                 Dynamic[
                  TrueQ[Typeset`var$$]], Alignment -> Automatic, ImageSize -> 
                 Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                 DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                 Baseline], Deployed -> False, StripOnInput -> False], 
               OpenerView[{
                 Style[
                  Dynamic[
                   DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.8950039632735697`17.34308289307533*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                   SingleEvaluation -> True, Evaluator -> "System"], 
                  FontSlant -> Italic, FontColor -> GrayLevel[0.5], FontSize -> 
                  0.9 Inherited], ""}, False]], DynamicModuleValues -> 
              Automatic], Setting[#, {0}]& ], ShowContents -> False, 
            StripOnInput -> False], 
           StyleBox[
            DynamicBox[
             ToBoxes[
              DateString[
               TimeZoneConvert[
                DateObject[
                3.8950039632735697`17.34308289307533*^9, TimeZone -> 0]], {
               "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short",
                 ":", "Minute", " ", "AMPMLowerCase"}], StandardForm], 
             SingleEvaluation -> True, Evaluator -> "System"], FontSlant -> 
            Italic, FontColor -> GrayLevel[0.5], FontSize -> 0.9 Inherited, 
            StripOnInput -> False]}, Alignment -> {Right, Baseline}], 
         "\"   \"", 
         ItemBox[
          StyleBox[
          "$Canceled", LineBreakWithin -> Automatic, LineIndent -> 0, 
           StripOnInput -> False], ItemSize -> Fit, StripOnInput -> False], 
         "", 
         TagBox[
          ButtonBox[
           TagBox[
            PaneSelectorBox[{False -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[64, 85], 0.7529411764705882]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], True -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[128, 255], 0.5019607843137255]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]}, 
             Dynamic[
              CurrentValue["MouseOver"]], ImageSize -> Automatic, 
             FrameMargins -> 0], 
            MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
           With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
              EvaluationNotebook[]}, 
             CurrentValue[
              DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
               DockedCells] = If[
               TrueQ[
                MemberQ[
                 CurrentValue["ModifierKeys"], "Control"]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Cell[
                 Blank[], "StripeCell", 
                 BlankNullSequence[]]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Condition[
                 Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                  Blank[Cell]], 
                 Not[
                  FreeQ[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   "049a6383-211e-431f-ab63-d106f1e27376"]]]]]], Appearance -> 
           None, BoxID -> "049a6383-211e-431f-ab63-d106f1e27376", Evaluator -> 
           Automatic, Method -> "Preemptive"], 
          MouseAppearanceTag["LinkHand"]]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     "Text", FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> 
     False]], "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     InterpretationBox[
      StyleBox[
       PaneSelectorBox[{False -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.8950040455025085`17.343082902243893*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                   TemplateBox[{
                    ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"PeterBurbery__FileUtilities-0.0.1.paclet\"", 
                    True -> StyleBox[
                    "\"PeterBurbery__FileUtilities-0.0.1.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File[
                    "C:\\Users\\Peter\\OneDrive - Marshall University\\GitHub\
\\file-paclet\\FileUtilities\\FileUtilities\\build\\"]], Appearance -> None, 
                    BaseStyle -> "Hyperlink", Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    "OEM6eJxljUEPwVAQhPOkEQk/oum9DVc3JTgQ0urJSvPKPjZ5St5u0T/\
i99JwEbeZ+\
SYzRnEn0ff48kA2itvJpdHGY29BLKk3JYup2poWdzd4vlot2HD15U8VjIcAGaNjgDUKOoBViRNHN/\
RDf6kdn7S1fla+A8ckNcCMZF4VAOa9HV713qIANEeZkCUh5D9bVGQP34O4cgW6Os9/OmE/\
6keD6DMXpL0GjtyxOmMpqdq9ANs6UuU="}, "ClickToCopyTemplate"], LineBreakWithin -> 
                   Automatic, LineIndent -> 0, StripOnInput -> False], 
                  ItemSize -> Fit, StripOnInput -> False], "", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "387a4451-d771-4ac7-8951-ce9b04b9a275"]]]]]], Appearance -> 
                   None, BoxID -> "387a4451-d771-4ac7-8951-ce9b04b9a275", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
           AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.8950040455025085`17.343082902243893*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                   TemplateBox[{
                    ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"PeterBurbery__FileUtilities-0.0.1.paclet\"", 
                    True -> StyleBox[
                    "\"PeterBurbery__FileUtilities-0.0.1.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File[
                    "C:\\Users\\Peter\\OneDrive - Marshall University\\GitHub\
\\file-paclet\\FileUtilities\\FileUtilities\\build\\"]], Appearance -> None, 
                    BaseStyle -> "Hyperlink", Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    "OEM6eJxljUEPwVAQhPOkEQk/oum9DVc3JTgQ0urJSvPKPjZ5St5u0T/\
i99JwEbeZ+\
SYzRnEn0ff48kA2itvJpdHGY29BLKk3JYup2poWdzd4vlot2HD15U8VjIcAGaNjgDUKOoBViRNHN/\
RDf6kdn7S1fla+A8ckNcCMZF4VAOa9HV713qIANEeZkCUh5D9bVGQP34O4cgW6Os9/OmE/\
6keD6DMXpL0GjtyxOmMpqdq9ANs6UuU="}, "ClickToCopyTemplate"], LineBreakWithin -> 
                   Automatic, LineIndent -> 0, StripOnInput -> False], 
                  ItemSize -> Fit, StripOnInput -> False], "", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "387a4451-d771-4ac7-8951-ce9b04b9a275"]]]]]], Appearance -> 
                   None, BoxID -> "387a4451-d771-4ac7-8951-ce9b04b9a275", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}, {"", 
             PaneBox[
              TagBox[
               GridBox[{{"\"\"", 
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"\[FilledVerySmallSquare]\"", "\"Build result: \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"C:\\\\Users\\\\Peter\\\\OneDrive - Marshall University\
\\\\GitHub\\\\file-paclet\\\\FileUtilities\\\\FileUtilities\\\\build\\\\\
PeterBurbery__FileUtilities-0.0.1.paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"9.0791321`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"C:\\\\Users\\\\Peter\\\\OneDrive - Marshall University\
\\\\GitHub\\\\file-paclet\\\\FileUtilities\\\\FileUtilities\\\\build\\\\\
PeterBurbery__FileUtilities-0.0.1.paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"9.0791321`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"BuildPacletDirectory\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"File", "[", 
                    
                    TemplateBox[{
                    "\"C:\\\\Users\\\\Peter\\\\OneDrive - Marshall University\
\\\\GitHub\\\\file-paclet\\\\FileUtilities\\\\FileUtilities\\\\build\\\\\
PeterBurbery__FileUtilities\""}, "FileArgument"], "]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|"File" -> 
                    File["Kernel\\BackupFile.wl"], "Hash" -> 
                    "84f8c408582f4f07b26ea14d1c87602d984ac02c60a7576b261c2ccd4\
b716734"|>, <|"File" -> File["Kernel\\CreateRandomFile.wl"], "Hash" -> 
                    "5d2e85fee9d5b40dd028cefffdfafa522cb7ff1b31a3bc048cb33a4ef\
4b39447"|>, <|"File" -> File["Kernel\\DirectorySize.wl"], "Hash" -> 
                    "04fafc00d9537d8c1e379341472dcc3fe917d17ce4313002e808a7395\
f07d4c9"|>, <|"File" -> File["Kernel\\FileNameEdit.wl"], "Hash" -> 
                    "60b6803dd998f6528553af4f2aefe8fa43b3309168831c55838b4106d\
c563f6a"|>, <|"File" -> File["Kernel\\FileQ.wl"], "Hash" -> 
                    "574d54425131db8c7cef8d527a3e5903a3f11040b9dd8189db5c3a1ce\
6743278"|>, <|"File" -> File["Kernel\\FileTreePicker.wl"], "Hash" -> 
                    "cf8bea296bb5622009464e4a22e5324bee255824a3c6de03e8d175d70\
8b2ac18"|>, <|"File" -> File["Kernel\\FileUtilities.wl"], "Hash" -> 
                    "06d2a5d9193d7c6bd8c47a522f3382ebb91ba7dfb5809a40c3e4624ef\
f560577"|>, <|"File" -> File["Kernel\\ImageRead.wl"], "Hash" -> 
                    "c96a3ed613934b1a14dcadfecc8dd5d70dea7e1ba62c88cc4f1e512ea\
d6673a1"|>, <|"File" -> File["Kernel\\ReadPNG.wl"], "Hash" -> 
                    "d59441457fb99ae3aad0d2218d1b148e74942d07ca9d41bcad41cac1a\
4224c07"|>, <|"File" -> File["Kernel\\RelativePath.wl"], "Hash" -> 
                    "7727b2d319e9a1ee066f809e0083c6c499ae05151bdac576599e99558\
53c6806"|>, <|"File" -> 
                    File["Documentation\\English\\Guides\\FileUtilities.nb"], 
                    "Hash" -> 
                    "5031cd21b7968dced555ebde2d90346ceacc76fc5815fd2cab23b9c8c\
3899863"|>, <|"File" -> 
                    File["Documentation\\English\\ReferencePages\\Symbols\\\
SayHello.nb"], "Hash" -> 
                    "3ff376ec6d85f2daae853dc9bd86a44d21727fb992995d540fa1b7139\
d46404a"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[4]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 12, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 12], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[4]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 12, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 12], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 
                    2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\BackupFile.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "84f8c408582f4f07b26ea14d1c87602d984ac02c60a7576b261c2ccd4\
b716734", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\CreateRandomFile.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "5d2e85fee9d5b40dd028cefffdfafa522cb7ff1b31a3bc048cb33a4ef\
4b39447", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\DirectorySize.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "04fafc00d9537d8c1e379341472dcc3fe917d17ce4313002e808a7395\
f07d4c9", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\FileNameEdit.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "60b6803dd998f6528553af4f2aefe8fa43b3309168831c55838b4106d\
c563f6a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\FileQ.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "574d54425131db8c7cef8d527a3e5903a3f11040b9dd8189db5c3a1ce\
6743278", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\FileTreePicker.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "cf8bea296bb5622009464e4a22e5324bee255824a3c6de03e8d175d70\
8b2ac18", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\FileUtilities.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "06d2a5d9193d7c6bd8c47a522f3382ebb91ba7dfb5809a40c3e4624ef\
f560577", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\ImageRead.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "c96a3ed613934b1a14dcadfecc8dd5d70dea7e1ba62c88cc4f1e512ea\
d6673a1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\ReadPNG.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "d59441457fb99ae3aad0d2218d1b148e74942d07ca9d41bcad41cac1a\
4224c07", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\RelativePath.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "7727b2d319e9a1ee066f809e0083c6c499ae05151bdac576599e99558\
53c6806", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Documentation\\English\\Guides\\FileUtilities.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "5031cd21b7968dced555ebde2d90346ceacc76fc5815fd2cab23b9c8c\
3899863", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation\\English\\ReferencePages\\Symbols\\\
SayHello.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "3ff376ec6d85f2daae853dc9bd86a44d21727fb992995d540fa1b7139\
d46404a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}}, BaseStyle -> {
                    ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem["Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem["Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> GrayLevel[
                    0.7490196078431373], Spacings -> {0, 0}, Alignment -> 
                    Left, BaseStyle -> {FontFamily -> "Source Sans Pro", 
                    FontSize -> 14, FontWeight -> Plain}], LineBreakWithin -> 
                    False, ContextMenu -> {}, NumberMarks -> False, 
                    ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], ButtonFunction :> (
                    Typeset`open$$ = True), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.0010093`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], ButtonFunction :> (
                    Typeset`open$$ = False), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.0010093`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"Indeterminate", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"TargetWolframVersionNumber\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["13.1`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Short[#, 0.75]& ], 
                    "OEM6eJztPUtzG8l5BPHgQ5RI7XJ37U2qwiB0yrEDZQYYvLZcJYEgKSkWJ\
YpNaZ0yXauemR5ySoMZZHpACU4llVT54krlkDiVk6viu39EDvkFOdnX2IdULvExuW2+\
7nlgZgBQMwAlERRwIIiZ7v6+7u/dr0/L0OUj/\
GrHek2olqe3H5oOsbs2cbCjWyY81jK0cGSxAlqO5h7p1NEWaeEYn8ITtIR6ikIoRTdQr9PBdv8BwSr\
K/FDL0o3dvok7unJgqT2DsOqLQfUsIg69ddzvEkqcF1aXmNvbNL+PDUr8t5v+\
W9KRiYoAHbK9jfJH0H4fytw4Jp2uAQ9dDN2Gs3T9EJsEEYMojmVHYeaOAA0fSJ4u3bd1NVrZ/\
15ijbBXBbqy03McfxhWvR657X6+v3do6+eAwot92zKdPVM9ItTq2QpBK/t7O7rTwV2KNryBgUpPoJ/\
EZsgzVHaJgftEpbdcEPs9U2EjPm50csd2jwTdWG11uwTb2ITBzz22zMGblR1MCXL6BtEWYn1f2TvHR\
g/DyNCVVs+xOkBiJXhbOCDOmaWi1UObwNg6+nmo0Zahn5odYjr+gNJCmzBO8b8HRR928ClB+\
o8JjNiSN2JBrQjc/LHeIdRe4J+1e8ETqLjW7tk2NPwcECbo5j6Mbxt3HxD99IyhkD+\
0XgHMDN1sydQyeg4Jl6c3D/CpqWu6wnm4/TWQe3nfxh1O1Cxd5sPD2Ddf/\
M3Pf1aEBld2dRt4hvUZ3h/d32lbhmXbn/HPr+7aH/PPb+/aP+\
CfX99tfzPo8RpybL37xHxodnvOgIvdl7fagDogdohVVTdP469XOVocnxgd1/ibA2yf6iYNszH7bi+\
0F+L/j8elMGB2v51M8O3LdjYu23Eh86qi9eIhVgzitGzlDMariHLFL7aKaBXa2SUa7hkO+sTj+\
YcO6bRM03J1Ccr+7h9+EdId/\
5Iptr84OXlGgYtOTg4JcNHJyROT7IJUka3SFvSdnmHD2HpmwgOb6k7/5OS+\
7jzoyScnmm6QUpcjcnKyDz+eObqhOzqhQz/lnm6oHoCdni0Tu//VV5EyJeGOcEe84zZXDHQZQ3+\
akbpRPIauG4ynJx4lgBZp21PBaLV5R6g3xUpZfIGyRVpES5QolqlStFJE7n9FtPy0h00Hxm3Ab6hvO\
vj1vmV3aBY0c7SvfqkNj12GpN4vgZZAPnodk4aGxxXw3COiDYrloLvDZUYon1X2CDQi0CguIuseMgx\
DrlYS4zIMJzlCPlQETMHkNjHU9mJ6YCGdnYvp7E10Zr1iQm2ets9A4StM58aH6MbjHhhJGwTm5dC7W\
2CkQP2AdtMpU4bZAZV505wfXAUUr/qW2SB7bHWvLgNsMJoYukkOLdA8rmF2CZxpZ4JSrlV+\
L95E27DoxN5E3AzN3Ym5OzGBO1GYuxNzd2KsOzFFXz8t7rBhdlnDFSbL7k/\
e7aEYFuUYyVikOjqWRD+9MuxURGvsd8s+7TGViTI/urRh3vCE7wCDfiPUmXyA8yEO8/\
8rjJgDWInOAZSYXUJ9Cm2/eAwIEJWplheA1UtQ+75F3KZu+N/\
6qIRuPDRhVLCxix3cypRQno0N1dbcdluLJZeybFQ4hTe/\
T2yTGCc70GSvyx7deWVAoQeYnqF7DUlrKJLQqDbKmqQJdblcI1iUVFFp1GtCWW02JKwIZaUm4Hq1Xo\
PXolJWFFWS62KtXpGG4X3uwWvbBHA+\
wqZqdeJQq2qZNKoaIU21KkuCqgrlhkI0TVM1rOFquazIdU0T5YqIK7IiSA1FrlSwRDRJrjQlqT4M9T\
MPaiAqzGKGQQoSNK0IgtqsVupqQxFJpd6sSKJUL6uKUtFIU6yrYl0hUkWsCALgJzRwvdKswqCoktIc\
BvmpB5L9eAy2ZU/\
VnTDEmiDXGkJFVZvNhlarlhvVagXDIJcx0UhDw1IFOiU0xVqjURGVarVRaciSKNRUpVqraDU8DHE9B\
PFpZDzrklqVpHJVrIiq3FCgG1pDrZbruEKqTaGCK5ooCpIgN1W1ITaaqlxVKlhUSK0uVcr1xjCob4R\
AHYMDc6grL4kdhqloDZngcrMmy9VauSwITakmEQmXy6RaKUsyIWXoU1nCFaWmEqFCGjC8VbUuNOQyV\
sQRMD8LwQyEP0LDmlrGVbUpNitqXanJQEapzthFq1QaZSLLTVHGdVWTqw2hiSVBqRCpVga20ao1oVo\
fwTYfeyC5k8Wm1iI9bNZg/\
NSaWAFGkUUmFgpWNaIoDVVlPVEJrhMAWSsrjYaiSJpIqmIZWqmBaGBxGNxtDxyDdPj4fhiYWgXGFqV\
qXZObTUwqGKuCWi6LMGqyKDVIXWpKZVWoK7ipSqIMiEiiAuOIpXJZUoQRffs0AAZaD1T0IXbOwhDr9\
TKIu1oRm6SJRUKEWk2DcSOC0ACSKRJDQ6iKVVFWsQKyX21CwSbQtAqvG0JtGGJp11K4iuYa8mTPPDV\
0enZyv6eroOmjZDXlAfcKwP9qWZTrzVpDVYharVaJrBLQPkJFqikEK0q9pinVhljV1LKC5XJFbioNp\
dIA0apVhhFpjEbkCAQPvFoFhuIUEEL9jmwZ8I37D4hhWGGcKppWqdcIsC7oqbKKMeiriqo0gedqWJI\
AWxg9RqoyDAnInqBhwB84RQUpECRcQrda0OSrPTZ5yz1VHimV0JqnvtEZ7jLv9I9CBsDT+\
kiBIOUFm0gmNi/WypZ8k0az0Cz/A53dGlf3+6S/C0ar3863MyOquqM15hXrPwR4OfoH41p/\
pHd0MFSAwFjk3YDU7+O3LsDTjUh4wQz9w3EFWxDl8EJ2hkc3j+5dIoKJWho71uApuEQKceGb+9H+\
nsdqyXrNO/23f3cPSm+4Jo6oD01NB17qQzy+\
GASEASHba6PLDmYfWKHMmEJeqDvwNhiKbE0jhGqLUkuB+\
uvhZ4AxLbjTNYDT7dCr59wuxx5CyZ4ShGGeT+\
qOy2CmdgiAP8zjILfXgLdRDgJw3FoooRUg0TEEfsRpb4IAuqT3HqyCAzUXxbkozoAo5mZRBpnTMejC\
7V2ddvk8HZCqbfVMhxXaDJ66rOC+\
ABqusRgnXHKdPYgVWkGW7TAwdADnFnvmTUFZZvjFA11ViclCOXqAuzT3uGeAR7T6rKtCsMK60s5QIV\
lMZvWcbs95uLu97Qdzf5qsYheQhUoL0UgwYeXzQ4tub/\
MZ2DTVziardgoPAdUsvRkJZEPzZ7w1MVFr4HqBGnXfsWB9l3QNqw+Rc96dX12iOf7q5tAUco7H+\
fDNppLhe3UQh7PJxgOrR4l1Tmw22Xjfxt0zXaHD07XBTGq7cMEsNyCGFGwQ1a7wz7//\
W6TVgUiswLP+I3JODK/kb++yKdpDy+ifQjuhhQzv251l5Rpi+Ygjj4321/y3O1Hb/\
vriUkkaSlA7EazLayhZ16YlETxMxoXbyNAVNhH8ks9430lUybAA3gPLUCdQDkOGnebA2FK07LsGbmi\
A8pyNR038x2erWZgDemvUqsMarzVumjvvrn7x/3Pt/\
GAak00OndqgUtUoY2v88z93L1q54EtddNmn0hvFdW3vHKo/\
wKZq8HWOdd7vwQJMRKI9O77o6Yjgp4cNX8hgSwuRZYZ/+kf2+Y+7tsg//3nX/gv++e+\
7aPmRbr5ksGPrRoH5W+Og2wab71C5vlx8qMGg1BPRXTkjyku+gwiz1Q+w4Cln+\
LRFrZCQx3rcZvGNQSmBpDNU6SxTOoOU0g6lFtf3I+C+Uz9TWslz/LzwyA155prpIs3kuci+\
ZvI95rlmmmumq6uZvDmF2dJMfE72mmumRKFOOg3lLQ0GKir4PddRcx11VXTUYPU+\
CwGRx6NXW0ONRJlPM3vKyd0olFw7BVOpV1pJLV6onC7cb3CVqZkdw4Deb28+lE8ZpqVr+3uXTdDl+\
CbQkQDGk2n6HR+zTEruR0xGymDe/z1Q1PeIbqIuNvdtq9OSrfOk8njBfpzZI+\
XidZXKaXdEzTIpP0SpHLdfbfbomL2uIjntjsFZJuWHKJJj9nPOHhlz11Uip91RO8uk/\
BAlMr7fefbol7+uojjtjvNZJuWHKIpjzwPMHiEL11Umpz2RMcuk/\
BBlctx5mdmj49J1FclpTyzNMik/RJEcdZ5s9mi4fF3FcdoTfbNMyg9RHIfPW84eBVeuqzBOe+\
J1lkn5IQrjmPPIs0fG1esqkdOeCJ9lUn6IEpnuvP7sUffGdRXUaW9MmGVSfoiCOvF9FrNH6LXrKrPT\
3igyy6ScUZkNsBt/PekNfh/ha+eAmD0tckHjR22r02Ubb/ded21C2d2jtJFsZJVBm8e2fnoKVCzQ/\
JdnusIOGC09MynukKe0nKw1A1PniUerd8INg4PXecQRnbjb9HvJu9gerl2dqHZw0/\
gICmregffp8JqcDTzwk3WMEWQHCPsy2MCerrlTw5KxgRTbMoxDK5C0t3nCgcH4UnfO4tfmJWRi6D+\
LMrcTlt/2K/hgkkmYX4sV3k4jlX6ldOB0+ohgzT1psE2/SAfuYahyOrBnvI57fwa/\
8aLFjwEVDrCjnKVSRqFur7UMh9gmnw8In6CIHvaCgulxfJqW6KnPGrmj92eJamHDGAxdyipXrCdmP3\
VP/CrvqieVRLVo+\
JIY5sQk08uKe19R5IaZtPolk7Jj4VtuUteN34aTSoee4XPCbt1hp56yjy3m4y3vY93o2eRp4oN9KjR\
AiRO6uXRCwiZzRnTqX60RYA2mb98mJD0D8rs6mIP755Zuhs5psnON8PeJ7UGYcDhTC136IaBLAOeMX\
QaVpcvMD/BSHay6FzWxfqE8uwp/S1seeJn5vb/sgac+gQV0HX20MF0jIVuQhX+\
nayxiTVDBuy7fPUK8AJS46U5N770mSs8h/BRpLREY9xRp6FKp+VnSMXHEu4g80rqFqGCTjhW6l/\
8mE4+Rt/q7Ap+bRuCTWktG671O1+m/\
bWs5gTZ13b7UPs8kLmYitQVlyVxtzdXWh6W2slhV36yz6MouMfilmXagvrj0pldc6YK8CBMPBXlRph\
5cgjZB8JvShxqEYLmIGxeaUpskcEArLaoQU42pKpRjbvdoKU2GsHdFBbQyF8/\
3J2wh6r5Z5EI26zI4a3WXjGSttSPCUm6QrTmLXQcWC5P5XfOYlyYpzF0FaG/OV7PPV7EMWG/\
mqLDH4C/i5ANTOWCQz9tWt7/lX8e65VhbbUPvyha21WGmyST0SR3Lyznmt5uQcxTAhYFPGsSldn/\
CPf+U95w9f0Ovk85YB72eYFLs0gdoJCNECH8IvEUGlNfNrcfk1Vab8DvwL43wySikAFSOz7uhvNt1T\
voLu/1OKH/pIzSwKn7RVXY73D7u6EYfrSOeiHELYZNuHdrWYBGdFeL3Nd+KVvySpxak+UMD6+ag+\
K5+rrMLsty0CYMaQdY+LXJL1f/9L/v81+CWquV4OtJItr7BHVY0kn8zvICfjS3gv41urj/STbJjE/\
ySrV3q5lC60vCibPya8gtzmbJpWkazeL7SFLnEdHcS/\
mmwzB3as5CMcylxet3nOnnF55zSXXqfH7Oq7l4TyKO5dN3g0enIS+mTteN0uuzxNl3aZssa/\
C7DdNX96fxk9txbCplkDSR70Y6EdL31fMfQWk7K/\
k505X9i99Gtxt7M3cfLcx9TcnRYKCfjFJfVJs4RkVaCeTKPCZWhq0nf6laWYZGbKG3GJ6FKYA1tSrw\
Xa6EXD9A3vs00zZZpbRmWeUrsLaYwwDL+ySRQ4zmWj23MLnj1Npy+o41AERQ+\
juQjcdMUxzOqJFw9cazuDrY5iMAUZhKawg5+SbjzokIT0MAfh2p5Rd38Qagn+\
xZTBpqlM5rzO23fp958E/dn0nG/\
R9NUWnFbthxw1H029fLlFGjB5b2oE7d0RLoGVkjC8KvDb5AONipvb8f3uGqLV3bjsafyF9i+Rmy+\
5It3kXupr/CeaSAUaAO2MEK/k3hdeDvoa7h+\
MmS7wZLMqDYmWX4J2imM9EwhlHtoKjbhAdnUe17TroWnGdRUGyEjexhTj70HaoptmxORKn0P3+\
mW8aShJ7O3fOht8KHSkDjhHme//T3D5dq47nf1Dcs/1QUNa7dX4wonEInxZcYakEn19YhplNjUb+\
SERGjCZI3XGH4emkjJHluDmcPhYxqhKaT2+oj5kqSTgKN6dduzaV/\
auNsltpu3fdV76P5aOrbgH3D9Vuinu25k/\
cL75nMsLEWgj5WXjBBGmzNpWnPtteE526na8HwVv40899CCRlLvhPQwec724KfE5DzYVe+\
28WCCNs6ibRSOuf8ctJLe63bbWdnxfZygqYmcI7e15ZD6yr2zjRxrQFlTxba6b9mdpFHT2/\
HUA57jen9SIVzwM4yEk5BEe+Vt6tV/7L9OsVE3empo1b2i/NkzoFq6cG9oljcTezV+\
RjYCZoOtpJ4T9Tm2dSxDvUA3p+cFP72lj8LGLtFwz3ACJJFfIkO/\
4esunvwEHCjHV2KZgXZHxCCKw9GKTQsvs6tqR734yK3D+uypQ+\
ptH7uBep0Otvt8U90gn0XhyHrFNOtglrxwjE9dXXvjmHQgsHCI+\
5MXQL9XjBxN3enphnpEKPSTFlGu+MVWEa1Cm17f0SchsKHDkdnf/\
cMvQrCG8ECZv9Ly9HYwOi6sSMlcHGO0hHoKREE06CvzhVDmh9DoRoSdQv3x2fcW9+\
2AIBC7gxzEJto3/\
beEZXdH3jb7PLtlph8fqEywfrrOToW6BLHsKEyXWh6QPF1ivBWt7H8vsUbYqwKwew/0njcMUbP4+\
f6ez5L7NhB+z2RE4YsbaGV/b0d3OrhL0YY3MFDpCfST+\
9pR4XZB7PdMJSzc8dHxVxI8Rh2kI4q5ISEBHZLdkct2/\
tvCAXHOLBWtHtoExpZtJBvhqwQatdAmjFP871HuS+SoZtyT0fyspe7h04W1e8ETNs/\
mrdu56bJv8iRKuPuArwRpfpJTKLfZkqll9BwSLk9vHuBTU9d0hfNw+2sg9zL3wlx2X+bDw9g3X/\
zNz39WhAZXvM0a5ySSpukz/vnVXftj/vntXfsH/PPru+1vDhw8tlm2+\
8R8aIJaGlpN8nTCIVbZ1pP46wvcybDbGGbj8Irc0OrcSFwKA2ZfDLTQxNpopXgAAg80nlj3oFJUoW3\
JTKNtKRDdGgS0/hZ1lYoGcUD/\
TvHS9OiN4jEgZDAem1xvZqNteyoRrQp3BEEUhGblBcoWQS8vUQJxtkphvJD7XxEtP+\
1h09GdgcFaRX0YhNfMlaFZ0JTRvgZmzSPfkBQGrtiSt285NDzeeevwGi3KQXeHy4xQBqvsEWgoIEec\
Zdc9ZOJHu9+MyzCc5Aj5UONr02+\
EGo5NkgK74Cz6Jlsd9rKvn2GWQ42ttMfXni9aXgajAeoAtI3OJnDcg/MulXnTnB/iS8/\
vhA0iUeiVY4DhDNW+/suEHDjXSr4X6942LDqxdY+bhbl5n5v3Ccz7jbl5nyHzPkVfbxcP8Gu90+\
NZxqbr8QC633j2dz/5Gfvzz5eG7kbx0LYYzYnKr6252th+\
VHR3Kbk37Fg905lcFjLCJaJ1SMD8mA6PuYlK1Etn85sPTRVE1O7oJlvkzha/BZze9aCu+\
PCLaN3ndDDGjqa/fvsM/0mMg64OWT4tokCfXTHUPi6ilzp4EldtyH6/eAyGjzhfWoYGZvA5+\
BkA0HWaJ0cwL1buiC8uDck8IHk6OTabIybtivPwbh7ezcO79OHdINSIR04jApNQ82jNkzcW8xnx2Oy\
iBQ+U+REUD6a3PxoW5tZqCa0EHicUDtw/+7s/+fG/\
Pvnp4V205PmGJbQe89daCyV0K2rS2KONuOfRZg/jdj8MjMZs9pJXuIQ+HmExWXObo+wVe3F7yFqwp+\
tePODrSPTdFN59CX0+XtXbFf75zr2Q+3CZ6y+\
Zv74qxuBm8RArMDxzKzC3AnMrMLNW4EZIilv5Errp/m7Zypl+\
TtDfZ9pfnDyjwCsnh0wjnzwxya4Nb7ZKW8Am9AwbxtYzU2fHykFzn9zXnQc9+\
UQDdVvq8pai94HHfnFF67a807OB9fpffRUpURLuCHfEO25TY43TL7d+ufCTbxfvhYzTJu+\
R25kgWbLmX4z8N++5V2AneTMH2NQ14s7hekv3rUzJuwhXW3Mp1losubcaB+\
hveikRdrDystf1srKXvPty7zUkraFIQqPaKGuSJtTlco2wlDWi0qjXhLLabEhYEcpKTcD1ar0Gr0Wl\
rCiqJNfFWr0iDcO7IBd8AHXaTOTDUMflug5ATptpeRjkmFy+\
AcRpM8kOQ4znKh2M55SZModBjc3FGMCcNhPgeBrGc80NaDhlprNhkKNyaQ16OGUmp2Fww7mCAmDTZq\
oZz5+xXCgBxGkzcQxDTJfrYcC9U2YaGEZk4rvsA5ymv0mdboS2c7UotdiJn/\
XwMzDPtOC6WWChbodePec6LPYQSvaUwB3y765n6AbOyQgA/\
sCMg9xea2dY5PXNsXusQhvd5vHgDMeD/w8Eu1xR"}, "ClickToCopyTemplate"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}], "Grid"], FontColor -> 
                   GrayLevel[0.5], FontSize -> 12, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> GrayLevel[
                    Rational[239, 255]]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {Automatic, Fit}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {1, {}, 1}, "Rows" -> {1, {}, 2}}], "Grid"], 
              ImageMargins -> 0]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[
         TrueQ[
          CurrentValue[
           EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]], 
        Alignment -> Automatic, ImageSize -> Automatic, ImageMargins -> 0, 
        BaseStyle -> {}, DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
        Baseline], Deployed -> False, StripOnInput -> False], 
      OpenerView[{
        Grid[{{
           Style[
            Dynamic[
             DateString[
              TimeZoneConvert[
               DateObject[
               3.8950040455025085`17.343082902243893*^9, TimeZone -> 0]], {
              "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short", 
               ":", "Minute", " ", "AMPMLowerCase"}], SingleEvaluation -> 
             True, Evaluator -> "System"], FontSlant -> Italic, FontColor -> 
            GrayLevel[0.5], FontSize -> 0.9 Inherited], "   ", 
           Item[
            Style[
             
             Grid[{{"Paclet build completed successfully.", ""}}, Spacings -> 
              0.25, Alignment -> {Automatic, Baseline}], LineBreakWithin -> 
             Automatic, LineIndent -> 0], ItemSize -> Fit], 
           Item[
            Style[
             RawBoxes[
              TemplateBox[{
                ButtonBox[
                 TagBox[
                  
                  PaneSelectorBox[{
                   False -> "\"PeterBurbery__FileUtilities-0.0.1.paclet\"", 
                    True -> StyleBox[
                    "\"PeterBurbery__FileUtilities-0.0.1.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], 
                  MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                 SystemOpen[
                   File[
                   "C:\\Users\\Peter\\OneDrive - Marshall \
University\\GitHub\\file-paclet\\FileUtilities\\FileUtilities\\build\\"]], 
                 Appearance -> None, BaseStyle -> "Hyperlink", Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                "OEM6eJxljUEPwVAQhPOkEQk/oum9DVc3JTgQ0urJSvPKPjZ5St5u0T/\
i99JwEbeZ+\
SYzRnEn0ff48kA2itvJpdHGY29BLKk3JYup2poWdzd4vlot2HD15U8VjIcAGaNjgDUKOoBViRNHN/\
RDf6kdn7S1fla+A8ckNcCMZF4VAOa9HV713qIANEeZkCUh5D9bVGQP34O4cgW6Os9/OmE/\
6keD6DMXpL0GjtyxOmMpqdq9ANs6UuU="}, "ClickToCopyTemplate"]], LineBreakWithin -> 
             Automatic, LineIndent -> 0], ItemSize -> Fit], "", 
           MouseAppearance[
            Button[
             MouseAppearance[
              Mouseover[
               Graphics[{
                 GrayLevel[
                  Rational[64, 85]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], 
               Graphics[{
                 GrayLevel[
                  Rational[128, 255]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]], "LinkHand"], 
             
             With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
               EvaluationNotebook[]}, 
              CurrentValue[
               DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                DockedCells] = If[
                TrueQ[
                 MemberQ[
                  CurrentValue["ModifierKeys"], "Control"]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Cell[
                  Blank[], "StripeCell", 
                  BlankNullSequence[]]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Condition[
                  Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   Blank[Cell]], 
                  Not[
                   FreeQ[
                   DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "387a4451-d771-4ac7-8951-ce9b04b9a275"]]]]]], Appearance -> 
             None, BoxID -> "387a4451-d771-4ac7-8951-ce9b04b9a275"], 
            "LinkHand"]}}, Alignment -> {Left, Baseline}], 
        Grid[{{"", 
           Style[
            Grid[{{"\[FilledVerySmallSquare]", "Build result: ", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"C:\\\\Users\\\\Peter\\\\OneDrive - Marshall University\
\\\\GitHub\\\\file-paclet\\\\FileUtilities\\\\FileUtilities\\\\build\\\\\
PeterBurbery__FileUtilities-0.0.1.paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"9.0791321`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"C:\\\\Users\\\\Peter\\\\OneDrive - Marshall University\
\\\\GitHub\\\\file-paclet\\\\FileUtilities\\\\FileUtilities\\\\build\\\\\
PeterBurbery__FileUtilities-0.0.1.paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"9.0791321`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"BuildPacletDirectory\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"File", "[", 
                    
                    TemplateBox[{
                    "\"C:\\\\Users\\\\Peter\\\\OneDrive - Marshall University\
\\\\GitHub\\\\file-paclet\\\\FileUtilities\\\\FileUtilities\\\\build\\\\\
PeterBurbery__FileUtilities\""}, "FileArgument"], "]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|
                    "File" -> File["Kernel\\BackupFile.wl"], "Hash" -> 
                    "84f8c408582f4f07b26ea14d1c87602d984ac02c60a7576b261c2ccd4\
b716734"|>, <|"File" -> File["Kernel\\CreateRandomFile.wl"], "Hash" -> 
                    "5d2e85fee9d5b40dd028cefffdfafa522cb7ff1b31a3bc048cb33a4ef\
4b39447"|>, <|"File" -> File["Kernel\\DirectorySize.wl"], "Hash" -> 
                    "04fafc00d9537d8c1e379341472dcc3fe917d17ce4313002e808a7395\
f07d4c9"|>, <|"File" -> File["Kernel\\FileNameEdit.wl"], "Hash" -> 
                    "60b6803dd998f6528553af4f2aefe8fa43b3309168831c55838b4106d\
c563f6a"|>, <|"File" -> File["Kernel\\FileQ.wl"], "Hash" -> 
                    "574d54425131db8c7cef8d527a3e5903a3f11040b9dd8189db5c3a1ce\
6743278"|>, <|"File" -> File["Kernel\\FileTreePicker.wl"], "Hash" -> 
                    "cf8bea296bb5622009464e4a22e5324bee255824a3c6de03e8d175d70\
8b2ac18"|>, <|"File" -> File["Kernel\\FileUtilities.wl"], "Hash" -> 
                    "06d2a5d9193d7c6bd8c47a522f3382ebb91ba7dfb5809a40c3e4624ef\
f560577"|>, <|"File" -> File["Kernel\\ImageRead.wl"], "Hash" -> 
                    "c96a3ed613934b1a14dcadfecc8dd5d70dea7e1ba62c88cc4f1e512ea\
d6673a1"|>, <|"File" -> File["Kernel\\ReadPNG.wl"], "Hash" -> 
                    "d59441457fb99ae3aad0d2218d1b148e74942d07ca9d41bcad41cac1a\
4224c07"|>, <|"File" -> File["Kernel\\RelativePath.wl"], "Hash" -> 
                    "7727b2d319e9a1ee066f809e0083c6c499ae05151bdac576599e99558\
53c6806"|>, <|"File" -> 
                    File["Documentation\\English\\Guides\\FileUtilities.nb"], 
                    "Hash" -> 
                    "5031cd21b7968dced555ebde2d90346ceacc76fc5815fd2cab23b9c8c\
3899863"|>, <|"File" -> 
                    File["Documentation\\English\\ReferencePages\\Symbols\\\
SayHello.nb"], "Hash" -> 
                    "3ff376ec6d85f2daae853dc9bd86a44d21727fb992995d540fa1b7139\
d46404a"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[4]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 12, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 12], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[4]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 12, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 12], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}]}, ImageSize -> 6, 
                    BaselinePosition -> Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\BackupFile.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "84f8c408582f4f07b26ea14d1c87602d984ac02c60a7576b261c2ccd4\
b716734", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\CreateRandomFile.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "5d2e85fee9d5b40dd028cefffdfafa522cb7ff1b31a3bc048cb33a4ef\
4b39447", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\DirectorySize.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "04fafc00d9537d8c1e379341472dcc3fe917d17ce4313002e808a7395\
f07d4c9", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\FileNameEdit.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "60b6803dd998f6528553af4f2aefe8fa43b3309168831c55838b4106d\
c563f6a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\FileQ.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "574d54425131db8c7cef8d527a3e5903a3f11040b9dd8189db5c3a1ce\
6743278", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\FileTreePicker.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "cf8bea296bb5622009464e4a22e5324bee255824a3c6de03e8d175d70\
8b2ac18", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\FileUtilities.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "06d2a5d9193d7c6bd8c47a522f3382ebb91ba7dfb5809a40c3e4624ef\
f560577", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\ImageRead.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "c96a3ed613934b1a14dcadfecc8dd5d70dea7e1ba62c88cc4f1e512ea\
d6673a1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\ReadPNG.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "d59441457fb99ae3aad0d2218d1b148e74942d07ca9d41bcad41cac1a\
4224c07", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\RelativePath.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "7727b2d319e9a1ee066f809e0083c6c499ae05151bdac576599e99558\
53c6806", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Documentation\\English\\Guides\\FileUtilities.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "5031cd21b7968dced555ebde2d90346ceacc76fc5815fd2cab23b9c8c\
3899863", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation\\English\\ReferencePages\\Symbols\\\
SayHello.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "3ff376ec6d85f2daae853dc9bd86a44d21727fb992995d540fa1b7139\
d46404a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}}, 
                    BaseStyle -> {ContextMenu -> Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
                    Alignment -> Left, BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], 
                    Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.0010093`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.0010093`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"Indeterminate", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"TargetWolframVersionNumber\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["13.1`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   Short[#, 0.75]& ], 
                  "OEM6eJztPUtzG8l5BPHgQ5RI7XJ37U2qwiB0yrEDZQYYvLZcJYEgKSkWJYp\
NaZ0yXauemR5ySoMZZHpACU4llVT54krlkDiVk6viu39EDvkFOdnX2IdULvExuW2+\
7nlgZgBQMwAlERRwIIiZ7v6+7u/dr0/L0OUj/\
GrHek2olqe3H5oOsbs2cbCjWyY81jK0cGSxAlqO5h7p1NEWaeEYn8ITtIR6ikIoRTdQr9PBdv8BwSr\
K/FDL0o3dvok7unJgqT2DsOqLQfUsIg69ddzvEkqcF1aXmNvbNL+PDUr8t5v+\
W9KRiYoAHbK9jfJH0H4fytw4Jp2uAQ9dDN2Gs3T9EJsEEYMojmVHYeaOAA0fSJ4u3bd1NVrZ/\
15ijbBXBbqy03McfxhWvR657X6+v3do6+eAwot92zKdPVM9ItTq2QpBK/t7O7rTwV2KNryBgUpPoJ/\
EZsgzVHaJgftEpbdcEPs9U2EjPm50csd2jwTdWG11uwTb2ITBzz22zMGblR1MCXL6BtEWYn1f2TvHR\
g/DyNCVVs+xOkBiJXhbOCDOmaWi1UObwNg6+nmo0Zahn5odYjr+gNJCmzBO8b8HRR928ClB+\
o8JjNiSN2JBrQjc/LHeIdRe4J+1e8ETqLjW7tk2NPwcECbo5j6Mbxt3HxD99IyhkD+\
0XgHMDN1sydQyeg4Jl6c3D/CpqWu6wnm4/TWQe3nfxh1O1Cxd5sPD2Ddf/\
M3Pf1aEBld2dRt4hvUZ3h/d32lbhmXbn/HPr+7aH/PPb+/aP+\
CfX99tfzPo8RpybL37xHxodnvOgIvdl7fagDogdohVVTdP469XOVocnxgd1/ibA2yf6iYNszH7bi+\
0F+L/j8elMGB2v51M8O3LdjYu23Eh86qi9eIhVgzitGzlDMariHLFL7aKaBXa2SUa7hkO+sTj+\
YcO6bRM03J1Ccr+7h9+EdId/\
5Iptr84OXlGgYtOTg4JcNHJyROT7IJUka3SFvSdnmHD2HpmwgOb6k7/5OS+\
7jzoyScnmm6QUpcjcnKyDz+eObqhOzqhQz/lnm6oHoCdni0Tu//VV5EyJeGOcEe84zZXDHQZQ3+\
akbpRPIauG4ynJx4lgBZp21PBaLV5R6g3xUpZfIGyRVpES5QolqlStFJE7n9FtPy0h00Hxm3Ab6hvO\
vj1vmV3aBY0c7SvfqkNj12GpN4vgZZAPnodk4aGxxXw3COiDYrloLvDZUYon1X2CDQi0CguIuseMgx\
DrlYS4zIMJzlCPlQETMHkNjHU9mJ6YCGdnYvp7E10Zr1iQm2ets9A4StM58aH6MbjHhhJGwTm5dC7W\
2CkQP2AdtMpU4bZAZV505wfXAUUr/qW2SB7bHWvLgNsMJoYukkOLdA8rmF2CZxpZ4JSrlV+\
L95E27DoxN5E3AzN3Ym5OzGBO1GYuxNzd2KsOzFFXz8t7rBhdlnDFSbL7k/\
e7aEYFuUYyVikOjqWRD+9MuxURGvsd8s+7TGViTI/urRh3vCE7wCDfiPUmXyA8yEO8/\
8rjJgDWInOAZSYXUJ9Cm2/eAwIEJWplheA1UtQ+75F3KZu+N/\
6qIRuPDRhVLCxix3cypRQno0N1dbcdluLJZeybFQ4hTe/\
T2yTGCc70GSvyx7deWVAoQeYnqF7DUlrKJLQqDbKmqQJdblcI1iUVFFp1GtCWW02JKwIZaUm4Hq1Xo\
PXolJWFFWS62KtXpGG4X3uwWvbBHA+\
wqZqdeJQq2qZNKoaIU21KkuCqgrlhkI0TVM1rOFquazIdU0T5YqIK7IiSA1FrlSwRDRJrjQlqT4M9T\
MPaiAqzGKGQQoSNK0IgtqsVupqQxFJpd6sSKJUL6uKUtFIU6yrYl0hUkWsCALgJzRwvdKswqCoktIc\
BvmpB5L9eAy2ZU/\
VnTDEmiDXGkJFVZvNhlarlhvVagXDIJcx0UhDw1IFOiU0xVqjURGVarVRaciSKNRUpVqraDU8DHE9B\
PFpZDzrklqVpHJVrIiq3FCgG1pDrZbruEKqTaGCK5ooCpIgN1W1ITaaqlxVKlhUSK0uVcr1xjCob4R\
AHYMDc6grL4kdhqloDZngcrMmy9VauSwITakmEQmXy6RaKUsyIWXoU1nCFaWmEqFCGjC8VbUuNOQyV\
sQRMD8LwQyEP0LDmlrGVbUpNitqXanJQEapzthFq1QaZSLLTVHGdVWTqw2hiSVBqRCpVga20ao1oVo\
fwTYfeyC5k8Wm1iI9bNZg/\
NSaWAFGkUUmFgpWNaIoDVVlPVEJrhMAWSsrjYaiSJpIqmIZWqmBaGBxGNxtDxyDdPj4fhiYWgXGFqV\
qXZObTUwqGKuCWi6LMGqyKDVIXWpKZVWoK7ipSqIMiEiiAuOIpXJZUoQRffs0AAZaD1T0IXbOwhDr9\
TKIu1oRm6SJRUKEWk2DcSOC0ACSKRJDQ6iKVVFWsQKyX21CwSbQtAqvG0JtGGJp11K4iuYa8mTPPDV\
0enZyv6eroOmjZDXlAfcKwP9qWZTrzVpDVYharVaJrBLQPkJFqikEK0q9pinVhljV1LKC5XJFbioNp\
dIA0apVhhFpjEbkCAQPvFoFhuIUEEL9jmwZ8I37D4hhWGGcKppWqdcIsC7oqbKKMeiriqo0gedqWJI\
AWxg9RqoyDAnInqBhwB84RQUpECRcQrda0OSrPTZ5yz1VHimV0JqnvtEZ7jLv9I9CBsDT+\
kiBIOUFm0gmNi/WypZ8k0az0Cz/A53dGlf3+6S/C0ar3863MyOquqM15hXrPwR4OfoH41p/\
pHd0MFSAwFjk3YDU7+O3LsDTjUh4wQz9w3EFWxDl8EJ2hkc3j+5dIoKJWho71uApuEQKceGb+9H+\
nsdqyXrNO/23f3cPSm+4Jo6oD01NB17qQzy+\
GASEASHba6PLDmYfWKHMmEJeqDvwNhiKbE0jhGqLUkuB+\
uvhZ4AxLbjTNYDT7dCr59wuxx5CyZ4ShGGeT+\
qOy2CmdgiAP8zjILfXgLdRDgJw3FoooRUg0TEEfsRpb4IAuqT3HqyCAzUXxbkozoAo5mZRBpnTMejC\
7V2ddvk8HZCqbfVMhxXaDJ66rOC+\
ABqusRgnXHKdPYgVWkGW7TAwdADnFnvmTUFZZvjFA11ViclCOXqAuzT3uGeAR7T6rKtCsMK60s5QIV\
lMZvWcbs95uLu97Qdzf5qsYheQhUoL0UgwYeXzQ4tub/\
MZ2DTVziardgoPAdUsvRkJZEPzZ7w1MVFr4HqBGnXfsWB9l3QNqw+Rc96dX12iOf7q5tAUco7H+\
fDNppLhe3UQh7PJxgOrR4l1Tmw22Xjfxt0zXaHD07XBTGq7cMEsNyCGFGwQ1a7wz7//\
W6TVgUiswLP+I3JODK/kb++yKdpDy+ifQjuhhQzv251l5Rpi+Ygjj4321/y3O1Hb/\
vriUkkaSlA7EazLayhZ16YlETxMxoXbyNAVNhH8ks9430lUybAA3gPLUCdQDkOGnebA2FK07LsGbmi\
A8pyNR038x2erWZgDemvUqsMarzVumjvvrn7x/3Pt/\
GAak00OndqgUtUoY2v88z93L1q54EtddNmn0hvFdW3vHKo/\
wKZq8HWOdd7vwQJMRKI9O77o6Yjgp4cNX8hgSwuRZYZ/+kf2+Y+7tsg//3nX/gv++e+\
7aPmRbr5ksGPrRoH5W+Og2wab71C5vlx8qMGg1BPRXTkjyku+gwiz1Q+w4Cln+\
LRFrZCQx3rcZvGNQSmBpDNU6SxTOoOU0g6lFtf3I+C+Uz9TWslz/LzwyA155prpIs3kuci+\
ZvI95rlmmmumq6uZvDmF2dJMfE72mmumRKFOOg3lLQ0GKir4PddRcx11VXTUYPU+\
CwGRx6NXW0ONRJlPM3vKyd0olFw7BVOpV1pJLV6onC7cb3CVqZkdw4Deb28+lE8ZpqVr+3uXTdDl+\
CbQkQDGk2n6HR+zTEruR0xGymDe/z1Q1PeIbqIuNvdtq9OSrfOk8njBfpzZI+\
XidZXKaXdEzTIpP0SpHLdfbfbomL2uIjntjsFZJuWHKJJj9nPOHhlz11Uip91RO8uk/\
BAlMr7fefbol7+uojjtjvNZJuWHKIpjzwPMHiEL11Umpz2RMcuk/\
BBlctx5mdmj49J1FclpTyzNMik/RJEcdZ5s9mi4fF3FcdoTfbNMyg9RHIfPW84eBVeuqzBOe+\
J1lkn5IQrjmPPIs0fG1esqkdOeCJ9lUn6IEpnuvP7sUffGdRXUaW9MmGVSfoiCOvF9FrNH6LXrKrPT\
3igyy6ScUZkNsBt/PekNfh/ha+eAmD0tckHjR22r02Ubb/ded21C2d2jtJFsZJVBm8e2fnoKVCzQ/\
JdnusIOGC09MynukKe0nKw1A1PniUerd8INg4PXecQRnbjb9HvJu9gerl2dqHZw0/\
gICmregffp8JqcDTzwk3WMEWQHCPsy2MCerrlTw5KxgRTbMoxDK5C0t3nCgcH4UnfO4tfmJWRi6D+\
LMrcTlt/2K/hgkkmYX4sV3k4jlX6ldOB0+ohgzT1psE2/SAfuYahyOrBnvI57fwa/\
8aLFjwEVDrCjnKVSRqFur7UMh9gmnw8In6CIHvaCgulxfJqW6KnPGrmj92eJamHDGAxdyipXrCdmP3\
VP/CrvqieVRLVo+\
JIY5sQk08uKe19R5IaZtPolk7Jj4VtuUteN34aTSoee4XPCbt1hp56yjy3m4y3vY93o2eRp4oN9KjR\
AiRO6uXRCwiZzRnTqX60RYA2mb98mJD0D8rs6mIP755Zuhs5psnON8PeJ7UGYcDhTC136IaBLAOeMX\
QaVpcvMD/BSHay6FzWxfqE8uwp/S1seeJn5vb/sgac+gQV0HX20MF0jIVuQhX+\
nayxiTVDBuy7fPUK8AJS46U5N770mSs8h/BRpLREY9xRp6FKp+VnSMXHEu4g80rqFqGCTjhW6l/\
8mE4+Rt/q7Ap+bRuCTWktG671O1+m/\
bWs5gTZ13b7UPs8kLmYitQVlyVxtzdXWh6W2slhV36yz6MouMfilmXagvrj0pldc6YK8CBMPBXlRph\
5cgjZB8JvShxqEYLmIGxeaUpskcEArLaoQU42pKpRjbvdoKU2GsHdFBbQyF8/\
3J2wh6r5Z5EI26zI4a3WXjGSttSPCUm6QrTmLXQcWC5P5XfOYlyYpzF0FaG/OV7PPV7EMWG/\
mqLDH4C/i5ANTOWCQz9tWt7/lX8e65VhbbUPvyha21WGmyST0SR3Lyznmt5uQcxTAhYFPGsSldn/\
CPf+U95w9f0Ovk85YB72eYFLs0gdoJCNECH8IvEUGlNfNrcfk1Vab8DvwL43wySikAFSOz7uhvNt1T\
voLu/1OKH/pIzSwKn7RVXY73D7u6EYfrSOeiHELYZNuHdrWYBGdFeL3Nd+KVvySpxak+UMD6+ag+\
K5+rrMLsty0CYMaQdY+LXJL1f/9L/v81+CWquV4OtJItr7BHVY0kn8zvICfjS3gv41urj/STbJjE/\
ySrV3q5lC60vCibPya8gtzmbJpWkazeL7SFLnEdHcS/\
mmwzB3as5CMcylxet3nOnnF55zSXXqfH7Oq7l4TyKO5dN3g0enIS+mTteN0uuzxNl3aZssa/\
C7DdNX96fxk9txbCplkDSR70Y6EdL31fMfQWk7K/\
k505X9i99Gtxt7M3cfLcx9TcnRYKCfjFJfVJs4RkVaCeTKPCZWhq0nf6laWYZGbKG3GJ6FKYA1tSrw\
Xa6EXD9A3vs00zZZpbRmWeUrsLaYwwDL+ySRQ4zmWj23MLnj1Npy+o41AERQ+\
juQjcdMUxzOqJFw9cazuDrY5iMAUZhKawg5+SbjzokIT0MAfh2p5Rd38Qagn+\
xZTBpqlM5rzO23fp958E/dn0nG/\
R9NUWnFbthxw1H029fLlFGjB5b2oE7d0RLoGVkjC8KvDb5AONipvb8f3uGqLV3bjsafyF9i+Rmy+\
5It3kXupr/CeaSAUaAO2MEK/k3hdeDvoa7h+\
MmS7wZLMqDYmWX4J2imM9EwhlHtoKjbhAdnUe17TroWnGdRUGyEjexhTj70HaoptmxORKn0P3+\
mW8aShJ7O3fOht8KHSkDjhHme//T3D5dq47nf1Dcs/1QUNa7dX4wonEInxZcYakEn19YhplNjUb+\
SERGjCZI3XGH4emkjJHluDmcPhYxqhKaT2+oj5kqSTgKN6dduzaV/\
auNsltpu3fdV76P5aOrbgH3D9Vuinu25k/\
cL75nMsLEWgj5WXjBBGmzNpWnPtteE526na8HwVv40899CCRlLvhPQwec724KfE5DzYVe+\
28WCCNs6ibRSOuf8ctJLe63bbWdnxfZygqYmcI7e15ZD6yr2zjRxrQFlTxba6b9mdpFHT2/\
HUA57jen9SIVzwM4yEk5BEe+Vt6tV/7L9OsVE3empo1b2i/NkzoFq6cG9oljcTezV+\
RjYCZoOtpJ4T9Tm2dSxDvUA3p+cFP72lj8LGLtFwz3ACJJFfIkO/\
4esunvwEHCjHV2KZgXZHxCCKw9GKTQsvs6tqR734yK3D+uypQ+\
ptH7uBep0Otvt8U90gn0XhyHrFNOtglrxwjE9dXXvjmHQgsHCI+\
5MXQL9XjBxN3enphnpEKPSTFlGu+MVWEa1Cm17f0SchsKHDkdnf/\
cMvQrCG8ECZv9Ly9HYwOi6sSMlcHGO0hHoKREE06CvzhVDmh9DoRoSdQv3x2fcW9+\
2AIBC7gxzEJto3/\
beEZXdH3jb7PLtlph8fqEywfrrOToW6BLHsKEyXWh6QPF1ivBWt7H8vsUbYqwKwew/0njcMUbP4+\
f6ez5L7NhB+z2RE4YsbaGV/b0d3OrhL0YY3MFDpCfST+\
9pR4XZB7PdMJSzc8dHxVxI8Rh2kI4q5ISEBHZLdkct2/\
tvCAXHOLBWtHtoExpZtJBvhqwQatdAmjFP871HuS+SoZtyT0fyspe7h04W1e8ETNs/\
mrdu56bJv8iRKuPuArwRpfpJTKLfZkqll9BwSLk9vHuBTU9d0hfNw+2sg9zL3wlx2X+bDw9g3X/\
zNz39WhAZXvM0a5ySSpukz/vnVXftj/vntXfsH/PPru+1vDhw8tlm2+\
8R8aIJaGlpN8nTCIVbZ1pP46wvcybDbGGbj8Irc0OrcSFwKA2ZfDLTQxNpopXgAAg80nlj3oFJUoW3\
JTKNtKRDdGgS0/hZ1lYoGcUD/\
TvHS9OiN4jEgZDAem1xvZqNteyoRrQp3BEEUhGblBcoWQS8vUQJxtkphvJD7XxEtP+\
1h09GdgcFaRX0YhNfMlaFZ0JTRvgZmzSPfkBQGrtiSt285NDzeeevwGi3KQXeHy4xQBqvsEWgoIEec\
Zdc9ZOJHu9+MyzCc5Aj5UONr02+\
EGo5NkgK74Cz6Jlsd9rKvn2GWQ42ttMfXni9aXgajAeoAtI3OJnDcg/MulXnTnB/iS8/\
vhA0iUeiVY4DhDNW+/suEHDjXSr4X6942LDqxdY+bhbl5n5v3Ccz7jbl5nyHzPkVfbxcP8Gu90+\
NZxqbr8QC633j2dz/5Gfvzz5eG7kbx0LYYzYnKr6252th+\
VHR3Kbk37Fg905lcFjLCJaJ1SMD8mA6PuYlK1Etn85sPTRVE1O7oJlvkzha/BZze9aCu+\
PCLaN3ndDDGjqa/fvsM/0mMg64OWT4tokCfXTHUPi6ilzp4EldtyH6/eAyGjzhfWoYGZvA5+\
BkA0HWaJ0cwL1buiC8uDck8IHk6OTabIybtivPwbh7ezcO79OHdINSIR04jApNQ82jNkzcW8xnx2Oy\
iBQ+U+REUD6a3PxoW5tZqCa0EHicUDtw/+7s/+fG/\
Pvnp4V205PmGJbQe89daCyV0K2rS2KONuOfRZg/jdj8MjMZs9pJXuIQ+HmExWXObo+wVe3F7yFqwp+\
tePODrSPTdFN59CX0+XtXbFf75zr2Q+3CZ6y+\
Zv74qxuBm8RArMDxzKzC3AnMrMLNW4EZIilv5Errp/m7Zypl+\
TtDfZ9pfnDyjwCsnh0wjnzwxya4Nb7ZKW8Am9AwbxtYzU2fHykFzn9zXnQc9+\
UQDdVvq8pai94HHfnFF67a807OB9fpffRUpURLuCHfEO25TY43TL7d+ufCTbxfvhYzTJu+\
R25kgWbLmX4z8N++5V2AneTMH2NQ14s7hekv3rUzJuwhXW3Mp1losubcaB+\
hveikRdrDystf1srKXvPty7zUkraFIQqPaKGuSJtTlco2wlDWi0qjXhLLabEhYEcpKTcD1ar0Gr0Wl\
rCiqJNfFWr0iDcO7IBd8AHXaTOTDUMflug5ATptpeRjkmFy+\
AcRpM8kOQ4znKh2M55SZModBjc3FGMCcNhPgeBrGc80NaDhlprNhkKNyaQ16OGUmp2Fww7mCAmDTZq\
oZz5+xXCgBxGkzcQxDTJfrYcC9U2YaGEZk4rvsA5ymv0mdboS2c7UotdiJn/\
XwMzDPtOC6WWChbodePec6LPYQSvaUwB3y765n6AbOyQgA/\
sCMg9xea2dY5PXNsXusQhvd5vHgDMeD/w8Eu1xR"}, "ClickToCopyTemplate"]]}}, 
             Alignment -> Left, 
             ItemSize -> {{Automatic, Automatic, Fit}, Automatic}], FontColor -> 
            GrayLevel[0.5], FontSize -> 12]}}, 
         ItemSize -> {{Automatic, Fit}, Automatic}, Alignment -> Left, 
         Dividers -> {None, {-1 -> GrayLevel[
              Rational[239, 255]]}}, Spacings -> {{1, {}, 1}, {1, {}, 2}}]}, 
       Dynamic[
        CurrentValue[
         EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]]], "Text", 
     FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> False]], 
   "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     InterpretationBox[
      StyleBox[
       PaneSelectorBox[{False -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.8950041997966799`17.343082919447752*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{"\"Published to the cloud\"", 
                    TemplateBox[{"\"  View \[RightGuillemet]\"", {
                    URL[
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Paclet/PeterBurbery/FileUtilities"], None}, 
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Paclet/PeterBurbery/FileUtilities", "Hyperlink", {
                    "HyperlinkActive"}, BaseStyle -> {"Hyperlink"}, 
                    Alignment -> {Automatic, Baseline}, BaselinePosition -> 
                    Baseline}, "HyperlinkTemplate"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                   TemplateBox[{
                    RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.0025], {
                    FaceForm[{
                    RGBColor[
                    0.9607843137254902, 0.5058823529411764, 
                    0.19607843137254902`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.660200119018555`}, {205., 
                    212.11320304870605`}, {246.01799774169922`, 
                    235.79520988464355`}, {369.0710144042969, 
                    306.8401927947998}, {369.0710144042969, 
                    117.38719749450684`}, {205., 22.660200119018555`}}, {{
                    30.928985595703125`, 306.8401927947998}, {
                    153.98200225830078`, 235.79520988464355`}, {195., 
                    212.11320304870605`}, {195., 22.660200119018555`}, {
                    30.928985595703125`, 117.38719749450684`}, {
                    30.928985595703125`, 306.8401927947998}}, {{200., 
                    410.22620964050293`}, {364.0710144042969, 
                    315.5001964569092}, {241.01799774169922`, 
                    244.45519828796387`}, {200., 220.77320671081543`}, {
                    158.98200225830078`, 244.45519828796387`}, {
                    35.928985595703125`, 315.5001964569092}, {200., 
                    410.22620964050293`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYB0n8ffYgewSEAmhO9aBaJ/1cmB+XqT
gsF8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYg+9+8dhH/prQmI9ptyBYV/jmEH
Cj+CeUEMMr9iq24MsnkV3Eeike2b8aQrGtk9DSrhyiA6e88JMD/BvUgJbG/S
EzBfQYpBCaKeIROZv2muNDK/YaqzeSayflj4wMyHhR/M/oDHC8uR3fdAaWM5
svthfJj/YHyY/2F8WPjAzIOFH0p8AQA7u3Ea
                    "]}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{43., 198.67381286621094`}, {107.71399688720703`, 
                    161.3118133544922}, {107.71399688720703`, 
                    86.58680725097656}, {43., 123.94882202148438`}, {43., 
                    198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.3137254901960784, 0.4549019607843137, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{182.77679443359375`, 198.67381286621094`}, {
                    182.77679443359375`, 123.94882202148438`}, {
                    118.06279754638672`, 86.58680725097656}, {
                    118.06279754638672`, 161.3118133544922}, {
                    182.77679443359375`, 198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7803921568627451, 0.8627450980392157, 
                    0.9490196078431372], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{112.8884048461914, 244.9990997314453}, {
                    177.60240173339844`, 207.63610076904297`}, {
                    112.8884048461914, 170.27410888671875`}, {
                    48.174407958984375`, 207.63610076904297`}, {
                    112.8884048461914, 244.9990997314453}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{130.02911376953125`, 350.11590576171875`}, {
                    194.80210876464844`, 312.7189064025879}, {
                    194.80210876464844`, 237.92591094970703`}, {
                    130.02911376953125`, 275.32291412353516`}, {
                    130.02911376953125`, 350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.4627450980392157, 0.3607843137254902, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{269.9334716796875, 350.11590576171875`}, {
                    269.9334716796875, 275.32291412353516`}, {
                    205.1604766845703, 237.92591094970703`}, {
                    205.1604766845703, 312.7189064025879}, {269.9334716796875,
                     350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8862745098039215, 0.803921568627451, 
                    0.9529411764705882], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{199.98130798339844`, 396.48345947265625`}, {
                    264.7543029785156, 359.0864601135254}, {
                    199.98130798339844`, 321.69046783447266`}, {
                    135.20831298828125`, 359.0864601135254}, {
                    199.98130798339844`, 396.48345947265625`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{217.61199951171875`, 199.13890075683594`}, {
                    281.8990020751953, 162.0229034423828}, {281.8990020751953,
                     87.7908935546875}, {217.61199951171875`, 
                    124.90690612792969`}, {217.61199951171875`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.43137254901960786`, 0.6039215686274509, 
                    0.34509803921568627`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{356.46661376953125`, 199.13890075683594`}, {
                    356.46661376953125`, 124.90690612792969`}, {
                    292.1796112060547, 87.7908935546875}, {292.1796112060547, 
                    162.0229034423828}, {356.46661376953125`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[0.8549019607843137, 0.9450980392156862, 0.8], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{287.039306640625, 245.15859985351562`}, {
                    351.32630920410156`, 208.0426025390625}, {
                    287.039306640625, 170.92660522460938`}, {
                    222.75230407714844`, 208.0426025390625}, {
                    287.039306640625, 245.15859985351562`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    356.46649169921875`, 215.76849365234375`}, {
                    296.2834930419922, 250.5924949645996}, {
                    356.46649169921875`, 285.26649475097656`}, {
                    356.46649169921875`, 215.76849365234375`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    217.61199951171875`, 114.06449890136719`}, {
                    277.7949981689453, 79.24049758911133}, {
                    217.61199951171875`, 44.566497802734375`}, {
                    217.61199951171875`, 114.06449890136719`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    122.17269897460938`, 78.36309814453125}, {
                    182.42269897460938`, 113.07109832763672`}, {
                    182.35969924926758`, 43.614097595214844`}, {
                    122.17269897460938`, 78.36309814453125}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    103.52159881591797`, 249.46669006347656`}, {
                    43.27159881591797, 214.7586898803711}, {
                    43.334598541259766`, 284.21569061279297`}, {
                    103.52159881591797`, 249.46669006347656`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    120.86710357666016`, 350.61541748046875`}, {
                    120.80010357499123`, 281.0834197998047}, {
                    60.68010330200195, 315.86641693115234`}, {
                    120.86710357666016`, 350.61541748046875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    278.3727111816406, 281.2159118652344}, {
                    278.43971118330956`, 350.74790954589844`}, {
                    338.5597114562988, 315.9649124145508}, {278.3727111816406,
                     281.2159118652344}}}]}}, {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    ImageSize -> {Automatic, 35}}], 
                    StyleBox[
                    "\"PeterBurbery/FileUtilities\"", FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], "OEM6eJy1kUFLAzEQhdm6iFAR9Cf0BzR49diKKBQsSYsHKZJNJz\
Q1uxMyE+L+exNURDz3NofvzXvzxjZ0IXVe4AeQbehcYp1tS+3KEasrCYQpGnjujmBYNa/\
2jK6fBoYYIrBmh0Pl/yunS49p/yub0HQDffCaoWKTb+\
xtdmAOdCdEznme0duoe1Olc4O9wO4ouhQ7iOOtuIfgcYT9TyYSa208sFhDybP4wsSD87Bl5x07oJna\
nXS/unwcA0TvhvetXKlmV5r4c/lp7WuNMnmgGwW+2L04PiyxfGdgonYTE5RIn3v6sMw="}, 
                    "ClickToCopyTemplate"], LineBreakWithin -> Automatic, 
                   LineIndent -> 0, StripOnInput -> False], ItemSize -> Fit, 
                  StripOnInput -> False], "", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "e59fa65b-a1b7-4af0-b472-8cfdf5b1740c"]]]]]], Appearance -> 
                   None, BoxID -> "e59fa65b-a1b7-4af0-b472-8cfdf5b1740c", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
           AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.8950041997966799`17.343082919447752*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{"\"Published to the cloud\"", 
                    TemplateBox[{"\"  View \[RightGuillemet]\"", {
                    URL[
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Paclet/PeterBurbery/FileUtilities"], None}, 
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Paclet/PeterBurbery/FileUtilities", "Hyperlink", {
                    "HyperlinkActive"}, BaseStyle -> {"Hyperlink"}, 
                    Alignment -> {Automatic, Baseline}, BaselinePosition -> 
                    Baseline}, "HyperlinkTemplate"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                   TemplateBox[{
                    RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.0025], {
                    FaceForm[{
                    RGBColor[
                    0.9607843137254902, 0.5058823529411764, 
                    0.19607843137254902`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.660200119018555`}, {205., 
                    212.11320304870605`}, {246.01799774169922`, 
                    235.79520988464355`}, {369.0710144042969, 
                    306.8401927947998}, {369.0710144042969, 
                    117.38719749450684`}, {205., 22.660200119018555`}}, {{
                    30.928985595703125`, 306.8401927947998}, {
                    153.98200225830078`, 235.79520988464355`}, {195., 
                    212.11320304870605`}, {195., 22.660200119018555`}, {
                    30.928985595703125`, 117.38719749450684`}, {
                    30.928985595703125`, 306.8401927947998}}, {{200., 
                    410.22620964050293`}, {364.0710144042969, 
                    315.5001964569092}, {241.01799774169922`, 
                    244.45519828796387`}, {200., 220.77320671081543`}, {
                    158.98200225830078`, 244.45519828796387`}, {
                    35.928985595703125`, 315.5001964569092}, {200., 
                    410.22620964050293`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYB0n8ffYgewSEAmhO9aBaJ/1cmB+XqT
gsF8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYg+9+8dhH/prQmI9ptyBYV/jmEH
Cj+CeUEMMr9iq24MsnkV3Eeike2b8aQrGtk9DSrhyiA6e88JMD/BvUgJbG/S
EzBfQYpBCaKeIROZv2muNDK/YaqzeSayflj4wMyHhR/M/oDHC8uR3fdAaWM5
svthfJj/YHyY/2F8WPjAzIOFH0p8AQA7u3Ea
                    "]}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{43., 198.67381286621094`}, {107.71399688720703`, 
                    161.3118133544922}, {107.71399688720703`, 
                    86.58680725097656}, {43., 123.94882202148438`}, {43., 
                    198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.3137254901960784, 0.4549019607843137, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{182.77679443359375`, 198.67381286621094`}, {
                    182.77679443359375`, 123.94882202148438`}, {
                    118.06279754638672`, 86.58680725097656}, {
                    118.06279754638672`, 161.3118133544922}, {
                    182.77679443359375`, 198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7803921568627451, 0.8627450980392157, 
                    0.9490196078431372], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{112.8884048461914, 244.9990997314453}, {
                    177.60240173339844`, 207.63610076904297`}, {
                    112.8884048461914, 170.27410888671875`}, {
                    48.174407958984375`, 207.63610076904297`}, {
                    112.8884048461914, 244.9990997314453}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{130.02911376953125`, 350.11590576171875`}, {
                    194.80210876464844`, 312.7189064025879}, {
                    194.80210876464844`, 237.92591094970703`}, {
                    130.02911376953125`, 275.32291412353516`}, {
                    130.02911376953125`, 350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.4627450980392157, 0.3607843137254902, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{269.9334716796875, 350.11590576171875`}, {
                    269.9334716796875, 275.32291412353516`}, {
                    205.1604766845703, 237.92591094970703`}, {
                    205.1604766845703, 312.7189064025879}, {269.9334716796875,
                     350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8862745098039215, 0.803921568627451, 
                    0.9529411764705882], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{199.98130798339844`, 396.48345947265625`}, {
                    264.7543029785156, 359.0864601135254}, {
                    199.98130798339844`, 321.69046783447266`}, {
                    135.20831298828125`, 359.0864601135254}, {
                    199.98130798339844`, 396.48345947265625`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{217.61199951171875`, 199.13890075683594`}, {
                    281.8990020751953, 162.0229034423828}, {281.8990020751953,
                     87.7908935546875}, {217.61199951171875`, 
                    124.90690612792969`}, {217.61199951171875`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.43137254901960786`, 0.6039215686274509, 
                    0.34509803921568627`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{356.46661376953125`, 199.13890075683594`}, {
                    356.46661376953125`, 124.90690612792969`}, {
                    292.1796112060547, 87.7908935546875}, {292.1796112060547, 
                    162.0229034423828}, {356.46661376953125`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[0.8549019607843137, 0.9450980392156862, 0.8], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{287.039306640625, 245.15859985351562`}, {
                    351.32630920410156`, 208.0426025390625}, {
                    287.039306640625, 170.92660522460938`}, {
                    222.75230407714844`, 208.0426025390625}, {
                    287.039306640625, 245.15859985351562`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    356.46649169921875`, 215.76849365234375`}, {
                    296.2834930419922, 250.5924949645996}, {
                    356.46649169921875`, 285.26649475097656`}, {
                    356.46649169921875`, 215.76849365234375`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    217.61199951171875`, 114.06449890136719`}, {
                    277.7949981689453, 79.24049758911133}, {
                    217.61199951171875`, 44.566497802734375`}, {
                    217.61199951171875`, 114.06449890136719`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    122.17269897460938`, 78.36309814453125}, {
                    182.42269897460938`, 113.07109832763672`}, {
                    182.35969924926758`, 43.614097595214844`}, {
                    122.17269897460938`, 78.36309814453125}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    103.52159881591797`, 249.46669006347656`}, {
                    43.27159881591797, 214.7586898803711}, {
                    43.334598541259766`, 284.21569061279297`}, {
                    103.52159881591797`, 249.46669006347656`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    120.86710357666016`, 350.61541748046875`}, {
                    120.80010357499123`, 281.0834197998047}, {
                    60.68010330200195, 315.86641693115234`}, {
                    120.86710357666016`, 350.61541748046875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    278.3727111816406, 281.2159118652344}, {
                    278.43971118330956`, 350.74790954589844`}, {
                    338.5597114562988, 315.9649124145508}, {278.3727111816406,
                     281.2159118652344}}}]}}, {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    ImageSize -> {Automatic, 35}}], 
                    StyleBox[
                    "\"PeterBurbery/FileUtilities\"", FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], "OEM6eJy1kUFLAzEQhdm6iFAR9Cf0BzR49diKKBQsSYsHKZJNJz\
Q1uxMyE+L+exNURDz3NofvzXvzxjZ0IXVe4AeQbehcYp1tS+3KEasrCYQpGnjujmBYNa/\
2jK6fBoYYIrBmh0Pl/yunS49p/yub0HQDffCaoWKTb+\
xtdmAOdCdEznme0duoe1Olc4O9wO4ouhQ7iOOtuIfgcYT9TyYSa208sFhDybP4wsSD87Bl5x07oJna\
nXS/unwcA0TvhvetXKlmV5r4c/lp7WuNMnmgGwW+2L04PiyxfGdgonYTE5RIn3v6sMw="}, 
                    "ClickToCopyTemplate"], LineBreakWithin -> Automatic, 
                   LineIndent -> 0, StripOnInput -> False], ItemSize -> Fit, 
                  StripOnInput -> False], "", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "e59fa65b-a1b7-4af0-b472-8cfdf5b1740c"]]]]]], Appearance -> 
                   None, BoxID -> "e59fa65b-a1b7-4af0-b472-8cfdf5b1740c", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}, {"", 
             PaneBox[
              TagBox[
               GridBox[{{"\"\"", 
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"\[FilledVerySmallSquare]\"", "\"Cloud object:\"", 
                    TemplateBox[{
                    RowBox[{"CloudObject", "[", 
                    
                    TemplateBox[{
                    "\"https://\[Ellipsis]/burbery1/DeployedResources/Paclet/\
PeterBurbery/FileUtilities\"", 
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Paclet/PeterBurbery/FileUtilities"}, "HyperlinkURL"], "]"}],
                     "OEM6eJy1kc1KAzEQx9m6iFAv+\
gh9gAavHlsRhYIlafEgRbLphKbO7oTMhLhvbxa9+AC9Dr+Z/8f4hm+\
0LSv6BvZXfPc6CKSYQKwEGurYN3ytaQJ8y+0msJj5Gikf37ozODHNh5/xfAd9RCswYbM/\
7HNxEon8qFQpZVkIfbK9m1aXjnpF3Vl1OXWQxgf1BBFphKMGppwcsNpahyBqC9XP6hdTzwFhLwGDBO\
CFOVz0vrl9GSMkDMPXXm9Mc6hN/Et+WfmpRp0R+N4AVrn3IKc11e8MwtzuUoYfAy+jrg=="}, 
                    "ClickToCopyTemplate"]}, {
                    "\"\[FilledVerySmallSquare]\"", "\"Visit web page:\"", 
                    TemplateBox[{
                    TagBox[
                    
                    RowBox[{
                    "\"https://www.wolfr\"", "\[Ellipsis]", 
                    "\"ery/FileUtilities\""}], Short[#, 0.75]& ], 
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Paclet/PeterBurbery/FileUtilities"}, "HyperlinkURL"]}, {
                    "\"\[FilledVerySmallSquare]\"", "\"Resource object:\"", 
                    TemplateBox[{
                    RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.0025], {
                    FaceForm[{
                    RGBColor[
                    0.9607843137254902, 0.5058823529411764, 
                    0.19607843137254902`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.660200119018555`}, {205., 
                    212.11320304870605`}, {246.01799774169922`, 
                    235.79520988464355`}, {369.0710144042969, 
                    306.8401927947998}, {369.0710144042969, 
                    117.38719749450684`}, {205., 22.660200119018555`}}, {{
                    30.928985595703125`, 306.8401927947998}, {
                    153.98200225830078`, 235.79520988464355`}, {195., 
                    212.11320304870605`}, {195., 22.660200119018555`}, {
                    30.928985595703125`, 117.38719749450684`}, {
                    30.928985595703125`, 306.8401927947998}}, {{200., 
                    410.22620964050293`}, {364.0710144042969, 
                    315.5001964569092}, {241.01799774169922`, 
                    244.45519828796387`}, {200., 220.77320671081543`}, {
                    158.98200225830078`, 244.45519828796387`}, {
                    35.928985595703125`, 315.5001964569092}, {200., 
                    410.22620964050293`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYB0n8ffYgewSEAmhO9aBaJ/1cmB+XqT
gsF8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYg+9+8dhH/prQmI9ptyBYV/jmEH
Cj+CeUEMMr9iq24MsnkV3Eeike2b8aQrGtk9DSrhyiA6e88JMD/BvUgJbG/S
EzBfQYpBCaKeIROZv2muNDK/YaqzeSayflj4wMyHhR/M/oDHC8uR3fdAaWM5
svthfJj/YHyY/2F8WPjAzIOFH0p8AQA7u3Ea
                    "]}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{43., 198.67381286621094`}, {107.71399688720703`, 
                    161.3118133544922}, {107.71399688720703`, 
                    86.58680725097656}, {43., 123.94882202148438`}, {43., 
                    198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.3137254901960784, 0.4549019607843137, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{182.77679443359375`, 198.67381286621094`}, {
                    182.77679443359375`, 123.94882202148438`}, {
                    118.06279754638672`, 86.58680725097656}, {
                    118.06279754638672`, 161.3118133544922}, {
                    182.77679443359375`, 198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7803921568627451, 0.8627450980392157, 
                    0.9490196078431372], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{112.8884048461914, 244.9990997314453}, {
                    177.60240173339844`, 207.63610076904297`}, {
                    112.8884048461914, 170.27410888671875`}, {
                    48.174407958984375`, 207.63610076904297`}, {
                    112.8884048461914, 244.9990997314453}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{130.02911376953125`, 350.11590576171875`}, {
                    194.80210876464844`, 312.7189064025879}, {
                    194.80210876464844`, 237.92591094970703`}, {
                    130.02911376953125`, 275.32291412353516`}, {
                    130.02911376953125`, 350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.4627450980392157, 0.3607843137254902, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{269.9334716796875, 350.11590576171875`}, {
                    269.9334716796875, 275.32291412353516`}, {
                    205.1604766845703, 237.92591094970703`}, {
                    205.1604766845703, 312.7189064025879}, {269.9334716796875,
                     350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8862745098039215, 0.803921568627451, 
                    0.9529411764705882], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{199.98130798339844`, 396.48345947265625`}, {
                    264.7543029785156, 359.0864601135254}, {
                    199.98130798339844`, 321.69046783447266`}, {
                    135.20831298828125`, 359.0864601135254}, {
                    199.98130798339844`, 396.48345947265625`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{217.61199951171875`, 199.13890075683594`}, {
                    281.8990020751953, 162.0229034423828}, {281.8990020751953,
                     87.7908935546875}, {217.61199951171875`, 
                    124.90690612792969`}, {217.61199951171875`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.43137254901960786`, 0.6039215686274509, 
                    0.34509803921568627`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{356.46661376953125`, 199.13890075683594`}, {
                    356.46661376953125`, 124.90690612792969`}, {
                    292.1796112060547, 87.7908935546875}, {292.1796112060547, 
                    162.0229034423828}, {356.46661376953125`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[0.8549019607843137, 0.9450980392156862, 0.8], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{287.039306640625, 245.15859985351562`}, {
                    351.32630920410156`, 208.0426025390625}, {
                    287.039306640625, 170.92660522460938`}, {
                    222.75230407714844`, 208.0426025390625}, {
                    287.039306640625, 245.15859985351562`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    356.46649169921875`, 215.76849365234375`}, {
                    296.2834930419922, 250.5924949645996}, {
                    356.46649169921875`, 285.26649475097656`}, {
                    356.46649169921875`, 215.76849365234375`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    217.61199951171875`, 114.06449890136719`}, {
                    277.7949981689453, 79.24049758911133}, {
                    217.61199951171875`, 44.566497802734375`}, {
                    217.61199951171875`, 114.06449890136719`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    122.17269897460938`, 78.36309814453125}, {
                    182.42269897460938`, 113.07109832763672`}, {
                    182.35969924926758`, 43.614097595214844`}, {
                    122.17269897460938`, 78.36309814453125}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    103.52159881591797`, 249.46669006347656`}, {
                    43.27159881591797, 214.7586898803711}, {
                    43.334598541259766`, 284.21569061279297`}, {
                    103.52159881591797`, 249.46669006347656`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    120.86710357666016`, 350.61541748046875`}, {
                    120.80010357499123`, 281.0834197998047}, {
                    60.68010330200195, 315.86641693115234`}, {
                    120.86710357666016`, 350.61541748046875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    278.3727111816406, 281.2159118652344}, {
                    278.43971118330956`, 350.74790954589844`}, {
                    338.5597114562988, 315.9649124145508}, {278.3727111816406,
                     281.2159118652344}}}]}}, {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    ImageSize -> {Automatic, 35}}], 
                    StyleBox[
                    "\"PeterBurbery/FileUtilities\"", FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], "OEM6eJy1kUFLAzEQhdm6iFAR9Cf0BzR49diKKBQsSYsHKZJNJz\
Q1uxMyE+L+exNURDz3NofvzXvzxjZ0IXVe4AeQbehcYp1tS+3KEasrCYQpGnjujmBYNa/\
2jK6fBoYYIrBmh0Pl/yunS49p/yub0HQDffCaoWKTb+\
xtdmAOdCdEznme0duoe1Olc4O9wO4ouhQ7iOOtuIfgcYT9TyYSa208sFhDybP4wsSD87Bl5x07oJna\
nXS/unwcA0TvhvetXKlmV5r4c/lp7WuNMnmgGwW+2L04PiyxfGdgonYTE5RIn3v6sMw="}, 
                    "ClickToCopyTemplate"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}], "Grid"], FontColor -> 
                   GrayLevel[0.5], FontSize -> 12, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> GrayLevel[
                    Rational[239, 255]]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {Automatic, Fit}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {1, {}, 1}, "Rows" -> {1, {}, 2}}], "Grid"], 
              ImageMargins -> 0]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[
         TrueQ[
          CurrentValue[
           EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]], 
        Alignment -> Automatic, ImageSize -> Automatic, ImageMargins -> 0, 
        BaseStyle -> {}, DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
        Baseline], Deployed -> False, StripOnInput -> False], 
      OpenerView[{
        Grid[{{
           Style[
            Dynamic[
             DateString[
              TimeZoneConvert[
               DateObject[
               3.8950041997966799`17.343082919447752*^9, TimeZone -> 0]], {
              "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short", 
               ":", "Minute", " ", "AMPMLowerCase"}], SingleEvaluation -> 
             True, Evaluator -> "System"], FontSlant -> Italic, FontColor -> 
            GrayLevel[0.5], FontSize -> 0.9 Inherited], "   ", 
           Item[
            Style[
             Grid[{{"Published to the cloud", 
                Hyperlink[
                "  View \[RightGuillemet]", 
                 "https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Paclet/PeterBurbery/FileUtilities", Alignment -> {Automatic, Baseline}, 
                 BaselinePosition -> Baseline]}}, Spacings -> 0.25, 
              Alignment -> {Automatic, Baseline}], LineBreakWithin -> 
             Automatic, LineIndent -> 0], ItemSize -> Fit], 
           Item[
            Style[
             RawBoxes[
              TemplateBox[{
                RowBox[{"ResourceObject", "[", 
                  ButtonBox[
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.0025], {
                    FaceForm[{
                    RGBColor[
                    0.9607843137254902, 0.5058823529411764, 
                    0.19607843137254902`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.660200119018555`}, {205., 
                    212.11320304870605`}, {246.01799774169922`, 
                    235.79520988464355`}, {369.0710144042969, 
                    306.8401927947998}, {369.0710144042969, 
                    117.38719749450684`}, {205., 22.660200119018555`}}, {{
                    30.928985595703125`, 306.8401927947998}, {
                    153.98200225830078`, 235.79520988464355`}, {195., 
                    212.11320304870605`}, {195., 22.660200119018555`}, {
                    30.928985595703125`, 117.38719749450684`}, {
                    30.928985595703125`, 306.8401927947998}}, {{200., 
                    410.22620964050293`}, {364.0710144042969, 
                    315.5001964569092}, {241.01799774169922`, 
                    244.45519828796387`}, {200., 220.77320671081543`}, {
                    158.98200225830078`, 244.45519828796387`}, {
                    35.928985595703125`, 315.5001964569092}, {200., 
                    410.22620964050293`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYB0n8ffYgewSEAmhO9aBaJ/1cmB+XqT
gsF8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYg+9+8dhH/prQmI9ptyBYV/jmEH
Cj+CeUEMMr9iq24MsnkV3Eeike2b8aQrGtk9DSrhyiA6e88JMD/BvUgJbG/S
EzBfQYpBCaKeIROZv2muNDK/YaqzeSayflj4wMyHhR/M/oDHC8uR3fdAaWM5
svthfJj/YHyY/2F8WPjAzIOFH0p8AQA7u3Ea
                    "]}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{43., 198.67381286621094`}, {107.71399688720703`, 
                    161.3118133544922}, {107.71399688720703`, 
                    86.58680725097656}, {43., 123.94882202148438`}, {43., 
                    198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.3137254901960784, 0.4549019607843137, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{182.77679443359375`, 198.67381286621094`}, {
                    182.77679443359375`, 123.94882202148438`}, {
                    118.06279754638672`, 86.58680725097656}, {
                    118.06279754638672`, 161.3118133544922}, {
                    182.77679443359375`, 198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7803921568627451, 0.8627450980392157, 
                    0.9490196078431372], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{112.8884048461914, 244.9990997314453}, {
                    177.60240173339844`, 207.63610076904297`}, {
                    112.8884048461914, 170.27410888671875`}, {
                    48.174407958984375`, 207.63610076904297`}, {
                    112.8884048461914, 244.9990997314453}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{130.02911376953125`, 350.11590576171875`}, {
                    194.80210876464844`, 312.7189064025879}, {
                    194.80210876464844`, 237.92591094970703`}, {
                    130.02911376953125`, 275.32291412353516`}, {
                    130.02911376953125`, 350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.4627450980392157, 0.3607843137254902, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{269.9334716796875, 350.11590576171875`}, {
                    269.9334716796875, 275.32291412353516`}, {
                    205.1604766845703, 237.92591094970703`}, {
                    205.1604766845703, 312.7189064025879}, {269.9334716796875,
                     350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8862745098039215, 0.803921568627451, 
                    0.9529411764705882], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{199.98130798339844`, 396.48345947265625`}, {
                    264.7543029785156, 359.0864601135254}, {
                    199.98130798339844`, 321.69046783447266`}, {
                    135.20831298828125`, 359.0864601135254}, {
                    199.98130798339844`, 396.48345947265625`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{217.61199951171875`, 199.13890075683594`}, {
                    281.8990020751953, 162.0229034423828}, {281.8990020751953,
                     87.7908935546875}, {217.61199951171875`, 
                    124.90690612792969`}, {217.61199951171875`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.43137254901960786`, 0.6039215686274509, 
                    0.34509803921568627`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{356.46661376953125`, 199.13890075683594`}, {
                    356.46661376953125`, 124.90690612792969`}, {
                    292.1796112060547, 87.7908935546875}, {292.1796112060547, 
                    162.0229034423828}, {356.46661376953125`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[0.8549019607843137, 0.9450980392156862, 0.8], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{287.039306640625, 245.15859985351562`}, {
                    351.32630920410156`, 208.0426025390625}, {
                    287.039306640625, 170.92660522460938`}, {
                    222.75230407714844`, 208.0426025390625}, {
                    287.039306640625, 245.15859985351562`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    356.46649169921875`, 215.76849365234375`}, {
                    296.2834930419922, 250.5924949645996}, {
                    356.46649169921875`, 285.26649475097656`}, {
                    356.46649169921875`, 215.76849365234375`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    217.61199951171875`, 114.06449890136719`}, {
                    277.7949981689453, 79.24049758911133}, {
                    217.61199951171875`, 44.566497802734375`}, {
                    217.61199951171875`, 114.06449890136719`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    122.17269897460938`, 78.36309814453125}, {
                    182.42269897460938`, 113.07109832763672`}, {
                    182.35969924926758`, 43.614097595214844`}, {
                    122.17269897460938`, 78.36309814453125}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    103.52159881591797`, 249.46669006347656`}, {
                    43.27159881591797, 214.7586898803711}, {
                    43.334598541259766`, 284.21569061279297`}, {
                    103.52159881591797`, 249.46669006347656`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    120.86710357666016`, 350.61541748046875`}, {
                    120.80010357499123`, 281.0834197998047}, {
                    60.68010330200195, 315.86641693115234`}, {
                    120.86710357666016`, 350.61541748046875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    278.3727111816406, 281.2159118652344}, {
                    278.43971118330956`, 350.74790954589844`}, {
                    338.5597114562988, 315.9649124145508}, {278.3727111816406,
                     281.2159118652344}}}]}}, {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    ImageSize -> {Automatic, 35}}], 
                    StyleBox[
                    "\"PeterBurbery/FileUtilities\"", FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                   ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                   Alignment -> Left, 
                   Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                   BaseStyle -> {Deployed -> False}, 
                   DefaultBaseStyle -> {Background -> None}, BaselinePosition -> 
                   Baseline, Method -> "Preemptive"], "]"}], 
                "OEM6eJy1kUFLAzEQhdm6iFAR9Cf0BzR49diKKBQsSYsHKZJNJzQ1uxMyE+L+\
exNURDz3NofvzXvzxjZ0IXVe4AeQbehcYp1tS+3KEasrCYQpGnjujmBYNa/2jK6fBoYYIrBmh0Pl/\
yunS49p/yub0HQDffCaoWKTb+\
xtdmAOdCdEznme0duoe1Olc4O9wO4ouhQ7iOOtuIfgcYT9TyYSa208sFhDybP4wsSD87Bl5x07oJna\
nXS/unwcA0TvhvetXKlmV5r4c/lp7WuNMnmgGwW+2L04PiyxfGdgonYTE5RIn3v6sMw="}, 
               "ClickToCopyTemplate"]], LineBreakWithin -> Automatic, 
             LineIndent -> 0], ItemSize -> Fit], "", 
           MouseAppearance[
            Button[
             MouseAppearance[
              Mouseover[
               Graphics[{
                 GrayLevel[
                  Rational[64, 85]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], 
               Graphics[{
                 GrayLevel[
                  Rational[128, 255]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]], "LinkHand"], 
             
             With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
               EvaluationNotebook[]}, 
              CurrentValue[
               DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                DockedCells] = If[
                TrueQ[
                 MemberQ[
                  CurrentValue["ModifierKeys"], "Control"]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Cell[
                  Blank[], "StripeCell", 
                  BlankNullSequence[]]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Condition[
                  Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   Blank[Cell]], 
                  Not[
                   FreeQ[
                   DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "e59fa65b-a1b7-4af0-b472-8cfdf5b1740c"]]]]]], Appearance -> 
             None, BoxID -> "e59fa65b-a1b7-4af0-b472-8cfdf5b1740c"], 
            "LinkHand"]}}, Alignment -> {Left, Baseline}], 
        Grid[{{"", 
           Style[
            Grid[{{"\[FilledVerySmallSquare]", "Cloud object:", 
               RawBoxes[
                TemplateBox[{
                  RowBox[{"CloudObject", "[", 
                    
                    TemplateBox[{
                    "\"https://\[Ellipsis]/burbery1/DeployedResources/Paclet/\
PeterBurbery/FileUtilities\"", 
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Paclet/PeterBurbery/FileUtilities"}, "HyperlinkURL"], "]"}],
                   "OEM6eJy1kc1KAzEQx9m6iFAv+\
gh9gAavHlsRhYIlafEgRbLphKbO7oTMhLhvbxa9+AC9Dr+Z/8f4hm+\
0LSv6BvZXfPc6CKSYQKwEGurYN3ytaQJ8y+0msJj5Gikf37ozODHNh5/xfAd9RCswYbM/\
7HNxEon8qFQpZVkIfbK9m1aXjnpF3Vl1OXWQxgf1BBFphKMGppwcsNpahyBqC9XP6hdTzwFhLwGDBO\
CFOVz0vrl9GSMkDMPXXm9Mc6hN/Et+WfmpRp0R+N4AVrn3IKc11e8MwtzuUoYfAy+jrg=="}, 
                 "ClickToCopyTemplate"]]}, {
              "\[FilledVerySmallSquare]", "Visit web page:", 
               Hyperlink[
                RawBoxes[
                 TagBox[
                  
                  RowBox[{
                   "\"https://www.wolfr\"", "\[Ellipsis]", 
                    "\"ery/FileUtilities\""}], Short[#, 0.75]& ]], 
                "https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Paclet/PeterBurbery/FileUtilities"]}, {
              "\[FilledVerySmallSquare]", "Resource object:", 
               RawBoxes[
                TemplateBox[{
                  RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.0025], {
                    FaceForm[{
                    RGBColor[
                    0.9607843137254902, 0.5058823529411764, 
                    0.19607843137254902`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.660200119018555`}, {205., 
                    212.11320304870605`}, {246.01799774169922`, 
                    235.79520988464355`}, {369.0710144042969, 
                    306.8401927947998}, {369.0710144042969, 
                    117.38719749450684`}, {205., 22.660200119018555`}}, {{
                    30.928985595703125`, 306.8401927947998}, {
                    153.98200225830078`, 235.79520988464355`}, {195., 
                    212.11320304870605`}, {195., 22.660200119018555`}, {
                    30.928985595703125`, 117.38719749450684`}, {
                    30.928985595703125`, 306.8401927947998}}, {{200., 
                    410.22620964050293`}, {364.0710144042969, 
                    315.5001964569092}, {241.01799774169922`, 
                    244.45519828796387`}, {200., 220.77320671081543`}, {
                    158.98200225830078`, 244.45519828796387`}, {
                    35.928985595703125`, 315.5001964569092}, {200., 
                    410.22620964050293`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYB0n8ffYgewSEAmhO9aBaJ/1cmB+XqT
gsF8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYg+9+8dhH/prQmI9ptyBYV/jmEH
Cj+CeUEMMr9iq24MsnkV3Eeike2b8aQrGtk9DSrhyiA6e88JMD/BvUgJbG/S
EzBfQYpBCaKeIROZv2muNDK/YaqzeSayflj4wMyHhR/M/oDHC8uR3fdAaWM5
svthfJj/YHyY/2F8WPjAzIOFH0p8AQA7u3Ea
                    "]}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{43., 198.67381286621094`}, {107.71399688720703`, 
                    161.3118133544922}, {107.71399688720703`, 
                    86.58680725097656}, {43., 123.94882202148438`}, {43., 
                    198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.3137254901960784, 0.4549019607843137, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{182.77679443359375`, 198.67381286621094`}, {
                    182.77679443359375`, 123.94882202148438`}, {
                    118.06279754638672`, 86.58680725097656}, {
                    118.06279754638672`, 161.3118133544922}, {
                    182.77679443359375`, 198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7803921568627451, 0.8627450980392157, 
                    0.9490196078431372], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{112.8884048461914, 244.9990997314453}, {
                    177.60240173339844`, 207.63610076904297`}, {
                    112.8884048461914, 170.27410888671875`}, {
                    48.174407958984375`, 207.63610076904297`}, {
                    112.8884048461914, 244.9990997314453}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{130.02911376953125`, 350.11590576171875`}, {
                    194.80210876464844`, 312.7189064025879}, {
                    194.80210876464844`, 237.92591094970703`}, {
                    130.02911376953125`, 275.32291412353516`}, {
                    130.02911376953125`, 350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.4627450980392157, 0.3607843137254902, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{269.9334716796875, 350.11590576171875`}, {
                    269.9334716796875, 275.32291412353516`}, {
                    205.1604766845703, 237.92591094970703`}, {
                    205.1604766845703, 312.7189064025879}, {269.9334716796875,
                     350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8862745098039215, 0.803921568627451, 
                    0.9529411764705882], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{199.98130798339844`, 396.48345947265625`}, {
                    264.7543029785156, 359.0864601135254}, {
                    199.98130798339844`, 321.69046783447266`}, {
                    135.20831298828125`, 359.0864601135254}, {
                    199.98130798339844`, 396.48345947265625`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{217.61199951171875`, 199.13890075683594`}, {
                    281.8990020751953, 162.0229034423828}, {281.8990020751953,
                     87.7908935546875}, {217.61199951171875`, 
                    124.90690612792969`}, {217.61199951171875`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.43137254901960786`, 0.6039215686274509, 
                    0.34509803921568627`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{356.46661376953125`, 199.13890075683594`}, {
                    356.46661376953125`, 124.90690612792969`}, {
                    292.1796112060547, 87.7908935546875}, {292.1796112060547, 
                    162.0229034423828}, {356.46661376953125`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[0.8549019607843137, 0.9450980392156862, 0.8], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{287.039306640625, 245.15859985351562`}, {
                    351.32630920410156`, 208.0426025390625}, {
                    287.039306640625, 170.92660522460938`}, {
                    222.75230407714844`, 208.0426025390625}, {
                    287.039306640625, 245.15859985351562`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    356.46649169921875`, 215.76849365234375`}, {
                    296.2834930419922, 250.5924949645996}, {
                    356.46649169921875`, 285.26649475097656`}, {
                    356.46649169921875`, 215.76849365234375`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    217.61199951171875`, 114.06449890136719`}, {
                    277.7949981689453, 79.24049758911133}, {
                    217.61199951171875`, 44.566497802734375`}, {
                    217.61199951171875`, 114.06449890136719`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    122.17269897460938`, 78.36309814453125}, {
                    182.42269897460938`, 113.07109832763672`}, {
                    182.35969924926758`, 43.614097595214844`}, {
                    122.17269897460938`, 78.36309814453125}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    103.52159881591797`, 249.46669006347656`}, {
                    43.27159881591797, 214.7586898803711}, {
                    43.334598541259766`, 284.21569061279297`}, {
                    103.52159881591797`, 249.46669006347656`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    120.86710357666016`, 350.61541748046875`}, {
                    120.80010357499123`, 281.0834197998047}, {
                    60.68010330200195, 315.86641693115234`}, {
                    120.86710357666016`, 350.61541748046875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    278.3727111816406, 281.2159118652344}, {
                    278.43971118330956`, 350.74790954589844`}, {
                    338.5597114562988, 315.9649124145508}, {278.3727111816406,
                     281.2159118652344}}}]}}, {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    ImageSize -> {Automatic, 35}}], 
                    StyleBox[
                    "\"PeterBurbery/FileUtilities\"", FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], "OEM6eJy1kUFLAzEQhdm6iFAR9Cf0BzR49diKKBQsSYsHKZJNJz\
Q1uxMyE+L+exNURDz3NofvzXvzxjZ0IXVe4AeQbehcYp1tS+3KEasrCYQpGnjujmBYNa/\
2jK6fBoYYIrBmh0Pl/yunS49p/yub0HQDffCaoWKTb+\
xtdmAOdCdEznme0duoe1Olc4O9wO4ouhQ7iOOtuIfgcYT9TyYSa208sFhDybP4wsSD87Bl5x07oJna\
nXS/unwcA0TvhvetXKlmV5r4c/lp7WuNMnmgGwW+2L04PiyxfGdgonYTE5RIn3v6sMw="}, 
                 "ClickToCopyTemplate"]]}}, Alignment -> Left, 
             ItemSize -> {{Automatic, Automatic, Fit}, Automatic}], FontColor -> 
            GrayLevel[0.5], FontSize -> 12]}}, 
         ItemSize -> {{Automatic, Fit}, Automatic}, Alignment -> Left, 
         Dividers -> {None, {-1 -> GrayLevel[
              Rational[239, 255]]}}, Spacings -> {{1, {}, 1}, {1, {}, 2}}]}, 
       Dynamic[
        CurrentValue[
         EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]]], "Text", 
     FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> False]], 
   "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     InterpretationBox[
      StyleBox[
       PaneSelectorBox[{False -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.8950043000902731`17.343082930630526*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                   TemplateBox[{
                    ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"PeterBurbery__FileUtilities-0.0.1.paclet\"", 
                    True -> StyleBox[
                    "\"PeterBurbery__FileUtilities-0.0.1.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File[
                    "C:\\Users\\Peter\\OneDrive - Marshall University\\GitHub\
\\file-paclet\\FileUtilities\\FileUtilities\\build\\"]], Appearance -> None, 
                    BaseStyle -> "Hyperlink", Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    "OEM6eJxljUEPwVAQhPOkEQk/oum9DVc3JTgQ0urJSvPKPjZ5St5u0T/\
i99JwEbeZ+\
SYzRnEn0ff48kA2itvJpdHGY29BLKk3JYup2poWdzd4vlot2HD15U8VjIcAGaNjgDUKOoBViRNHN/\
RDf6kdn7S1fla+A8ckNcCMZF4VAOa9HV713qIANEeZkCUh5D9bVGQP34O4cgW6Os9/OmE/\
6keD6DMXpL0GjtyxOmMpqdq9ANs6UuU="}, "ClickToCopyTemplate"], LineBreakWithin -> 
                   Automatic, LineIndent -> 0, StripOnInput -> False], 
                  ItemSize -> Fit, StripOnInput -> False], "", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "d5d41943-0e6d-4005-a1f5-b56b2b2b9861"]]]]]], Appearance -> 
                   None, BoxID -> "d5d41943-0e6d-4005-a1f5-b56b2b2b9861", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
           AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.8950043000902731`17.343082930630526*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                   TemplateBox[{
                    ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> "\"PeterBurbery__FileUtilities-0.0.1.paclet\"", 
                    True -> StyleBox[
                    "\"PeterBurbery__FileUtilities-0.0.1.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File[
                    "C:\\Users\\Peter\\OneDrive - Marshall University\\GitHub\
\\file-paclet\\FileUtilities\\FileUtilities\\build\\"]], Appearance -> None, 
                    BaseStyle -> "Hyperlink", Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    
                    "OEM6eJxljUEPwVAQhPOkEQk/oum9DVc3JTgQ0urJSvPKPjZ5St5u0T/\
i99JwEbeZ+\
SYzRnEn0ff48kA2itvJpdHGY29BLKk3JYup2poWdzd4vlot2HD15U8VjIcAGaNjgDUKOoBViRNHN/\
RDf6kdn7S1fla+A8ckNcCMZF4VAOa9HV713qIANEeZkCUh5D9bVGQP34O4cgW6Os9/OmE/\
6keD6DMXpL0GjtyxOmMpqdq9ANs6UuU="}, "ClickToCopyTemplate"], LineBreakWithin -> 
                   Automatic, LineIndent -> 0, StripOnInput -> False], 
                  ItemSize -> Fit, StripOnInput -> False], "", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "d5d41943-0e6d-4005-a1f5-b56b2b2b9861"]]]]]], Appearance -> 
                   None, BoxID -> "d5d41943-0e6d-4005-a1f5-b56b2b2b9861", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}, {"", 
             PaneBox[
              TagBox[
               GridBox[{{"\"\"", 
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"\[FilledVerySmallSquare]\"", "\"Build result: \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"C:\\\\Users\\\\Peter\\\\OneDrive - Marshall University\
\\\\GitHub\\\\file-paclet\\\\FileUtilities\\\\FileUtilities\\\\build\\\\\
PeterBurbery__FileUtilities-0.0.1.paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"10.1605672`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"C:\\\\Users\\\\Peter\\\\OneDrive - Marshall University\
\\\\GitHub\\\\file-paclet\\\\FileUtilities\\\\FileUtilities\\\\build\\\\\
PeterBurbery__FileUtilities-0.0.1.paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"10.1605672`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"BuildPacletDirectory\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"File", "[", 
                    
                    TemplateBox[{
                    "\"C:\\\\Users\\\\Peter\\\\OneDrive - Marshall University\
\\\\GitHub\\\\file-paclet\\\\FileUtilities\\\\FileUtilities\\\\build\\\\\
PeterBurbery__FileUtilities\""}, "FileArgument"], "]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|"File" -> 
                    File["Kernel\\BackupFile.wl"], "Hash" -> 
                    "84f8c408582f4f07b26ea14d1c87602d984ac02c60a7576b261c2ccd4\
b716734"|>, <|"File" -> File["Kernel\\CreateRandomFile.wl"], "Hash" -> 
                    "5d2e85fee9d5b40dd028cefffdfafa522cb7ff1b31a3bc048cb33a4ef\
4b39447"|>, <|"File" -> File["Kernel\\DirectorySize.wl"], "Hash" -> 
                    "04fafc00d9537d8c1e379341472dcc3fe917d17ce4313002e808a7395\
f07d4c9"|>, <|"File" -> File["Kernel\\FileNameEdit.wl"], "Hash" -> 
                    "60b6803dd998f6528553af4f2aefe8fa43b3309168831c55838b4106d\
c563f6a"|>, <|"File" -> File["Kernel\\FileQ.wl"], "Hash" -> 
                    "574d54425131db8c7cef8d527a3e5903a3f11040b9dd8189db5c3a1ce\
6743278"|>, <|"File" -> File["Kernel\\FileTreePicker.wl"], "Hash" -> 
                    "cf8bea296bb5622009464e4a22e5324bee255824a3c6de03e8d175d70\
8b2ac18"|>, <|"File" -> File["Kernel\\FileUtilities.wl"], "Hash" -> 
                    "06d2a5d9193d7c6bd8c47a522f3382ebb91ba7dfb5809a40c3e4624ef\
f560577"|>, <|"File" -> File["Kernel\\ImageRead.wl"], "Hash" -> 
                    "c96a3ed613934b1a14dcadfecc8dd5d70dea7e1ba62c88cc4f1e512ea\
d6673a1"|>, <|"File" -> File["Kernel\\ReadPNG.wl"], "Hash" -> 
                    "d59441457fb99ae3aad0d2218d1b148e74942d07ca9d41bcad41cac1a\
4224c07"|>, <|"File" -> File["Kernel\\RelativePath.wl"], "Hash" -> 
                    "7727b2d319e9a1ee066f809e0083c6c499ae05151bdac576599e99558\
53c6806"|>, <|"File" -> 
                    File["Documentation\\English\\Guides\\FileUtilities.nb"], 
                    "Hash" -> 
                    "5031cd21b7968dced555ebde2d90346ceacc76fc5815fd2cab23b9c8c\
3899863"|>, <|"File" -> 
                    File["Documentation\\English\\ReferencePages\\Symbols\\\
SayHello.nb"], "Hash" -> 
                    "3ff376ec6d85f2daae853dc9bd86a44d21727fb992995d540fa1b7139\
d46404a"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[6]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 12, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 12], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[6]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 12, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 12], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 
                    2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\BackupFile.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "84f8c408582f4f07b26ea14d1c87602d984ac02c60a7576b261c2ccd4\
b716734", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\CreateRandomFile.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "5d2e85fee9d5b40dd028cefffdfafa522cb7ff1b31a3bc048cb33a4ef\
4b39447", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\DirectorySize.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "04fafc00d9537d8c1e379341472dcc3fe917d17ce4313002e808a7395\
f07d4c9", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\FileNameEdit.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "60b6803dd998f6528553af4f2aefe8fa43b3309168831c55838b4106d\
c563f6a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\FileQ.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "574d54425131db8c7cef8d527a3e5903a3f11040b9dd8189db5c3a1ce\
6743278", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\FileTreePicker.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "cf8bea296bb5622009464e4a22e5324bee255824a3c6de03e8d175d70\
8b2ac18", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\FileUtilities.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "06d2a5d9193d7c6bd8c47a522f3382ebb91ba7dfb5809a40c3e4624ef\
f560577", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\ImageRead.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "c96a3ed613934b1a14dcadfecc8dd5d70dea7e1ba62c88cc4f1e512ea\
d6673a1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\ReadPNG.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "d59441457fb99ae3aad0d2218d1b148e74942d07ca9d41bcad41cac1a\
4224c07", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\RelativePath.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "7727b2d319e9a1ee066f809e0083c6c499ae05151bdac576599e99558\
53c6806", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Documentation\\English\\Guides\\FileUtilities.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "5031cd21b7968dced555ebde2d90346ceacc76fc5815fd2cab23b9c8c\
3899863", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation\\English\\ReferencePages\\Symbols\\\
SayHello.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "3ff376ec6d85f2daae853dc9bd86a44d21727fb992995d540fa1b7139\
d46404a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}}, BaseStyle -> {
                    ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem["Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem["Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> GrayLevel[
                    0.7490196078431373], Spacings -> {0, 0}, Alignment -> 
                    Left, BaseStyle -> {FontFamily -> "Source Sans Pro", 
                    FontSize -> 14, FontWeight -> Plain}], LineBreakWithin -> 
                    False, ContextMenu -> {}, NumberMarks -> False, 
                    ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], ButtonFunction :> (
                    Typeset`open$$ = True), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.0009007`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], ButtonFunction :> (
                    Typeset`open$$ = False), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.0009007`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"Indeterminate", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"TargetWolframVersionNumber\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["13.1`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Short[#, 0.75]& ], 
                    "OEM6eJztPUtz20h6pvjQw7Ilz2geO0lVFEabSjahA5Dga2qrbIqSbGctW\
1bLnk2ttsYNoCGhDAIMGpTNTSWVVJJDKrWHzW7ltLW1h/yPHPILctrNIanK7iGVS+\
aY3CZfNx4EQFIGSNkWZfIgikB3f1/39+7Xp2Xo0iF+\
uW29IlTL01sPTIfYXZs42NEtEx5rGVo4tFgBLUdzD3XqaAu0cIRP4AlaRD1FIZSi66jX6WC7f59gFW\
W+p2Xp+k7fxB1d2bfUnkFY9YWgehYRh9486ncJJc5zq0vMrS2a38MGJf7bDf8t6chERYAO2dpC+\
UNovw9lrh+RTteAhy6GbsNZunaATYKIQRTHsqMwc4eAhg8kTxfv2boarex/L7JG2KsCXd7uOY4/\
DCtej9x2P9vbPbD1M0Dh+\
Z5tmc6uqR4SavVshaDlvd1t3engLkXr3sBApcfQT2Iz5BkqO8TAfaLSmy6IvZ6psBEfNzq5I7tHgm6\
stLpdgm1swuDnHlnm4M3yNqYEOX2DaNdifV/\
ePcNGD8PI0OVWz7E6QGIleFvYJ86ppaKVA5vA2Dr6WajRlqGfmB1iOv6A0kKbME7xvwdFH3TwCUH6D\
wiM2KI3YkGtCNz8kd4h1L7GP6t3gydQcbXds21o+BkgTNCNPRjfNu7eJ/\
rJKUMhf2C9BJgZutGSqWX0HBIuT2/s4xNT13SF83D7ayD30p6NO5yoWbrEh4exb774q5/+uAgNLu/\
oNvAM6zO8P7y33bYMy7Y/4Z9f3LE/5J9f37G/yz+/vNP+RtDjVeTYevex+\
cDs9pwBF7svb7YBdUDsAKuqbp7EX69wtDg+MTqu8jf72D7RTRpmY/bdvta+Fv9/PC6FAbP77WSCb1+\
2s3HZjguZVxWtFQ+wYhCnZSunMF5FlCt+vllEK9DODtFwz3DQRx7PP3BIp2WalqtLUParH/48pDv+\
MVNsf358/JQCFx0fHxDgouPjxybZAakim6VN6Ds9xYax+dSEBzbVnf7x8T3dud+Tj4813SClLkfk+\
HgPfjx1dEN3dEKHfso93VA9ANs9WyZ2/8svI2VKwm3htnjbba4Y6DKG/\
jQjdb14BF03GE9PPEoALdJ2zm9bBIxrQrVWLz9H2SItokVKFMtUKVouIve/\
Ilp60sOmAwM3YDjUNx38as+yOzQLqjnaWb/UuscvQ2Lvl0CLICC9jklD4+\
NKeO4h0QbFctDf4TIjtM8KewQqEYgUl5E1DxmGIdcriXEZhpMcIR8qAq5ggpsYanshPbCQ0s7FlPYG\
OrVeMqk2T9qnoPEVpnTjQ3T9UQ+spA0S82Lo3U2wUqB/\
QL3plGnD7IDKvGnOD64Gild9w2yQPbK6l5cB1hlNDN0kBxaoHtcyuwTOtDNBKdcsvxN3om1YdGJ3Im\
6H5v7E3J+YwJ8ozP2JuT8x3p+YorMfF7fZOLu84UqTZfcn7/dQFItyjGYsVh0dTaK/\
uzT8VESr7HfLPukxnYky37+wYV73pG8fg4Ij1Jl8gPMhFvP/\
K4yYBViOzgKUmGFCfQptP38ECBCV6ZbngNUL0Pu+\
Sdyi7gRA64MSuv7AhFHBxg52cCtTQnk2NlRbddttLZRcyrJR4RTe+\
A6xTWIcb0OTvS57dPulAYXuY3qK7jYkraFIQqPaKGuSJtTlco1gUVJFpVGvCWW12ZCwIpSVmoDr1Xo\
NXotKWVFUSa6LtXpFGob3mQevbRPA+RCbqtWJQ62qZdKoaoQ01aosCaoqlBsK0TRN1bCGq+\
WyItc1TZQrIq7IiiA1FLlSwRLRJLnSlKT6MNRPPKiBqDCTGQYpSNC0Ighqs1qpqw1FJJV6syKJUr2s\
KkpFI02xrop1hUgVsSIIgJ/\
QwPVKswqDokpKcxjkxx5I9uMRGJddVXfCEGuCXGsIFVVtNhtarVpuVKsVDINcxkQjDQ1LFeiU0BRrj\
UZFVKrVRqUhS6JQU5VqraLV8DDEtRDEJ5HxrEtqVZLKVbEiqnJDgW5oDbVaruMKqTaFCq5ooihIgtx\
U1YbYaKpyValgUSG1ulQp1xvDoD4NgToCD+\
ZAV14QOwxT0RoyweVmTZartXJZEJpSTSISLpdJtVKWZELK0KeyhCtKTSVChTRgeKtqXWjIZayII2B+\
EoIZCH+EhjW1jKtqU2xW1LpSk4GMUp2xi1apNMpElpuijOuqJlcbQhNLglIhUq0MbKNVQbfXR7DNhx\
5I7mWxybVID5s1GD+\
1JlaAUWSRiYWCVY0oSkNVWU9UgusEQNbKSqOhKJImkqpYhlZqIBpYHAZ3ywPHIB08uhcGplaBsUWpW\
tfkZhOTCsaqoJbLIoyaLEoNUpeaUlkV6gpuqpIoAyKSqMA4YqlclhRhRN8+\
DoCB1gMVfYCd0zDEer0M4q5WxCZpYpEQoVbTYNyIIDSAZIrE0BCqYlWUVayA7FebULAJNK3C64ZQG4\
ZY2rEUrqK5hjzeNU8MnZ4e3+vpKmj6KFlNecC9AvC/\
WhblerPWUBWiVqtVIqsEtI9QkWoKwYpSr2lKtSFWNbWsYLlckZtKQ6k0QLRqlWFEGqMROQTBA7dWga\
E4AYRQvyNbBnzj/\
n1iGFYYp4qmVeo1AqwLeqqsYgz6qqIqTeC5GpYkwBZGj5GqDEMCsidoGPAHTlFBCgQJl9DNFjT5cpd\
N33JXlYdKJbTqqW90irvMPf2dkAHwtD5SIEp5zqaSic2LtbIl36TRLDTL/0BnN8fV/\
Q7p74DR6rcX25kRVd3RGvOK9R8ivBz9rXGtP9Q7OhgqQGAs8m5E6vfxm+fg6YYkvGCG/\
va4gi0Ic3ghO8PDm4d3LxDBRC2NHWvwFFwihbjw9f1of9tjtWS95p3+y7+\
6C6XXXRNH1AempgMv9SEgXwgiwoCQ7dXRZQfTD6xQZkwhL9YdeBsMRbaqEUK1RamlQP218DPAmBbc+\
RrA6Vbo1TNul2MPoWRPCeIwzyd1x2UwVzsEwB/mcZDbq8DbKAcROG5dK6FlINERRH7EaW+\
AALqk9x6sgAM1F8W5KM6AKOZmUQaZ0zHowq0dnXb5RB2Qqm31TIcV2gieuqzgvgAarrIYJ1xyjT2IF\
VpGlu0wMHQA5yZ75s1BWWb4xX1dVYnJQjm6j7s096hngEe08rSrQrDCutLOUCFZTGb1nG7PebCzteU\
Hc3+YrGIXkIVK16KRYMLKZwcW3driU7Bpqp1OVu0EHgKqWXojEsiGJtB4a2Ki1sD1AjXqvmPB+\
g7pGlYfIue8O8G6SHP81Y2hOeQcj/Phm80lw/fKIA5ns437Vo8S64zYbLbxno27p7pCh+\
drg6nUduGcaW5ADCnYIKpd4Z9/+edIqwORWIZn/YfkjBheyV/\
fYXO0B5bRP4F2QisZ3rc7zco1xNIhRx4b7a/5b3emtv31+\
aWSNJSgdiJYF9dQsq5NSyJ4mIwLt5ChK2wm+\
AWf8r6dqJJhAbz7lqFOoByGDDvNgbGlaMl3DdzQAOU5G4+a+Y9PV7MwB/TWqGWHVV5r3Dx33l3+4v/\
n2vnBNCabHDqxQaWqUcbW+Od/\
7py3dMHXuuiST6XXiuvq7hlUv49N1eALHWu834MVmIhEe3Z8wdMRwU8PG76SwdYWIusM//\
Aj9vnXO7bIP/95x/4T/vnvO2jpoW6+YLBjC0eB+VvloNsGm+9Qub5ceKDBoNQT0V05JcoLvocIs+\
UPsOApZ/i0Ba2QkMd63GbxrUEpgaQzVOksUzqDlNIOpRbXdyPgvlM/U1rJc/\
y88MgNeeaa6TzN5LnIvmbyPea5Zpprpsurmbw5hdnSTHxO9oprpkShTjoN5S0NBioq+\
D3XUXMddVl01GD1PgsBkcejl1tDjUSZTzN7ysndKZRcOwVTqZdaSS2cq5zO3W9wmamZHcOA3m9vPpR\
PGaala/vbF03Qpfgu0JEAxpNp+\
h0fs0xK7kdMRspg3v8dUNT3iG6gLjb3bKvTkq2zpPJ4zn6c2SPlwlWVyml3RM0yKd9HqRy3X2326Ji\
9qiI57Y7BWSbl+yiSY/Zzzh4Zc1dVIqfdUTvLpHwfJTK+33n26Je/qqI47Y7zWSbl+\
yiKY88DzB4hC1dVJqc9kTHLpHwfZXLceZnZo+\
PiVRXJaU8szTIp30eRHHWebPZouHRVxXHaE32zTMr3URyHz1vOHgWXr6owTnvidZZJ+\
T4K45jzyLNHxpWrKpHTngifZVK+jxKZ7rz+7FH3+lUV1GlvTJhlUr6PgjrxfRazR+\
jVqyqz094oMsuknFGZDbAbfz/\
pdX4h4Stnn5g9LXJD4wdtq9NlG293X3VtQtnlo7SRbGSVQZtHtn5yAlQs0PwXp7rCDhgtPjUp7pAnt\
JysNQNT57FHq7fCDYOD13nEEZ242/\
TbybvYHq5dnah2cNf4CApq3oH36fCanA088JN1jBFkGwj7ItjAnq65E8OSsYEU2zKMAyuQtDd5woHB\
+EJ3TuPX5iVkYug/izK3Epbf8iv4YJJJmF+LFd5KI5V+\
pXTgdPqQYM09abBFP08H7kGocjqwp7yOe38Gv/GixY8BFfaxo5ymUkahbq+2DIfYJp8PCJ+\
giB72goLpcXySluipzxq5o/dHiWphwxgMXcoql6wnZj91T/\
wqb6snlUS1aPiSGObEJNPLintfUeSGmbT6JZOyY+FbblLXjd+\
Gk0qHnuIzwm7dYaeeso8s5uMt7WHd6NnkSeKDfSo0QIkTurl0QsImc0Z06l+tEWANpm/PJiQ9A/\
K7OpiD+8eWbobOabJzjfD3se1BmHA4Uwtd+iGgiwDnlF0GlaVLzA/\
wch2suBc1sX6hPLsLf1NbGniZ+d0/7YGnPoEFdB19dG26RkK2IAv/TtdYxJqggndfvnuE+\
BpQ4oY7Nb37iig9h/BTpLVEYNxTpKFLpeZnScfEEW8j8kjrFqKCTTpW6GL+\
G0w8Rl7r7wp8bhqBT2otGa13O12n/6at5QTa1HX7Uvs8k7iYidQWlCVztTVXW++\
X2spiVX29zqLLO8Tgl2bagfri0ptecaUL8iJMPBTkRZl6cAnaBMFvSh9qEILlIm5caEptksABLbeoQ\
kw1pqpQjrndo6U0GcLeFRXQylw8352whaj7epEL2ayL4KyVHTKStVYPCUu5QTbnLHYVWCxM5rfNY16\
epDB3FaC9OV/NPl/FUmC9nqPCHoO/iJMPTOWAQT5rW93+pn8d66ZjbbYNvStb2FaHmSaT0Cd1LC/\
pmN9uQs5RABcGPmkQl9r9Cff8Y95z9vw1vU46Yx30eoJJsQsfoJGMECH8AfAWGVBeNzcfkZebbcLvw\
L8wwiejkAJQOT5vh/Ju1znpz+32W6H8hY/\
QwKr4RVfY7XB7uKMbfbSGeCbGTYRNunlgW4NFdFaI39d8M1rxC55bkOYPDKybg+I7+\
pnOLshy0yYMagRp+7TILVX/97/s81+DW6qW4vlII+\
n6BndY0UgCzvACfja2gP8murn2UDfJtk3wC7Z2qZtD+\
UrDi7Lxa8rPTWbKpmkZzeIJS1PkEtPdSfgnwTJ3aM9CMs6lxOl1n+\
nkJZ9zSnfpfX7Mqrp7TSCP5tJ1g0enIy+lT9aO0+myx1t0cYsta/\
C7DNNV96fzk9lzbylkkjWQ7Hk7EtL11vMdQ2s5Kfs70ZX/\
id1Htxp7M3cfL859TMnRYaGcjFNcVps4R0RaCebJPCZUhq4mfaNbWYZFbqK0GR+\
FKoE1tCnxXqyGXtxHn/4e0zSbprVpWOYJsTeZwgDL+PuTQI0nWT6yMbvg1dtw+pY2AkVQ+\
DCSj8TNUxzPqJJw9cSxutvY5iACU5hJaAo7+AXhzosKTUADvxuq5RV18wehnuxbTBlols5ozu+\
0fZd683Xcn0nH/R5NU2nFLdlywFH32dTLl1OgBZf3ok7c4iHpGlghCcOvDr9BOtiovLUV3+\
OqLVzajceeyr/G9jVi8wVfvIvcS32J90wDoUAbsIUR+q3E68JbQV/\
D9ZMh2w2WZEa1McnyS9BOYaRnCqHcA1OxCQ/Ipt7zmnYtPM2gptoIGdnDmHrsPVBTbNuciFTpe/\
hWt4wnDT2ZveVDb4MPlYbECfc4++3vGi7XxnW/q29Y/\
qkuaFi7vRJXOIFIjC8z1oBMqq9HTKPEpn4jJyRCEyarvMbw89BESvbIGswcDh/\
TCE0htddGzJcknQQc1atbnk37wsbdLrHdvO0r3kP31+KRBf+A67dMP95xI+\
vn3jefY2EpAn2svGSEMNqcSdOaa68Nz9lO1Ybnq/ht5LmHFjSSeiekh8kztgc/\
JSZnwa56t437E7RxGm2jcMT956CV9F63287ytu/\
jBE1N5By5rS2F1FfurW3kWAXKmiq21T3L7iSNmt6Mpx7wHNf7kwrhNT/DSDgJSbRX3qZe/Qf+\
6xQbdaOnhlbcK8qfPgWqpQv3hmZ5M7FX42dkI2DW2UrqGVGfYVvHMtQLdHN6XvDTW/\
oorO8QDfcMJ0AS+SUy9FNfd/HkJ+BAOb4Sywy0OyIGURyOVmxaeIldVTvqxQduHdZnTx1Sb/\
vYddTrdLDd55vqBvksCofWS6ZZB7PkhSN84ura60ekA4GFQ9yfvAD6jWLkaOp2TzfUQ0Khn7SIcsXP\
N4toBdr0+o4+CoENHY7MfvXDn4dgDeGBMn+\
m5emtYHRcWJGSuTjGaBH1FIiCaNBX5guhzPeg0fUIO4X647PvTe7bAUEgdgc5iE20b/\
hvCcvujrxt9nl2y0w/PlCZYP10jZ0KdQli2VGYLrU8IHm6yHgrWtn/\
XmSNsFcFYPce6D1vGKJm8bO9XZ8l92wg/K7JiMIXN9Dy3u627nRwl6J1b2Cg0mPoJ/\
e1o8LtgtjrmUpYuOOj468keIw6SEcUc0NCAjokuyOX7fy3hX3inFoqWjmwCYwt20g2wlcJNGqhTRin\
+N+j3JfIUc24J6P5WUvdw6fXVu8GT9g8m7du56bLvsGTKOHufb4SpPlJTqHcRkumltFzSLg8vbGPT0\
xd0xXOw+2vgdxL3Atz2X2JDw9j33zxVz/9cREaXPY2a5yRSJqmT/jnF3fsD/nn13fs7/LPL++\
0vzFw8Nhm2e5j84EJamloNcnTCQdYZVtP4q/PcSfDbmOYjcMrckOrcyNxKQyYfSHQQhNro+\
XiPgg80Hhi3YNKUYW2KTONtqlAdGsQ0Pqb1FUqGsQB/\
dvFC9Oj14tHgJDBeGxyvZmNtu2pRLQi3BYEoSkI9ecoWwS9vEgJxNkqhfFC7n9FtPSkh01HdwYGawX\
1YRBeMVeGZkFTRvsamDWPfENSGLhii96+5dDweOetw2u0KAfdHS4zQhmssEegoYAccZZd85CJH+1+\
PS7DcJIj5EONr02/Fmo4NkkK7Jyz6BtsddjLvn6KWQ41ttIeX3s+b3kZjAaoA9A2OpvAcQ/\
Ou1TmTXN+iC89vxU2iEShl44BhjNU+/\
ovE3LgXCv5Tqx727DoxNY9bhbm5n1u3icw79fn5n2GzPsUfb1V3Mev9E6PZxmbrscD6H7j2a/+\
5sfsz08uDN314oFtMZoTlV9bc7mx/aDo7lJyb9ixeqYzuSxkhAtE64CA+\
TEdHnMTlagXzuY3HpgqiKjd0U22yJ0tfhM4vetBXfbhF9Gaz+lgjB1Nf/\
XmGf6jGAddHrJ8XESBPrtkqH1YRC908CQu25D9ZvEIDB9xvrAMDczgM/AzAKDrNE+\
OYF6s3BafXxiSeUDyZHJsNkZM2hXn4d08vJuHd+nDu0GoEY+\
cRgQmoebRqidvLOYz4rHZeQseKPN9KB5Mb38wLMytlRJaDjxOKBy4f/a//dOP/vZnf71/\
By16vmEJrcX8tda1EroZNWns0Xrc82izh3G7HwZGYzZ70StcQh+\
OsJisuY1R9oq9uDVkLdjTNS8e8HUk+oMU3n0JfTZe1dsV/vnW3ZD7cJHrL5k/\
vyzG4EbxACswPHMrMLcCcysws1bgekiKW/kSuuH+\
btnKqX5G0N9n2p8fP6XAK8cHTCMfPzbJjg1vNkubwCb0FBvG5lNTZ8fKQXMf39Od+z35WAN1W+\
rylqL3gcd+cUXrtrzds4H1+l9+GSlREm4Lt8XbblNjjdN//Ez89+rh1t2QcdrgPXI7EyRL1vyLkf/\
iHfcK7CRvZh+bukbcOVxv6b6VKXkX4WqrLsVaCyX3VuMA/Q0vJcI2Vl70ul5W9pJ3X+\
7dhqQ1FEloVBtlTdKEulyuEZayRlQa9ZpQVpsNCStCWakJuF6t1+C1qJQVRZXkulirV6RheOfkgg+\
gTpuJfBjquFzXAchpMy0PgxyTyzeAOG0m2WGI8Vylg/\
GcMlPmMKixuRgDmNNmAhxPw3iuuQENp8x0NgxyVC6tQQ+\
nzOQ0DG44V1AAbNpMNeP5M5YLJYA4bSaOYYjpcj0MuHfKTAPDiEx8l32A0/Q3qdP10HauFqUWO/\
GzFn4G5pkWXDcLLNSt0KtnXIfFHkLJnhK4Q/\
7d9QzdwDkZAcAfmHGQ26vtDIu8vjF2j1Voo9s8HpzhePD/Acz+X8g="}, 
                    "ClickToCopyTemplate"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}], "Grid"], FontColor -> 
                   GrayLevel[0.5], FontSize -> 12, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> GrayLevel[
                    Rational[239, 255]]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {Automatic, Fit}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {1, {}, 1}, "Rows" -> {1, {}, 2}}], "Grid"], 
              ImageMargins -> 0]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[
         TrueQ[
          CurrentValue[
           EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]], 
        Alignment -> Automatic, ImageSize -> Automatic, ImageMargins -> 0, 
        BaseStyle -> {}, DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
        Baseline], Deployed -> False, StripOnInput -> False], 
      OpenerView[{
        Grid[{{
           Style[
            Dynamic[
             DateString[
              TimeZoneConvert[
               DateObject[
               3.8950043000902731`17.343082930630526*^9, TimeZone -> 0]], {
              "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short", 
               ":", "Minute", " ", "AMPMLowerCase"}], SingleEvaluation -> 
             True, Evaluator -> "System"], FontSlant -> Italic, FontColor -> 
            GrayLevel[0.5], FontSize -> 0.9 Inherited], "   ", 
           Item[
            Style[
             
             Grid[{{"Paclet build completed successfully.", ""}}, Spacings -> 
              0.25, Alignment -> {Automatic, Baseline}], LineBreakWithin -> 
             Automatic, LineIndent -> 0], ItemSize -> Fit], 
           Item[
            Style[
             RawBoxes[
              TemplateBox[{
                ButtonBox[
                 TagBox[
                  
                  PaneSelectorBox[{
                   False -> "\"PeterBurbery__FileUtilities-0.0.1.paclet\"", 
                    True -> 
                    StyleBox[
                    "\"PeterBurbery__FileUtilities-0.0.1.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                   Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                   FrameMargins -> 0], 
                  MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                 SystemOpen[
                   File[
                   "C:\\Users\\Peter\\OneDrive - Marshall \
University\\GitHub\\file-paclet\\FileUtilities\\FileUtilities\\build\\"]], 
                 Appearance -> None, BaseStyle -> "Hyperlink", Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                "OEM6eJxljUEPwVAQhPOkEQk/oum9DVc3JTgQ0urJSvPKPjZ5St5u0T/\
i99JwEbeZ+\
SYzRnEn0ff48kA2itvJpdHGY29BLKk3JYup2poWdzd4vlot2HD15U8VjIcAGaNjgDUKOoBViRNHN/\
RDf6kdn7S1fla+A8ckNcCMZF4VAOa9HV713qIANEeZkCUh5D9bVGQP34O4cgW6Os9/OmE/\
6keD6DMXpL0GjtyxOmMpqdq9ANs6UuU="}, "ClickToCopyTemplate"]], LineBreakWithin -> 
             Automatic, LineIndent -> 0], ItemSize -> Fit], "", 
           MouseAppearance[
            Button[
             MouseAppearance[
              Mouseover[
               Graphics[{
                 GrayLevel[
                  Rational[64, 85]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], 
               Graphics[{
                 GrayLevel[
                  Rational[128, 255]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]], "LinkHand"], 
             
             With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
               EvaluationNotebook[]}, 
              CurrentValue[
               DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                DockedCells] = If[
                TrueQ[
                 MemberQ[
                  CurrentValue["ModifierKeys"], "Control"]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Cell[
                  Blank[], "StripeCell", 
                  BlankNullSequence[]]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Condition[
                  Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   Blank[Cell]], 
                  Not[
                   FreeQ[
                   DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "d5d41943-0e6d-4005-a1f5-b56b2b2b9861"]]]]]], Appearance -> 
             None, BoxID -> "d5d41943-0e6d-4005-a1f5-b56b2b2b9861"], 
            "LinkHand"]}}, Alignment -> {Left, Baseline}], 
        Grid[{{"", 
           Style[
            Grid[{{"\[FilledVerySmallSquare]", "Build result: ", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"C:\\\\Users\\\\Peter\\\\OneDrive - Marshall University\
\\\\GitHub\\\\file-paclet\\\\FileUtilities\\\\FileUtilities\\\\build\\\\\
PeterBurbery__FileUtilities-0.0.1.paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"10.1605672`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"C:\\\\Users\\\\Peter\\\\OneDrive - Marshall University\
\\\\GitHub\\\\file-paclet\\\\FileUtilities\\\\FileUtilities\\\\build\\\\\
PeterBurbery__FileUtilities-0.0.1.paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"10.1605672`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"BuildPacletDirectory\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"File", "[", 
                    
                    TemplateBox[{
                    "\"C:\\\\Users\\\\Peter\\\\OneDrive - Marshall University\
\\\\GitHub\\\\file-paclet\\\\FileUtilities\\\\FileUtilities\\\\build\\\\\
PeterBurbery__FileUtilities\""}, "FileArgument"], "]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|
                    "File" -> File["Kernel\\BackupFile.wl"], "Hash" -> 
                    "84f8c408582f4f07b26ea14d1c87602d984ac02c60a7576b261c2ccd4\
b716734"|>, <|"File" -> File["Kernel\\CreateRandomFile.wl"], "Hash" -> 
                    "5d2e85fee9d5b40dd028cefffdfafa522cb7ff1b31a3bc048cb33a4ef\
4b39447"|>, <|"File" -> File["Kernel\\DirectorySize.wl"], "Hash" -> 
                    "04fafc00d9537d8c1e379341472dcc3fe917d17ce4313002e808a7395\
f07d4c9"|>, <|"File" -> File["Kernel\\FileNameEdit.wl"], "Hash" -> 
                    "60b6803dd998f6528553af4f2aefe8fa43b3309168831c55838b4106d\
c563f6a"|>, <|"File" -> File["Kernel\\FileQ.wl"], "Hash" -> 
                    "574d54425131db8c7cef8d527a3e5903a3f11040b9dd8189db5c3a1ce\
6743278"|>, <|"File" -> File["Kernel\\FileTreePicker.wl"], "Hash" -> 
                    "cf8bea296bb5622009464e4a22e5324bee255824a3c6de03e8d175d70\
8b2ac18"|>, <|"File" -> File["Kernel\\FileUtilities.wl"], "Hash" -> 
                    "06d2a5d9193d7c6bd8c47a522f3382ebb91ba7dfb5809a40c3e4624ef\
f560577"|>, <|"File" -> File["Kernel\\ImageRead.wl"], "Hash" -> 
                    "c96a3ed613934b1a14dcadfecc8dd5d70dea7e1ba62c88cc4f1e512ea\
d6673a1"|>, <|"File" -> File["Kernel\\ReadPNG.wl"], "Hash" -> 
                    "d59441457fb99ae3aad0d2218d1b148e74942d07ca9d41bcad41cac1a\
4224c07"|>, <|"File" -> File["Kernel\\RelativePath.wl"], "Hash" -> 
                    "7727b2d319e9a1ee066f809e0083c6c499ae05151bdac576599e99558\
53c6806"|>, <|"File" -> 
                    File["Documentation\\English\\Guides\\FileUtilities.nb"], 
                    "Hash" -> 
                    "5031cd21b7968dced555ebde2d90346ceacc76fc5815fd2cab23b9c8c\
3899863"|>, <|"File" -> 
                    File["Documentation\\English\\ReferencePages\\Symbols\\\
SayHello.nb"], "Hash" -> 
                    "3ff376ec6d85f2daae853dc9bd86a44d21727fb992995d540fa1b7139\
d46404a"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[6]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 12, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 12], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[6]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 12, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 12], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}]}, ImageSize -> 6, 
                    BaselinePosition -> Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\BackupFile.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "84f8c408582f4f07b26ea14d1c87602d984ac02c60a7576b261c2ccd4\
b716734", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\CreateRandomFile.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "5d2e85fee9d5b40dd028cefffdfafa522cb7ff1b31a3bc048cb33a4ef\
4b39447", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\DirectorySize.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "04fafc00d9537d8c1e379341472dcc3fe917d17ce4313002e808a7395\
f07d4c9", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\FileNameEdit.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "60b6803dd998f6528553af4f2aefe8fa43b3309168831c55838b4106d\
c563f6a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\FileQ.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "574d54425131db8c7cef8d527a3e5903a3f11040b9dd8189db5c3a1ce\
6743278", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\FileTreePicker.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "cf8bea296bb5622009464e4a22e5324bee255824a3c6de03e8d175d70\
8b2ac18", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\FileUtilities.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "06d2a5d9193d7c6bd8c47a522f3382ebb91ba7dfb5809a40c3e4624ef\
f560577", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\ImageRead.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "c96a3ed613934b1a14dcadfecc8dd5d70dea7e1ba62c88cc4f1e512ea\
d6673a1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\ReadPNG.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "d59441457fb99ae3aad0d2218d1b148e74942d07ca9d41bcad41cac1a\
4224c07", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel\\RelativePath.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "7727b2d319e9a1ee066f809e0083c6c499ae05151bdac576599e99558\
53c6806", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Documentation\\English\\Guides\\FileUtilities.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "5031cd21b7968dced555ebde2d90346ceacc76fc5815fd2cab23b9c8c\
3899863", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation\\English\\ReferencePages\\Symbols\\\
SayHello.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "3ff376ec6d85f2daae853dc9bd86a44d21727fb992995d540fa1b7139\
d46404a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}}, 
                    BaseStyle -> {ContextMenu -> Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
                    Alignment -> Left, BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], 
                    Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.0009007`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.0009007`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"Indeterminate", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"TargetWolframVersionNumber\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["13.1`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   Short[#, 0.75]& ], 
                  "OEM6eJztPUtz20h6pvjQw7Ilz2geO0lVFEabSjahA5Dga2qrbIqSbGctW1b\
Lnk2ttsYNoCGhDAIMGpTNTSWVVJJDKrWHzW7ltLW1h/yPHPILctrNIanK7iGVS+\
aY3CZfNx4EQFIGSNkWZfIgikB3f1/39+7Xp2Xo0iF+\
uW29IlTL01sPTIfYXZs42NEtEx5rGVo4tFgBLUdzD3XqaAu0cIRP4AlaRD1FIZSi66jX6WC7f59gFW\
W+p2Xp+k7fxB1d2bfUnkFY9YWgehYRh9486ncJJc5zq0vMrS2a38MGJf7bDf8t6chERYAO2dpC+\
UNovw9lrh+RTteAhy6GbsNZunaATYKIQRTHsqMwc4eAhg8kTxfv2boarex/L7JG2KsCXd7uOY4/\
DCtej9x2P9vbPbD1M0Dh+\
Z5tmc6uqR4SavVshaDlvd1t3engLkXr3sBApcfQT2Iz5BkqO8TAfaLSmy6IvZ6psBEfNzq5I7tHgm6\
stLpdgm1swuDnHlnm4M3yNqYEOX2DaNdifV/\
ePcNGD8PI0OVWz7E6QGIleFvYJ86ppaKVA5vA2Dr6WajRlqGfmB1iOv6A0kKbME7xvwdFH3TwCUH6D\
wiM2KI3YkGtCNz8kd4h1L7GP6t3gydQcbXds21o+BkgTNCNPRjfNu7eJ/\
rJKUMhf2C9BJgZutGSqWX0HBIuT2/s4xNT13SF83D7ayD30p6NO5yoWbrEh4exb774q5/+uAgNLu/\
oNvAM6zO8P7y33bYMy7Y/4Z9f3LE/5J9f37G/yz+/vNP+RtDjVeTYevex+\
cDs9pwBF7svb7YBdUDsAKuqbp7EX69wtDg+MTqu8jf72D7RTRpmY/bdvta+Fv9/PC6FAbP77WSCb1+\
2s3HZjguZVxWtFQ+wYhCnZSunMF5FlCt+vllEK9DODtFwz3DQRx7PP3BIp2WalqtLUParH/48pDv+\
MVNsf358/JQCFx0fHxDgouPjxybZAakim6VN6Ds9xYax+dSEBzbVnf7x8T3dud+Tj4813SClLkfk+\
HgPfjx1dEN3dEKHfso93VA9ANs9WyZ2/8svI2VKwm3htnjbba4Y6DKG/\
jQjdb14BF03GE9PPEoALdJ2zm9bBIxrQrVWLz9H2SItokVKFMtUKVouIve/\
Ilp60sOmAwM3YDjUNx38as+yOzQLqjnaWb/UuscvQ2Lvl0CLICC9jklD4+\
NKeO4h0QbFctDf4TIjtM8KewQqEYgUl5E1DxmGIdcriXEZhpMcIR8qAq5ggpsYanshPbCQ0s7FlPYG\
OrVeMqk2T9qnoPEVpnTjQ3T9UQ+spA0S82Lo3U2wUqB/\
QL3plGnD7IDKvGnOD64Gild9w2yQPbK6l5cB1hlNDN0kBxaoHtcyuwTOtDNBKdcsvxN3om1YdGJ3Im\
6H5v7E3J+YwJ8ozP2JuT8x3p+YorMfF7fZOLu84UqTZfcn7/dQFItyjGYsVh0dTaK/\
uzT8VESr7HfLPukxnYky37+wYV73pG8fg4Ij1Jl8gPMhFvP/\
K4yYBViOzgKUmGFCfQptP38ECBCV6ZbngNUL0Pu+\
Sdyi7gRA64MSuv7AhFHBxg52cCtTQnk2NlRbddttLZRcyrJR4RTe+\
A6xTWIcb0OTvS57dPulAYXuY3qK7jYkraFIQqPaKGuSJtTlco1gUVJFpVGvCWW12ZCwIpSVmoDr1Xo\
NXotKWVFUSa6LtXpFGob3mQevbRPA+RCbqtWJQ62qZdKoaoQ01aosCaoqlBsK0TRN1bCGq+\
WyItc1TZQrIq7IiiA1FLlSwRLRJLnSlKT6MNRPPKiBqDCTGQYpSNC0Ighqs1qpqw1FJJV6syKJUr2s\
KkpFI02xrop1hUgVsSIIgJ/\
QwPVKswqDokpKcxjkxx5I9uMRGJddVXfCEGuCXGsIFVVtNhtarVpuVKsVDINcxkQjDQ1LFeiU0BRrj\
UZFVKrVRqUhS6JQU5VqraLV8DDEtRDEJ5HxrEtqVZLKVbEiqnJDgW5oDbVaruMKqTaFCq5ooihIgtx\
U1YbYaKpyValgUSG1ulQp1xvDoD4NgToCD+\
ZAV14QOwxT0RoyweVmTZartXJZEJpSTSISLpdJtVKWZELK0KeyhCtKTSVChTRgeKtqXWjIZayII2B+\
EoIZCH+EhjW1jKtqU2xW1LpSk4GMUp2xi1apNMpElpuijOuqJlcbQhNLglIhUq0MbKNVQbfXR7DNhx\
5I7mWxybVID5s1GD+\
1JlaAUWSRiYWCVY0oSkNVWU9UgusEQNbKSqOhKJImkqpYhlZqIBpYHAZ3ywPHIB08uhcGplaBsUWpW\
tfkZhOTCsaqoJbLIoyaLEoNUpeaUlkV6gpuqpIoAyKSqMA4YqlclhRhRN8+\
DoCB1gMVfYCd0zDEer0M4q5WxCZpYpEQoVbTYNyIIDSAZIrE0BCqYlWUVayA7FebULAJNK3C64ZQG4\
ZY2rEUrqK5hjzeNU8MnZ4e3+vpKmj6KFlNecC9AvC/\
WhblerPWUBWiVqtVIqsEtI9QkWoKwYpSr2lKtSFWNbWsYLlckZtKQ6k0QLRqlWFEGqMROQTBA7dWga\
E4AYRQvyNbBnzj/\
n1iGFYYp4qmVeo1AqwLeqqsYgz6qqIqTeC5GpYkwBZGj5GqDEMCsidoGPAHTlFBCgQJl9DNFjT5cpd\
N33JXlYdKJbTqqW90irvMPf2dkAHwtD5SIEp5zqaSic2LtbIl36TRLDTL/0BnN8fV/\
Q7p74DR6rcX25kRVd3RGvOK9R8ivBz9rXGtP9Q7OhgqQGAs8m5E6vfxm+fg6YYkvGCG/\
va4gi0Ic3ghO8PDm4d3LxDBRC2NHWvwFFwihbjw9f1of9tjtWS95p3+y7+\
6C6XXXRNH1AempgMv9SEgXwgiwoCQ7dXRZQfTD6xQZkwhL9YdeBsMRbaqEUK1RamlQP218DPAmBbc+\
RrA6Vbo1TNul2MPoWRPCeIwzyd1x2UwVzsEwB/mcZDbq8DbKAcROG5dK6FlINERRH7EaW+\
AALqk9x6sgAM1F8W5KM6AKOZmUQaZ0zHowq0dnXb5RB2Qqm31TIcV2gieuqzgvgAarrIYJ1xyjT2IF\
VpGlu0wMHQA5yZ75s1BWWb4xX1dVYnJQjm6j7s096hngEe08rSrQrDCutLOUCFZTGb1nG7PebCzteU\
Hc3+YrGIXkIVK16KRYMLKZwcW3driU7Bpqp1OVu0EHgKqWXojEsiGJtB4a2Ki1sD1AjXqvmPB+\
g7pGlYfIue8O8G6SHP81Y2hOeQcj/Phm80lw/fKIA5ns437Vo8S64zYbLbxno27p7pCh+\
drg6nUduGcaW5ADCnYIKpd4Z9/+edIqwORWIZn/YfkjBheyV/\
fYXO0B5bRP4F2QisZ3rc7zco1xNIhRx4b7a/5b3emtv31+\
aWSNJSgdiJYF9dQsq5NSyJ4mIwLt5ChK2wm+\
AWf8r6dqJJhAbz7lqFOoByGDDvNgbGlaMl3DdzQAOU5G4+a+Y9PV7MwB/TWqGWHVV5r3Dx33l3+4v/\
n2vnBNCabHDqxQaWqUcbW+Od/\
7py3dMHXuuiST6XXiuvq7hlUv49N1eALHWu834MVmIhEe3Z8wdMRwU8PG76SwdYWIusM//\
Aj9vnXO7bIP/95x/4T/vnvO2jpoW6+YLBjC0eB+VvloNsGm+9Qub5ceKDBoNQT0V05JcoLvocIs+\
UPsOApZ/i0Ba2QkMd63GbxrUEpgaQzVOksUzqDlNIOpRbXdyPgvlM/U1rJc/\
y88MgNeeaa6TzN5LnIvmbyPea5Zpprpsurmbw5hdnSTHxO9oprpkShTjoN5S0NBioq+\
D3XUXMddVl01GD1PgsBkcejl1tDjUSZTzN7ysndKZRcOwVTqZdaSS2cq5zO3W9wmamZHcOA3m9vPpR\
PGaala/vbF03Qpfgu0JEAxpNp+\
h0fs0xK7kdMRspg3v8dUNT3iG6gLjb3bKvTkq2zpPJ4zn6c2SPlwlWVyml3RM0yKd9HqRy3X2326Ji\
9qiI57Y7BWSbl+yiSY/Zzzh4Zc1dVIqfdUTvLpHwfJTK+33n26Je/qqI47Y7zWSbl+\
yiKY88DzB4hC1dVJqc9kTHLpHwfZXLceZnZo+\
PiVRXJaU8szTIp30eRHHWebPZouHRVxXHaE32zTMr3URyHz1vOHgWXr6owTnvidZZJ+\
T4K45jzyLNHxpWrKpHTngifZVK+jxKZ7rz+7FH3+lUV1GlvTJhlUr6PgjrxfRazR+\
jVqyqz094oMsuknFGZDbAbfz/\
pdX4h4Stnn5g9LXJD4wdtq9NlG293X3VtQtnlo7SRbGSVQZtHtn5yAlQs0PwXp7rCDhgtPjUp7pAnt\
JysNQNT57FHq7fCDYOD13nEEZ242/\
TbybvYHq5dnah2cNf4CApq3oH36fCanA088JN1jBFkGwj7ItjAnq65E8OSsYEU2zKMAyuQtDd5woHB\
+EJ3TuPX5iVkYug/izK3Epbf8iv4YJJJmF+LFd5KI5V+\
pXTgdPqQYM09abBFP08H7kGocjqwp7yOe38Gv/GixY8BFfaxo5ymUkahbq+2DIfYJp8PCJ+\
giB72goLpcXySluipzxq5o/dHiWphwxgMXcoql6wnZj91T/\
wqb6snlUS1aPiSGObEJNPLintfUeSGmbT6JZOyY+FbblLXjd+\
Gk0qHnuIzwm7dYaeeso8s5uMt7WHd6NnkSeKDfSo0QIkTurl0QsImc0Z06l+tEWANpm/PJiQ9A/\
K7OpiD+8eWbobOabJzjfD3se1BmHA4Uwtd+iGgiwDnlF0GlaVLzA/\
wch2suBc1sX6hPLsLf1NbGniZ+d0/7YGnPoEFdB19dG26RkK2IAv/TtdYxJqggndfvnuE+\
BpQ4oY7Nb37iig9h/BTpLVEYNxTpKFLpeZnScfEEW8j8kjrFqKCTTpW6GL+\
G0w8Rl7r7wp8bhqBT2otGa13O12n/6at5QTa1HX7Uvs8k7iYidQWlCVztTVXW++\
X2spiVX29zqLLO8Tgl2bagfri0ptecaUL8iJMPBTkRZl6cAnaBMFvSh9qEILlIm5caEptksABLbeoQ\
kw1pqpQjrndo6U0GcLeFRXQylw8352whaj7epEL2ayL4KyVHTKStVYPCUu5QTbnLHYVWCxM5rfNY16\
epDB3FaC9OV/NPl/FUmC9nqPCHoO/iJMPTOWAQT5rW93+pn8d66ZjbbYNvStb2FaHmSaT0Cd1LC/\
pmN9uQs5RABcGPmkQl9r9Cff8Y95z9vw1vU46Yx30eoJJsQsfoJGMECH8AfAWGVBeNzcfkZebbcLvw\
L8wwiejkAJQOT5vh/Ju1znpz+32W6H8hY/\
QwKr4RVfY7XB7uKMbfbSGeCbGTYRNunlgW4NFdFaI39d8M1rxC55bkOYPDKybg+I7+\
pnOLshy0yYMagRp+7TILVX/97/s81+DW6qW4vlII+\
n6BndY0UgCzvACfja2gP8murn2UDfJtk3wC7Z2qZtD+\
UrDi7Lxa8rPTWbKpmkZzeIJS1PkEtPdSfgnwTJ3aM9CMs6lxOl1n+\
nkJZ9zSnfpfX7Mqrp7TSCP5tJ1g0enIy+lT9aO0+myx1t0cYsta/\
C7DNNV96fzk9lzbylkkjWQ7Hk7EtL11vMdQ2s5Kfs70ZX/\
id1Htxp7M3cfL859TMnRYaGcjFNcVps4R0RaCebJPCZUhq4mfaNbWYZFbqK0GR+\
FKoE1tCnxXqyGXtxHn/4e0zSbprVpWOYJsTeZwgDL+PuTQI0nWT6yMbvg1dtw+pY2AkVQ+\
DCSj8TNUxzPqJJw9cSxutvY5iACU5hJaAo7+AXhzosKTUADvxuq5RV18wehnuxbTBlols5ozu+\
0fZd683Xcn0nH/R5NU2nFLdlywFH32dTLl1OgBZf3ok7c4iHpGlghCcOvDr9BOtiovLUV3+\
OqLVzajceeyr/G9jVi8wVfvIvcS32J90wDoUAbsIUR+q3E68JbQV/\
D9ZMh2w2WZEa1McnyS9BOYaRnCqHcA1OxCQ/Ipt7zmnYtPM2gptoIGdnDmHrsPVBTbNuciFTpe/\
hWt4wnDT2ZveVDb4MPlYbECfc4++3vGi7XxnW/q29Y/\
qkuaFi7vRJXOIFIjC8z1oBMqq9HTKPEpn4jJyRCEyarvMbw89BESvbIGswcDh/\
TCE0htddGzJcknQQc1atbnk37wsbdLrHdvO0r3kP31+KRBf+A67dMP95xI+\
vn3jefY2EpAn2svGSEMNqcSdOaa68Nz9lO1Ybnq/ht5LmHFjSSeiekh8kztgc/\
JSZnwa56t437E7RxGm2jcMT956CV9F63287ytu/\
jBE1N5By5rS2F1FfurW3kWAXKmiq21T3L7iSNmt6Mpx7wHNf7kwrhNT/DSDgJSbRX3qZe/Qf+\
6xQbdaOnhlbcK8qfPgWqpQv3hmZ5M7FX42dkI2DW2UrqGVGfYVvHMtQLdHN6XvDTW/\
oorO8QDfcMJ0AS+SUy9FNfd/HkJ+BAOb4Sywy0OyIGURyOVmxaeIldVTvqxQduHdZnTx1Sb/\
vYddTrdLDd55vqBvksCofWS6ZZB7PkhSN84ura60ekA4GFQ9yfvAD6jWLkaOp2TzfUQ0Khn7SIcsXP\
N4toBdr0+o4+CoENHY7MfvXDn4dgDeGBMn+\
m5emtYHRcWJGSuTjGaBH1FIiCaNBX5guhzPeg0fUIO4X647PvTe7bAUEgdgc5iE20b/\
hvCcvujrxt9nl2y0w/PlCZYP10jZ0KdQli2VGYLrU8IHm6yHgrWtn/\
XmSNsFcFYPce6D1vGKJm8bO9XZ8l92wg/K7JiMIXN9Dy3u627nRwl6J1b2Cg0mPoJ/\
e1o8LtgtjrmUpYuOOj468keIw6SEcUc0NCAjokuyOX7fy3hX3inFoqWjmwCYwt20g2wlcJNGqhTRin\
+N+j3JfIUc24J6P5WUvdw6fXVu8GT9g8m7du56bLvsGTKOHufb4SpPlJTqHcRkumltFzSLg8vbGPT0\
xd0xXOw+2vgdxL3Atz2X2JDw9j33zxVz/9cREaXPY2a5yRSJqmT/jnF3fsD/nn13fs7/LPL++\
0vzFw8Nhm2e5j84EJamloNcnTCQdYZVtP4q/PcSfDbmOYjcMrckOrcyNxKQyYfSHQQhNro+\
XiPgg80Hhi3YNKUYW2KTONtqlAdGsQ0Pqb1FUqGsQB/\
dvFC9Oj14tHgJDBeGxyvZmNtu2pRLQi3BYEoSkI9ecoWwS9vEgJxNkqhfFC7n9FtPSkh01HdwYGawX\
1YRBeMVeGZkFTRvsamDWPfENSGLhii96+5dDweOetw2u0KAfdHS4zQhmssEegoYAccZZd85CJH+1+\
PS7DcJIj5EONr02/Fmo4NkkK7Jyz6BtsddjLvn6KWQ41ttIeX3s+b3kZjAaoA9A2OpvAcQ/\
Ou1TmTXN+iC89vxU2iEShl44BhjNU+/\
ovE3LgXCv5Tqx727DoxNY9bhbm5n1u3icw79fn5n2GzPsUfb1V3Mev9E6PZxmbrscD6H7j2a/+\
5sfsz08uDN314oFtMZoTlV9bc7mx/aDo7lJyb9ixeqYzuSxkhAtE64CA+\
TEdHnMTlagXzuY3HpgqiKjd0U22yJ0tfhM4vetBXfbhF9Gaz+lgjB1Nf/\
XmGf6jGAddHrJ8XESBPrtkqH1YRC908CQu25D9ZvEIDB9xvrAMDczgM/AzAKDrNE+\
OYF6s3BafXxiSeUDyZHJsNkZM2hXn4d08vJuHd+nDu0GoEY+\
cRgQmoebRqidvLOYz4rHZeQseKPN9KB5Mb38wLMytlRJaDjxOKBy4f/a//dOP/vZnf71/\
By16vmEJrcX8tda1EroZNWns0Xrc82izh3G7HwZGYzZ70StcQh+\
OsJisuY1R9oq9uDVkLdjTNS8e8HUk+oMU3n0JfTZe1dsV/vnW3ZD7cJHrL5k/\
vyzG4EbxACswPHMrMLcCcysws1bgekiKW/kSuuH+\
btnKqX5G0N9n2p8fP6XAK8cHTCMfPzbJjg1vNkubwCb0FBvG5lNTZ8fKQXMf39Od+z35WAN1W+\
rylqL3gcd+cUXrtrzds4H1+l9+GSlREm4Lt8XbblNjjdN//Ez89+rh1t2QcdrgPXI7EyRL1vyLkf/\
iHfcK7CRvZh+bukbcOVxv6b6VKXkX4WqrLsVaCyX3VuMA/Q0vJcI2Vl70ul5W9pJ3X+\
7dhqQ1FEloVBtlTdKEulyuEZayRlQa9ZpQVpsNCStCWakJuF6t1+C1qJQVRZXkulirV6RheOfkgg+\
gTpuJfBjquFzXAchpMy0PgxyTyzeAOG0m2WGI8Vylg/\
GcMlPmMKixuRgDmNNmAhxPw3iuuQENp8x0NgxyVC6tQQ+\
nzOQ0DG44V1AAbNpMNeP5M5YLJYA4bSaOYYjpcj0MuHfKTAPDiEx8l32A0/Q3qdP10HauFqUWO/\
GzFn4G5pkWXDcLLNSt0KtnXIfFHkLJnhK4Q/\
7d9QzdwDkZAcAfmHGQ26vtDIu8vjF2j1Voo9s8HpzhePD/Acz+X8g="}, 
                 "ClickToCopyTemplate"]]}}, Alignment -> Left, 
             ItemSize -> {{Automatic, Automatic, Fit}, Automatic}], FontColor -> 
            GrayLevel[0.5], FontSize -> 12]}}, 
         ItemSize -> {{Automatic, Fit}, Automatic}, Alignment -> Left, 
         Dividers -> {None, {-1 -> GrayLevel[
              Rational[239, 255]]}}, Spacings -> {{1, {}, 1}, {1, {}, 2}}]}, 
       Dynamic[
        CurrentValue[
         EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]]], "Text", 
     FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> False]], 
   "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     InterpretationBox[
      StyleBox[
       PaneSelectorBox[{False -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.8950044299116274`17.343082945105657*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{"\"Published to the cloud\"", 
                    TemplateBox[{"\"  View \[RightGuillemet]\"", {
                    URL[
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Paclet/PeterBurbery/FileUtilities"], None}, 
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Paclet/PeterBurbery/FileUtilities", "Hyperlink", {
                    "HyperlinkActive"}, BaseStyle -> {"Hyperlink"}, 
                    Alignment -> {Automatic, Baseline}, BaselinePosition -> 
                    Baseline}, "HyperlinkTemplate"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                   TemplateBox[{
                    RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.0025], {
                    FaceForm[{
                    RGBColor[
                    0.9607843137254902, 0.5058823529411764, 
                    0.19607843137254902`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.660200119018555`}, {205., 
                    212.11320304870605`}, {246.01799774169922`, 
                    235.79520988464355`}, {369.0710144042969, 
                    306.8401927947998}, {369.0710144042969, 
                    117.38719749450684`}, {205., 22.660200119018555`}}, {{
                    30.928985595703125`, 306.8401927947998}, {
                    153.98200225830078`, 235.79520988464355`}, {195., 
                    212.11320304870605`}, {195., 22.660200119018555`}, {
                    30.928985595703125`, 117.38719749450684`}, {
                    30.928985595703125`, 306.8401927947998}}, {{200., 
                    410.22620964050293`}, {364.0710144042969, 
                    315.5001964569092}, {241.01799774169922`, 
                    244.45519828796387`}, {200., 220.77320671081543`}, {
                    158.98200225830078`, 244.45519828796387`}, {
                    35.928985595703125`, 315.5001964569092}, {200., 
                    410.22620964050293`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYB0n8ffYgewSEAmhO9aBaJ/1cmB+XqT
gsF8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYg+9+8dhH/prQmI9ptyBYV/jmEH
Cj+CeUEMMr9iq24MsnkV3Eeike2b8aQrGtk9DSrhyiA6e88JMD/BvUgJbG/S
EzBfQYpBCaKeIROZv2muNDK/YaqzeSayflj4wMyHhR/M/oDHC8uR3fdAaWM5
svthfJj/YHyY/2F8WPjAzIOFH0p8AQA7u3Ea
                    "]}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{43., 198.67381286621094`}, {107.71399688720703`, 
                    161.3118133544922}, {107.71399688720703`, 
                    86.58680725097656}, {43., 123.94882202148438`}, {43., 
                    198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.3137254901960784, 0.4549019607843137, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{182.77679443359375`, 198.67381286621094`}, {
                    182.77679443359375`, 123.94882202148438`}, {
                    118.06279754638672`, 86.58680725097656}, {
                    118.06279754638672`, 161.3118133544922}, {
                    182.77679443359375`, 198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7803921568627451, 0.8627450980392157, 
                    0.9490196078431372], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{112.8884048461914, 244.9990997314453}, {
                    177.60240173339844`, 207.63610076904297`}, {
                    112.8884048461914, 170.27410888671875`}, {
                    48.174407958984375`, 207.63610076904297`}, {
                    112.8884048461914, 244.9990997314453}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{130.02911376953125`, 350.11590576171875`}, {
                    194.80210876464844`, 312.7189064025879}, {
                    194.80210876464844`, 237.92591094970703`}, {
                    130.02911376953125`, 275.32291412353516`}, {
                    130.02911376953125`, 350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.4627450980392157, 0.3607843137254902, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{269.9334716796875, 350.11590576171875`}, {
                    269.9334716796875, 275.32291412353516`}, {
                    205.1604766845703, 237.92591094970703`}, {
                    205.1604766845703, 312.7189064025879}, {269.9334716796875,
                     350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8862745098039215, 0.803921568627451, 
                    0.9529411764705882], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{199.98130798339844`, 396.48345947265625`}, {
                    264.7543029785156, 359.0864601135254}, {
                    199.98130798339844`, 321.69046783447266`}, {
                    135.20831298828125`, 359.0864601135254}, {
                    199.98130798339844`, 396.48345947265625`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{217.61199951171875`, 199.13890075683594`}, {
                    281.8990020751953, 162.0229034423828}, {281.8990020751953,
                     87.7908935546875}, {217.61199951171875`, 
                    124.90690612792969`}, {217.61199951171875`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.43137254901960786`, 0.6039215686274509, 
                    0.34509803921568627`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{356.46661376953125`, 199.13890075683594`}, {
                    356.46661376953125`, 124.90690612792969`}, {
                    292.1796112060547, 87.7908935546875}, {292.1796112060547, 
                    162.0229034423828}, {356.46661376953125`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[0.8549019607843137, 0.9450980392156862, 0.8], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{287.039306640625, 245.15859985351562`}, {
                    351.32630920410156`, 208.0426025390625}, {
                    287.039306640625, 170.92660522460938`}, {
                    222.75230407714844`, 208.0426025390625}, {
                    287.039306640625, 245.15859985351562`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    356.46649169921875`, 215.76849365234375`}, {
                    296.2834930419922, 250.5924949645996}, {
                    356.46649169921875`, 285.26649475097656`}, {
                    356.46649169921875`, 215.76849365234375`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    217.61199951171875`, 114.06449890136719`}, {
                    277.7949981689453, 79.24049758911133}, {
                    217.61199951171875`, 44.566497802734375`}, {
                    217.61199951171875`, 114.06449890136719`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    122.17269897460938`, 78.36309814453125}, {
                    182.42269897460938`, 113.07109832763672`}, {
                    182.35969924926758`, 43.614097595214844`}, {
                    122.17269897460938`, 78.36309814453125}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    103.52159881591797`, 249.46669006347656`}, {
                    43.27159881591797, 214.7586898803711}, {
                    43.334598541259766`, 284.21569061279297`}, {
                    103.52159881591797`, 249.46669006347656`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    120.86710357666016`, 350.61541748046875`}, {
                    120.80010357499123`, 281.0834197998047}, {
                    60.68010330200195, 315.86641693115234`}, {
                    120.86710357666016`, 350.61541748046875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    278.3727111816406, 281.2159118652344}, {
                    278.43971118330956`, 350.74790954589844`}, {
                    338.5597114562988, 315.9649124145508}, {278.3727111816406,
                     281.2159118652344}}}]}}, {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    ImageSize -> {Automatic, 35}}], 
                    StyleBox[
                    "\"PeterBurbery/FileUtilities\"", FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], "OEM6eJy1kUFLAzEQhdm6iFAR9Cf0BzR49diKKBQsSYsHKZJNJz\
Q1uxMyE+L+exNURDz3NofvzXvzxjZ0IXVe4AeQbehcYp1tS+3KEasrCYQpGnjujmBYNa/\
2jK6fBoYYIrBmh0Pl/yunS49p/yub0HQDffCaoWKTb+\
xtdmAOdCdEznme0duoe1Olc4O9wO4ouhQ7iOOtuIfgcYT9TyYSa208sFhDybP4wsSD87Bl5x07oJna\
nXS/unwcA0TvhvetXKlmV5r4c/lp7WuNMnmgGwW+2L04PiyxfGdgonYTE5RIn3v6sMw="}, 
                    "ClickToCopyTemplate"], LineBreakWithin -> Automatic, 
                   LineIndent -> 0, StripOnInput -> False], ItemSize -> Fit, 
                  StripOnInput -> False], 
                 StyleBox[
                  ActionMenuBox[
                   FrameBox[
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {12, 12}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], 
                    TemplateBox[{1}, "Spacer1"], 
                    StyleBox[
                    "2", FontSize -> 14, FontWeight -> Plain, FontColor -> 
                    GrayLevel[0.25], FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False]}, "RowDefault"], 
                    "\"Potential issues found\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {12, 12}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], 
                    TemplateBox[{1}, "Spacer1"], 
                    StyleBox[
                    "20", FontSize -> 14, FontWeight -> Plain, FontColor -> 
                    GrayLevel[0.25], FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False]}, "RowDefault"], 
                    "\"Suggestions found\""}, "PrettyTooltipTemplate"]}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], 
                    GraphicsBox[{
                    GrayLevel[0.4], 
                    AbsoluteThickness[2], 
                    CapForm["Round"], 
                    LineBox[{{-1, 0}, {0, -1}, {1, 0}}]}, {
                    ImageSize -> {13, 9}, BaselinePosition -> Scaled[0.2], 
                    ImagePadding -> {{3, 3}, {3, 3}}, AspectRatio -> Full}]}, 
                    "RowDefault"], DefaultBaseStyle -> "HighlightedInput", 
                    StripOnInput -> False, ImageSize -> {Automatic, 19}, 
                    BaselinePosition -> Baseline, Background -> GrayLevel[1], 
                    FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    Hue[0.55, 0.82, 0.87], 
                    GrayLevel[0.8]]], FrameMargins -> {{4, 4}, {1, 1}}, 
                    Alignment -> {Center, Baseline}], {TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"The definition notebook is typically saved in the \
paclet directory as \\\"ResourceDefinition.nb\\\"\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "5d43e1db-1325-4ec1-addc-c6fb47ed52a2", 49108028, 
                    "DefinitionNotebookFileName", <|
                    "Expected" -> 
                    "C:\\Users\\Peter\\OneDrive - Marshall University\\GitHub\
\\file-paclet\\FileUtilities\\FileUtilities\\ResourceDefinition.nb", "Actual" -> 
                    "C:\\Users\\Peter\\OneDrive - Marshall University\\GitHub\
\\file-paclet\\FileUtilities\\FileUtilities\\FileUtilities  Definition \
Notebook.nb", "PacletDirectory" -> 
                    File["C:\\Users\\Peter\\OneDrive - Marshall \
University\\GitHub\\file-paclet\\FileUtilities\\FileUtilities"]|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[49108028]; 
                    Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Suspicious use of session symbol \"", 
                    StyleBox[
                    "Print", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L25,C9) \\\\\\\"\\\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", False]]], \
Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "687e6f63-02cb-42b7-a49d-26e2b96d855b", 110023382, 
                    "CodeInspectionFileIssue/SuspiciousSessionSymbol", <|
                    "File" -> 
                    "C:\\Users\\Peter\\OneDrive - Marshall University\\GitHub\
\\file-paclet\\FileUtilities\\FileUtilities\\Kernel\\CreateRandomFile.wl", 
                    "Editor" -> Automatic, "SourceLineStart" -> 25, 
                    "SourceColumnStart" -> 9, "SourceLineEnd" -> 25, 
                    "SourceColumnEnd" -> 14, "Message" -> 
                    "Suspicious use of session symbol \
``Print``.\!\(\*StyleBox[\"\\\" (L25,C9) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "SuspiciousSessionSymbol", 
                    "Suspicious use of session symbol ``Print``.", 
                    "Warning", <|
                    CodeParser`Source -> {{25, 9}, {25, 14}}, ConfidenceLevel -> 
                    0.55, "File" -> 
                    "C:\\Users\\Peter\\OneDrive - Marshall University\\GitHub\
\\file-paclet\\FileUtilities\\FileUtilities\\Kernel\\CreateRandomFile.wl", 
                    "Editor" -> Automatic|>], "Hash" -> 3691646366599617400, 
                    "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L25,C9) \\\"\", Rule[FontOpacity, \
0.65`], Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, \
False]]\)"|>]; DefinitionNotebookClient`PackageScope`seekAfter[110023382]; 
                    Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Suspicious use of session symbol \"", 
                    StyleBox[
                    "Echo", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L69,C8) \\\\\\\"\\\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", False]]], \
Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "b8dc1483-5c26-4894-a5c4-f75e9ebf0c90", 42361990, 
                    "CodeInspectionFileIssue/SuspiciousSessionSymbol", <|
                    "File" -> 
                    "C:\\Users\\Peter\\OneDrive - Marshall University\\GitHub\
\\file-paclet\\FileUtilities\\FileUtilities\\Kernel\\FileNameEdit.wl", 
                    "Editor" -> Automatic, "SourceLineStart" -> 69, 
                    "SourceColumnStart" -> 8, "SourceLineEnd" -> 69, 
                    "SourceColumnEnd" -> 12, "Message" -> 
                    "Suspicious use of session symbol \
``Echo``.\!\(\*StyleBox[\"\\\" (L69,C8) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "SuspiciousSessionSymbol", 
                    "Suspicious use of session symbol ``Echo``.", "Warning", <|
                    CodeParser`Source -> {{69, 8}, {69, 12}}, ConfidenceLevel -> 
                    0.55, "File" -> 
                    "C:\\Users\\Peter\\OneDrive - Marshall University\\GitHub\
\\file-paclet\\FileUtilities\\FileUtilities\\Kernel\\FileNameEdit.wl", 
                    "Editor" -> Automatic|>], "Hash" -> 6945096946602729487, 
                    "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L69,C8) \\\"\", Rule[FontOpacity, \
0.65`], Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, \
False]]\)"|>]; DefinitionNotebookClient`PackageScope`seekAfter[42361990]; 
                    Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Suspicious use of session symbol \"", 
                    StyleBox[
                    "Print", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L81,C40) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "c3b98d3d-d203-4694-abb2-eb4f6bffd55f", 42361990, 
                    "CodeInspectionFileIssue/SuspiciousSessionSymbol", <|
                    "File" -> 
                    "C:\\Users\\Peter\\OneDrive - Marshall University\\GitHub\
\\file-paclet\\FileUtilities\\FileUtilities\\Kernel\\FileNameEdit.wl", 
                    "Editor" -> Automatic, "SourceLineStart" -> 81, 
                    "SourceColumnStart" -> 40, "SourceLineEnd" -> 81, 
                    "SourceColumnEnd" -> 45, "Message" -> 
                    "Suspicious use of session symbol \
``Print``.\!\(\*StyleBox[\"\\\" (L81,C40) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "SuspiciousSessionSymbol", 
                    "Suspicious use of session symbol ``Print``.", 
                    "Warning", <|
                    CodeParser`Source -> {{81, 40}, {81, 45}}, 
                    ConfidenceLevel -> 0.55, "File" -> 
                    "C:\\Users\\Peter\\OneDrive - Marshall University\\GitHub\
\\file-paclet\\FileUtilities\\FileUtilities\\Kernel\\FileNameEdit.wl", 
                    "Editor" -> Automatic|>], "Hash" -> 6945096946602729487, 
                    "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L81,C40) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[42361990]; 
                    Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"Symbols in paclets with \\\"Loading\\\" \[Rule] \
Startup may have issues with functions that include definitions\""}, 
                    "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "8f9528bf-251f-4d30-89e3-4a40e6a270e6", 121752542, 
                    "InternalContextWarning", <|
                    "PacletDirectory" -> 
                    File["C:\\Users\\Peter\\OneDrive - Marshall \
University\\GitHub\\file-paclet\\FileUtilities\\FileUtilities"], "Loading" -> 
                    "Startup"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    121752542]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"\\\"ClearAll\\\" appears to be unformatted code\""}, 
                    "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "1a5ac1c3-613c-4a17-9d93-c21e345187a4", 324833681, 
                    "FoundUnformattedCode", {"ClearAll"}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    324833681]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"\\\"Function\\\" appears to be unformatted code\""}, 
                    "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "721f300c-9d97-4e81-9596-36d6da5b7657", 324833681, 
                    "FoundUnformattedCode", {"Function"}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    324833681]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"\\\"Function\\\" appears to be unformatted code\""}, 
                    "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "c04a8fc0-3083-4089-8f6b-5164e28e515e", 889292814, 
                    "FoundUnformattedCode", {"Function"}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    889292814]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"The primary context should usually be declared in the \
paclet info file as well\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "9dad3f6e-dddd-4fee-95a8-cc2141bfc005", 36786989, 
                    "PacletPrimaryContextMissing", <|
                    "PrimaryContext" -> "PeterBurbery`FileUtilities`"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[36786989]; 
                    Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"\\\"LocalObject\\\" appears to be unformatted code\""},
                     "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "8bd0981a-4da4-46ca-9cf8-76a1a95c4408", 64480359, 
                    "FoundUnformattedCode", {"LocalObject"}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[64480359]; 
                    Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"\\\"False\\\" appears to be unformatted code\""}, 
                    "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "1cb9b519-d6ea-454e-aa4b-55c8d4695094", 335003735, 
                    "FoundUnformattedCode", {"False"}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    335003735]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"\\\"Random\\\" appears to be unformatted code\""}, 
                    "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "85e79686-240c-45a2-893c-96bed98729d8", 335003735, 
                    "FoundUnformattedCode", {"Random"}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    335003735]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"\\\"True\\\" appears to be unformatted code\""}, 
                    "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "63e6e60e-3a43-4908-a362-f27997473128", 335003735, 
                    "FoundUnformattedCode", {"True"}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    335003735]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"Extra whitespace should be removed\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "02820069-930d-45ab-a2d8-18aa021f3bb2", 335003735, 
                    "ExtraWhitespace", {
                    Cell[
                    "Test if a file exists (I was expecting this to return \
True, I don't know why it returns False because the Random FIle is not a :", 
                    "Text", TaggingRules -> {}, 
                    CellChangeTimes -> {{3.8950027071827292`*^9, 
                    3.8950027112385406`*^9}, {3.8950029797890472`*^9, 
                    3.8950029975648685`*^9}}, CellID -> 335003735]}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    335003735]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"\\\"FileExistsQ\\\" appears to be unformatted code\""},
                     "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "46950e3c-0129-4843-946d-7627b6a3a93a", 504916341, 
                    "FoundUnformattedCode", {"FileExistsQ"}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    504916341]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"Converting dynamic outputs to bitmap can ensure they \
will display correctly in other sessions\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "f2d90acb-082b-49ff-afbb-bb41b64d3ef0", 950158629, 
                    "RasterizeDynamics", {950158629}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    950158629]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"This cell takes up a large amount of screen area. \
Consider reducing the size to avoid potential issues.\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "c840fad0-d4bf-408c-8fcd-fb456cc5cbd3", 950158629, 
                    "LargeCellBounds/CellArea", <|
                    "Type" -> "area", "CellID" -> 950158629, "CellObject" -> 
                    CellObject[
                    "8796a5c1-ffb4-41bc-b04c-2c87b1400757", 
                    "f646c454-f46b-4fcb-a93b-47ea9e84f50a"], 
                    "CellSerialNumber" -> 2780, 
                    "CellSize" -> {287.93350837707516`, 2025.6000000000006`}, 
                    "CellTags" -> {}, "ContentData" -> BoxData, 
                    "ContentDataForm" -> StandardForm, "CursorPosition" -> 
                    None, "Evaluatable" -> False, "Evaluating" -> True, 
                    "ExpressionUUID" -> 
                    "8796a5c1-ffb4-41bc-b04c-2c87b1400757", 
                    "FirstCellInGroup" -> False, "Formatted" -> True, 
                    "NeedsRendering" -> False, "Position" -> 86, "Rendering" -> 
                    False, "Style" -> "Output", "TemplateGroup" -> False, 
                    "TemplateGroupName" -> None, "Area" -> 500000., "Height" -> 
                    750., "Width" -> 2000|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    950158629]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"\\\"Import\\\" appears to be unformatted code\""}, 
                    "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "784bd451-dbc8-4518-a0d0-efb7d27994cc", 145043357, 
                    "FoundUnformattedCode", {"Import"}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    145043357]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"\\\"Import\\\" appears to be unformatted code\""}, 
                    "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "2565d05a-b983-48a4-b907-18c25f30a32d", 295285293, 
                    "FoundUnformattedCode", {"Import"}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    295285293]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"The number of selected categories (5) should be \
limited to a maximum of 5 items\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "4d5cb193-87a0-4f07-86db-16043456b47d", 651640710, 
                    "CategoriesLimitExceeded", <|"Count" -> 5, "Max" -> 5|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    651640710]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"URLs should probably be formatted as hyperlinks\""}, 
                    "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "af425735-01b2-4cae-ab63-135661a34498", 702019342, 
                    "TextURL", <|
                    "https://github.com/rhennigan/ResourceFunctions" -> 
                    "https://github.com/rhennigan/ResourceFunctions"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    702019342]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"URLs should probably be formatted as hyperlinks\""}, 
                    "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "b6b6538a-f2b7-4af0-b1bc-007a210966df", 249816909, 
                    "TextURL", <|
                    "https://commons.wikimedia.org/wiki/File:File-dynamic-\
clay.png" -> 
                    "https://commons.wikimedia.org/wiki/File%3AFile-dynamic-\
clay.png"|>]; DefinitionNotebookClient`PackageScope`seekAfter[249816909]; 
                    Null]}, Appearance -> None], "BoxID" -> 
                  "WarningCountButton", StripOnInput -> False], 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "734c03ff-e587-4d48-b3c6-2b6c398714bb"]]]]]], Appearance -> 
                   None, BoxID -> "734c03ff-e587-4d48-b3c6-2b6c398714bb", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
           AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.8950044299116274`17.343082945105657*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 ItemBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{"\"Published to the cloud\"", 
                    TemplateBox[{"\"  View \[RightGuillemet]\"", {
                    URL[
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Paclet/PeterBurbery/FileUtilities"], None}, 
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Paclet/PeterBurbery/FileUtilities", "Hyperlink", {
                    "HyperlinkActive"}, BaseStyle -> {"Hyperlink"}, 
                    Alignment -> {Automatic, Baseline}, BaselinePosition -> 
                    Baseline}, "HyperlinkTemplate"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                   LineBreakWithin -> Automatic, LineIndent -> 0, 
                   StripOnInput -> False], ItemSize -> Fit, StripOnInput -> 
                  False], 
                 ItemBox[
                  StyleBox[
                   TemplateBox[{
                    RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.0025], {
                    FaceForm[{
                    RGBColor[
                    0.9607843137254902, 0.5058823529411764, 
                    0.19607843137254902`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.660200119018555`}, {205., 
                    212.11320304870605`}, {246.01799774169922`, 
                    235.79520988464355`}, {369.0710144042969, 
                    306.8401927947998}, {369.0710144042969, 
                    117.38719749450684`}, {205., 22.660200119018555`}}, {{
                    30.928985595703125`, 306.8401927947998}, {
                    153.98200225830078`, 235.79520988464355`}, {195., 
                    212.11320304870605`}, {195., 22.660200119018555`}, {
                    30.928985595703125`, 117.38719749450684`}, {
                    30.928985595703125`, 306.8401927947998}}, {{200., 
                    410.22620964050293`}, {364.0710144042969, 
                    315.5001964569092}, {241.01799774169922`, 
                    244.45519828796387`}, {200., 220.77320671081543`}, {
                    158.98200225830078`, 244.45519828796387`}, {
                    35.928985595703125`, 315.5001964569092}, {200., 
                    410.22620964050293`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYB0n8ffYgewSEAmhO9aBaJ/1cmB+XqT
gsF8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYg+9+8dhH/prQmI9ptyBYV/jmEH
Cj+CeUEMMr9iq24MsnkV3Eeike2b8aQrGtk9DSrhyiA6e88JMD/BvUgJbG/S
EzBfQYpBCaKeIROZv2muNDK/YaqzeSayflj4wMyHhR/M/oDHC8uR3fdAaWM5
svthfJj/YHyY/2F8WPjAzIOFH0p8AQA7u3Ea
                    "]}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{43., 198.67381286621094`}, {107.71399688720703`, 
                    161.3118133544922}, {107.71399688720703`, 
                    86.58680725097656}, {43., 123.94882202148438`}, {43., 
                    198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.3137254901960784, 0.4549019607843137, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{182.77679443359375`, 198.67381286621094`}, {
                    182.77679443359375`, 123.94882202148438`}, {
                    118.06279754638672`, 86.58680725097656}, {
                    118.06279754638672`, 161.3118133544922}, {
                    182.77679443359375`, 198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7803921568627451, 0.8627450980392157, 
                    0.9490196078431372], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{112.8884048461914, 244.9990997314453}, {
                    177.60240173339844`, 207.63610076904297`}, {
                    112.8884048461914, 170.27410888671875`}, {
                    48.174407958984375`, 207.63610076904297`}, {
                    112.8884048461914, 244.9990997314453}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{130.02911376953125`, 350.11590576171875`}, {
                    194.80210876464844`, 312.7189064025879}, {
                    194.80210876464844`, 237.92591094970703`}, {
                    130.02911376953125`, 275.32291412353516`}, {
                    130.02911376953125`, 350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.4627450980392157, 0.3607843137254902, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{269.9334716796875, 350.11590576171875`}, {
                    269.9334716796875, 275.32291412353516`}, {
                    205.1604766845703, 237.92591094970703`}, {
                    205.1604766845703, 312.7189064025879}, {269.9334716796875,
                     350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8862745098039215, 0.803921568627451, 
                    0.9529411764705882], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{199.98130798339844`, 396.48345947265625`}, {
                    264.7543029785156, 359.0864601135254}, {
                    199.98130798339844`, 321.69046783447266`}, {
                    135.20831298828125`, 359.0864601135254}, {
                    199.98130798339844`, 396.48345947265625`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{217.61199951171875`, 199.13890075683594`}, {
                    281.8990020751953, 162.0229034423828}, {281.8990020751953,
                     87.7908935546875}, {217.61199951171875`, 
                    124.90690612792969`}, {217.61199951171875`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.43137254901960786`, 0.6039215686274509, 
                    0.34509803921568627`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{356.46661376953125`, 199.13890075683594`}, {
                    356.46661376953125`, 124.90690612792969`}, {
                    292.1796112060547, 87.7908935546875}, {292.1796112060547, 
                    162.0229034423828}, {356.46661376953125`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[0.8549019607843137, 0.9450980392156862, 0.8], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{287.039306640625, 245.15859985351562`}, {
                    351.32630920410156`, 208.0426025390625}, {
                    287.039306640625, 170.92660522460938`}, {
                    222.75230407714844`, 208.0426025390625}, {
                    287.039306640625, 245.15859985351562`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    356.46649169921875`, 215.76849365234375`}, {
                    296.2834930419922, 250.5924949645996}, {
                    356.46649169921875`, 285.26649475097656`}, {
                    356.46649169921875`, 215.76849365234375`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    217.61199951171875`, 114.06449890136719`}, {
                    277.7949981689453, 79.24049758911133}, {
                    217.61199951171875`, 44.566497802734375`}, {
                    217.61199951171875`, 114.06449890136719`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    122.17269897460938`, 78.36309814453125}, {
                    182.42269897460938`, 113.07109832763672`}, {
                    182.35969924926758`, 43.614097595214844`}, {
                    122.17269897460938`, 78.36309814453125}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    103.52159881591797`, 249.46669006347656`}, {
                    43.27159881591797, 214.7586898803711}, {
                    43.334598541259766`, 284.21569061279297`}, {
                    103.52159881591797`, 249.46669006347656`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    120.86710357666016`, 350.61541748046875`}, {
                    120.80010357499123`, 281.0834197998047}, {
                    60.68010330200195, 315.86641693115234`}, {
                    120.86710357666016`, 350.61541748046875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    278.3727111816406, 281.2159118652344}, {
                    278.43971118330956`, 350.74790954589844`}, {
                    338.5597114562988, 315.9649124145508}, {278.3727111816406,
                     281.2159118652344}}}]}}, {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    ImageSize -> {Automatic, 35}}], 
                    StyleBox[
                    "\"PeterBurbery/FileUtilities\"", FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], "OEM6eJy1kUFLAzEQhdm6iFAR9Cf0BzR49diKKBQsSYsHKZJNJz\
Q1uxMyE+L+exNURDz3NofvzXvzxjZ0IXVe4AeQbehcYp1tS+3KEasrCYQpGnjujmBYNa/\
2jK6fBoYYIrBmh0Pl/yunS49p/yub0HQDffCaoWKTb+\
xtdmAOdCdEznme0duoe1Olc4O9wO4ouhQ7iOOtuIfgcYT9TyYSa208sFhDybP4wsSD87Bl5x07oJna\
nXS/unwcA0TvhvetXKlmV5r4c/lp7WuNMnmgGwW+2L04PiyxfGdgonYTE5RIn3v6sMw="}, 
                    "ClickToCopyTemplate"], LineBreakWithin -> Automatic, 
                   LineIndent -> 0, StripOnInput -> False], ItemSize -> Fit, 
                  StripOnInput -> False], 
                 StyleBox[
                  ActionMenuBox[
                   FrameBox[
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {12, 12}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], 
                    TemplateBox[{1}, "Spacer1"], 
                    StyleBox[
                    "2", FontSize -> 14, FontWeight -> Plain, FontColor -> 
                    GrayLevel[0.25], FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False]}, "RowDefault"], 
                    "\"Potential issues found\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {12, 12}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], 
                    TemplateBox[{1}, "Spacer1"], 
                    StyleBox[
                    "20", FontSize -> 14, FontWeight -> Plain, FontColor -> 
                    GrayLevel[0.25], FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False]}, "RowDefault"], 
                    "\"Suggestions found\""}, "PrettyTooltipTemplate"]}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], 
                    GraphicsBox[{
                    GrayLevel[0.4], 
                    AbsoluteThickness[2], 
                    CapForm["Round"], 
                    LineBox[{{-1, 0}, {0, -1}, {1, 0}}]}, {
                    ImageSize -> {13, 9}, BaselinePosition -> Scaled[0.2], 
                    ImagePadding -> {{3, 3}, {3, 3}}, AspectRatio -> Full}]}, 
                    "RowDefault"], DefaultBaseStyle -> "HighlightedInput", 
                    StripOnInput -> False, ImageSize -> {Automatic, 19}, 
                    BaselinePosition -> Baseline, Background -> GrayLevel[1], 
                    FrameStyle -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    Hue[0.55, 0.82, 0.87], 
                    GrayLevel[0.8]]], FrameMargins -> {{4, 4}, {1, 1}}, 
                    Alignment -> {Center, Baseline}], {TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"The definition notebook is typically saved in the \
paclet directory as \\\"ResourceDefinition.nb\\\"\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "5d43e1db-1325-4ec1-addc-c6fb47ed52a2", 49108028, 
                    "DefinitionNotebookFileName", <|
                    "Expected" -> 
                    "C:\\Users\\Peter\\OneDrive - Marshall University\\GitHub\
\\file-paclet\\FileUtilities\\FileUtilities\\ResourceDefinition.nb", "Actual" -> 
                    "C:\\Users\\Peter\\OneDrive - Marshall University\\GitHub\
\\file-paclet\\FileUtilities\\FileUtilities\\FileUtilities  Definition \
Notebook.nb", "PacletDirectory" -> 
                    File["C:\\Users\\Peter\\OneDrive - Marshall \
University\\GitHub\\file-paclet\\FileUtilities\\FileUtilities"]|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[49108028]; 
                    Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Suspicious use of session symbol \"", 
                    StyleBox[
                    "Print", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L25,C9) \\\\\\\"\\\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", False]]], \
Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "687e6f63-02cb-42b7-a49d-26e2b96d855b", 110023382, 
                    "CodeInspectionFileIssue/SuspiciousSessionSymbol", <|
                    "File" -> 
                    "C:\\Users\\Peter\\OneDrive - Marshall University\\GitHub\
\\file-paclet\\FileUtilities\\FileUtilities\\Kernel\\CreateRandomFile.wl", 
                    "Editor" -> Automatic, "SourceLineStart" -> 25, 
                    "SourceColumnStart" -> 9, "SourceLineEnd" -> 25, 
                    "SourceColumnEnd" -> 14, "Message" -> 
                    "Suspicious use of session symbol \
``Print``.\!\(\*StyleBox[\"\\\" (L25,C9) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "SuspiciousSessionSymbol", 
                    "Suspicious use of session symbol ``Print``.", 
                    "Warning", <|
                    CodeParser`Source -> {{25, 9}, {25, 14}}, ConfidenceLevel -> 
                    0.55, "File" -> 
                    "C:\\Users\\Peter\\OneDrive - Marshall University\\GitHub\
\\file-paclet\\FileUtilities\\FileUtilities\\Kernel\\CreateRandomFile.wl", 
                    "Editor" -> Automatic|>], "Hash" -> 3691646366599617400, 
                    "Position" -> 
                    
                    "\!\(\*StyleBox[\"\\\" (L25,C9) \\\"\", Rule[FontOpacity, \
0.65`], Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, \
False]]\)"|>]; DefinitionNotebookClient`PackageScope`seekAfter[110023382]; 
                    Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Suspicious use of session symbol \"", 
                    StyleBox[
                    "Echo", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L69,C8) \\\\\\\"\\\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", False]]], \
Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "b8dc1483-5c26-4894-a5c4-f75e9ebf0c90", 42361990, 
                    "CodeInspectionFileIssue/SuspiciousSessionSymbol", <|
                    "File" -> 
                    "C:\\Users\\Peter\\OneDrive - Marshall University\\GitHub\
\\file-paclet\\FileUtilities\\FileUtilities\\Kernel\\FileNameEdit.wl", 
                    "Editor" -> Automatic, "SourceLineStart" -> 69, 
                    "SourceColumnStart" -> 8, "SourceLineEnd" -> 69, 
                    "SourceColumnEnd" -> 12, "Message" -> 
                    "Suspicious use of session symbol \
``Echo``.\!\(\*StyleBox[\"\\\" (L69,C8) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "SuspiciousSessionSymbol", 
                    "Suspicious use of session symbol ``Echo``.", "Warning", <|
                    CodeParser`Source -> {{69, 8}, {69, 12}}, ConfidenceLevel -> 
                    0.55, "File" -> 
                    "C:\\Users\\Peter\\OneDrive - Marshall University\\GitHub\
\\file-paclet\\FileUtilities\\FileUtilities\\Kernel\\FileNameEdit.wl", 
                    "Editor" -> Automatic|>], "Hash" -> 6945096946602729487, 
                    "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L69,C8) \\\"\", Rule[FontOpacity, \
0.65`], Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, \
False]]\)"|>]; DefinitionNotebookClient`PackageScope`seekAfter[42361990]; 
                    Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    TemplateBox[{"\"Suspicious use of session symbol \"", 
                    StyleBox[
                    "Print", "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True, StripOnInput -> False], 
                    "\".\\!\\(\\*StyleBox[\\\"\\\\\\\" (L81,C40) \
\\\\\\\"\\\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\\\"OperatorSubstitution\\\", \
False]]], Rule[StripOnInput, False]]\\)\""}, "RowDefault"]}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "c3b98d3d-d203-4694-abb2-eb4f6bffd55f", 42361990, 
                    "CodeInspectionFileIssue/SuspiciousSessionSymbol", <|
                    "File" -> 
                    "C:\\Users\\Peter\\OneDrive - Marshall University\\GitHub\
\\file-paclet\\FileUtilities\\FileUtilities\\Kernel\\FileNameEdit.wl", 
                    "Editor" -> Automatic, "SourceLineStart" -> 81, 
                    "SourceColumnStart" -> 40, "SourceLineEnd" -> 81, 
                    "SourceColumnEnd" -> 45, "Message" -> 
                    "Suspicious use of session symbol \
``Print``.\!\(\*StyleBox[\"\\\" (L81,C40) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                    "SourceInformation" -> 
                    CodeInspector`InspectionObject[
                    "SuspiciousSessionSymbol", 
                    "Suspicious use of session symbol ``Print``.", 
                    "Warning", <|
                    CodeParser`Source -> {{81, 40}, {81, 45}}, 
                    ConfidenceLevel -> 0.55, "File" -> 
                    "C:\\Users\\Peter\\OneDrive - Marshall University\\GitHub\
\\file-paclet\\FileUtilities\\FileUtilities\\Kernel\\FileNameEdit.wl", 
                    "Editor" -> Automatic|>], "Hash" -> 6945096946602729487, 
                    "Position" -> 
                    "\!\(\*StyleBox[\"\\\" (L81,C40) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[42361990]; 
                    Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"Symbols in paclets with \\\"Loading\\\" \[Rule] \
Startup may have issues with functions that include definitions\""}, 
                    "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "8f9528bf-251f-4d30-89e3-4a40e6a270e6", 121752542, 
                    "InternalContextWarning", <|
                    "PacletDirectory" -> 
                    File["C:\\Users\\Peter\\OneDrive - Marshall \
University\\GitHub\\file-paclet\\FileUtilities\\FileUtilities"], "Loading" -> 
                    "Startup"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    121752542]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"\\\"ClearAll\\\" appears to be unformatted code\""}, 
                    "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "1a5ac1c3-613c-4a17-9d93-c21e345187a4", 324833681, 
                    "FoundUnformattedCode", {"ClearAll"}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    324833681]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"\\\"Function\\\" appears to be unformatted code\""}, 
                    "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "721f300c-9d97-4e81-9596-36d6da5b7657", 324833681, 
                    "FoundUnformattedCode", {"Function"}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    324833681]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"\\\"Function\\\" appears to be unformatted code\""}, 
                    "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "c04a8fc0-3083-4089-8f6b-5164e28e515e", 889292814, 
                    "FoundUnformattedCode", {"Function"}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    889292814]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"The primary context should usually be declared in the \
paclet info file as well\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "9dad3f6e-dddd-4fee-95a8-cc2141bfc005", 36786989, 
                    "PacletPrimaryContextMissing", <|
                    "PrimaryContext" -> "PeterBurbery`FileUtilities`"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[36786989]; 
                    Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"\\\"LocalObject\\\" appears to be unformatted code\""},
                     "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "8bd0981a-4da4-46ca-9cf8-76a1a95c4408", 64480359, 
                    "FoundUnformattedCode", {"LocalObject"}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[64480359]; 
                    Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"\\\"False\\\" appears to be unformatted code\""}, 
                    "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "1cb9b519-d6ea-454e-aa4b-55c8d4695094", 335003735, 
                    "FoundUnformattedCode", {"False"}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    335003735]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"\\\"Random\\\" appears to be unformatted code\""}, 
                    "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "85e79686-240c-45a2-893c-96bed98729d8", 335003735, 
                    "FoundUnformattedCode", {"Random"}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    335003735]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"\\\"True\\\" appears to be unformatted code\""}, 
                    "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "63e6e60e-3a43-4908-a362-f27997473128", 335003735, 
                    "FoundUnformattedCode", {"True"}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    335003735]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"Extra whitespace should be removed\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "02820069-930d-45ab-a2d8-18aa021f3bb2", 335003735, 
                    "ExtraWhitespace", {
                    Cell[
                    "Test if a file exists (I was expecting this to return \
True, I don't know why it returns False because the Random FIle is not a :", 
                    "Text", TaggingRules -> {}, 
                    CellChangeTimes -> {{3.8950027071827292`*^9, 
                    3.8950027112385406`*^9}, {3.8950029797890472`*^9, 
                    3.8950029975648685`*^9}}, CellID -> 335003735]}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    335003735]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"\\\"FileExistsQ\\\" appears to be unformatted code\""},
                     "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "46950e3c-0129-4843-946d-7627b6a3a93a", 504916341, 
                    "FoundUnformattedCode", {"FileExistsQ"}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    504916341]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"Converting dynamic outputs to bitmap can ensure they \
will display correctly in other sessions\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "f2d90acb-082b-49ff-afbb-bb41b64d3ef0", 950158629, 
                    "RasterizeDynamics", {950158629}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    950158629]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"This cell takes up a large amount of screen area. \
Consider reducing the size to avoid potential issues.\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "c840fad0-d4bf-408c-8fcd-fb456cc5cbd3", 950158629, 
                    "LargeCellBounds/CellArea", <|
                    "Type" -> "area", "CellID" -> 950158629, "CellObject" -> 
                    CellObject[
                    "8796a5c1-ffb4-41bc-b04c-2c87b1400757", 
                    "f646c454-f46b-4fcb-a93b-47ea9e84f50a"], 
                    "CellSerialNumber" -> 2780, 
                    "CellSize" -> {287.93350837707516`, 2025.6000000000006`}, 
                    "CellTags" -> {}, "ContentData" -> BoxData, 
                    "ContentDataForm" -> StandardForm, "CursorPosition" -> 
                    None, "Evaluatable" -> False, "Evaluating" -> True, 
                    "ExpressionUUID" -> 
                    "8796a5c1-ffb4-41bc-b04c-2c87b1400757", 
                    "FirstCellInGroup" -> False, "Formatted" -> True, 
                    "NeedsRendering" -> False, "Position" -> 86, "Rendering" -> 
                    False, "Style" -> "Output", "TemplateGroup" -> False, 
                    "TemplateGroupName" -> None, "Area" -> 500000., "Height" -> 
                    750., "Width" -> 2000|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    950158629]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"\\\"Import\\\" appears to be unformatted code\""}, 
                    "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "784bd451-dbc8-4518-a0d0-efb7d27994cc", 145043357, 
                    "FoundUnformattedCode", {"Import"}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    145043357]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"\\\"Import\\\" appears to be unformatted code\""}, 
                    "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "2565d05a-b983-48a4-b907-18c25f30a32d", 295285293, 
                    "FoundUnformattedCode", {"Import"}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    295285293]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"The number of selected categories (5) should be \
limited to a maximum of 5 items\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "4d5cb193-87a0-4f07-86db-16043456b47d", 651640710, 
                    "CategoriesLimitExceeded", <|"Count" -> 5, "Max" -> 5|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    651640710]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"URLs should probably be formatted as hyperlinks\""}, 
                    "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "af425735-01b2-4cae-ab63-135661a34498", 702019342, 
                    "TextURL", <|
                    "https://github.com/rhennigan/ResourceFunctions" -> 
                    "https://github.com/rhennigan/ResourceFunctions"|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    702019342]; Null], TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], "\" \"", 
                    "\"URLs should probably be formatted as hyperlinks\""}, 
                    "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "b6b6538a-f2b7-4af0-b1bc-007a210966df", 249816909, 
                    "TextURL", <|
                    "https://commons.wikimedia.org/wiki/File:File-dynamic-\
clay.png" -> 
                    "https://commons.wikimedia.org/wiki/File%3AFile-dynamic-\
clay.png"|>]; DefinitionNotebookClient`PackageScope`seekAfter[249816909]; 
                    Null]}, Appearance -> None], "BoxID" -> 
                  "WarningCountButton", StripOnInput -> False], 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "734c03ff-e587-4d48-b3c6-2b6c398714bb"]]]]]], Appearance -> 
                   None, BoxID -> "734c03ff-e587-4d48-b3c6-2b6c398714bb", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Grid"]}, {"", 
             PaneBox[
              TagBox[
               GridBox[{{"\"\"", 
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"\[FilledVerySmallSquare]\"", "\"Cloud object:\"", 
                    TemplateBox[{
                    RowBox[{"CloudObject", "[", 
                    
                    TemplateBox[{
                    "\"https://\[Ellipsis]/burbery1/DeployedResources/Paclet/\
PeterBurbery/FileUtilities\"", 
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Paclet/PeterBurbery/FileUtilities"}, "HyperlinkURL"], "]"}],
                     "OEM6eJy1kc1KAzEQx9m6iFAv+\
gh9gAavHlsRhYIlafEgRbLphKbO7oTMhLhvbxa9+AC9Dr+Z/8f4hm+\
0LSv6BvZXfPc6CKSYQKwEGurYN3ytaQJ8y+0msJj5Gikf37ozODHNh5/xfAd9RCswYbM/\
7HNxEon8qFQpZVkIfbK9m1aXjnpF3Vl1OXWQxgf1BBFphKMGppwcsNpahyBqC9XP6hdTzwFhLwGDBO\
CFOVz0vrl9GSMkDMPXXm9Mc6hN/Et+WfmpRp0R+N4AVrn3IKc11e8MwtzuUoYfAy+jrg=="}, 
                    "ClickToCopyTemplate"]}, {
                    "\"\[FilledVerySmallSquare]\"", "\"Visit web page:\"", 
                    TemplateBox[{
                    TagBox[
                    
                    RowBox[{
                    "\"https://www.wolfr\"", "\[Ellipsis]", 
                    "\"ery/FileUtilities\""}], Short[#, 0.75]& ], 
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Paclet/PeterBurbery/FileUtilities"}, "HyperlinkURL"]}, {
                    "\"\[FilledVerySmallSquare]\"", "\"Resource object:\"", 
                    TemplateBox[{
                    RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.0025], {
                    FaceForm[{
                    RGBColor[
                    0.9607843137254902, 0.5058823529411764, 
                    0.19607843137254902`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.660200119018555`}, {205., 
                    212.11320304870605`}, {246.01799774169922`, 
                    235.79520988464355`}, {369.0710144042969, 
                    306.8401927947998}, {369.0710144042969, 
                    117.38719749450684`}, {205., 22.660200119018555`}}, {{
                    30.928985595703125`, 306.8401927947998}, {
                    153.98200225830078`, 235.79520988464355`}, {195., 
                    212.11320304870605`}, {195., 22.660200119018555`}, {
                    30.928985595703125`, 117.38719749450684`}, {
                    30.928985595703125`, 306.8401927947998}}, {{200., 
                    410.22620964050293`}, {364.0710144042969, 
                    315.5001964569092}, {241.01799774169922`, 
                    244.45519828796387`}, {200., 220.77320671081543`}, {
                    158.98200225830078`, 244.45519828796387`}, {
                    35.928985595703125`, 315.5001964569092}, {200., 
                    410.22620964050293`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYB0n8ffYgewSEAmhO9aBaJ/1cmB+XqT
gsF8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYg+9+8dhH/prQmI9ptyBYV/jmEH
Cj+CeUEMMr9iq24MsnkV3Eeike2b8aQrGtk9DSrhyiA6e88JMD/BvUgJbG/S
EzBfQYpBCaKeIROZv2muNDK/YaqzeSayflj4wMyHhR/M/oDHC8uR3fdAaWM5
svthfJj/YHyY/2F8WPjAzIOFH0p8AQA7u3Ea
                    "]}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{43., 198.67381286621094`}, {107.71399688720703`, 
                    161.3118133544922}, {107.71399688720703`, 
                    86.58680725097656}, {43., 123.94882202148438`}, {43., 
                    198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.3137254901960784, 0.4549019607843137, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{182.77679443359375`, 198.67381286621094`}, {
                    182.77679443359375`, 123.94882202148438`}, {
                    118.06279754638672`, 86.58680725097656}, {
                    118.06279754638672`, 161.3118133544922}, {
                    182.77679443359375`, 198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7803921568627451, 0.8627450980392157, 
                    0.9490196078431372], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{112.8884048461914, 244.9990997314453}, {
                    177.60240173339844`, 207.63610076904297`}, {
                    112.8884048461914, 170.27410888671875`}, {
                    48.174407958984375`, 207.63610076904297`}, {
                    112.8884048461914, 244.9990997314453}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{130.02911376953125`, 350.11590576171875`}, {
                    194.80210876464844`, 312.7189064025879}, {
                    194.80210876464844`, 237.92591094970703`}, {
                    130.02911376953125`, 275.32291412353516`}, {
                    130.02911376953125`, 350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.4627450980392157, 0.3607843137254902, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{269.9334716796875, 350.11590576171875`}, {
                    269.9334716796875, 275.32291412353516`}, {
                    205.1604766845703, 237.92591094970703`}, {
                    205.1604766845703, 312.7189064025879}, {269.9334716796875,
                     350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8862745098039215, 0.803921568627451, 
                    0.9529411764705882], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{199.98130798339844`, 396.48345947265625`}, {
                    264.7543029785156, 359.0864601135254}, {
                    199.98130798339844`, 321.69046783447266`}, {
                    135.20831298828125`, 359.0864601135254}, {
                    199.98130798339844`, 396.48345947265625`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{217.61199951171875`, 199.13890075683594`}, {
                    281.8990020751953, 162.0229034423828}, {281.8990020751953,
                     87.7908935546875}, {217.61199951171875`, 
                    124.90690612792969`}, {217.61199951171875`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.43137254901960786`, 0.6039215686274509, 
                    0.34509803921568627`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{356.46661376953125`, 199.13890075683594`}, {
                    356.46661376953125`, 124.90690612792969`}, {
                    292.1796112060547, 87.7908935546875}, {292.1796112060547, 
                    162.0229034423828}, {356.46661376953125`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[0.8549019607843137, 0.9450980392156862, 0.8], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{287.039306640625, 245.15859985351562`}, {
                    351.32630920410156`, 208.0426025390625}, {
                    287.039306640625, 170.92660522460938`}, {
                    222.75230407714844`, 208.0426025390625}, {
                    287.039306640625, 245.15859985351562`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    356.46649169921875`, 215.76849365234375`}, {
                    296.2834930419922, 250.5924949645996}, {
                    356.46649169921875`, 285.26649475097656`}, {
                    356.46649169921875`, 215.76849365234375`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    217.61199951171875`, 114.06449890136719`}, {
                    277.7949981689453, 79.24049758911133}, {
                    217.61199951171875`, 44.566497802734375`}, {
                    217.61199951171875`, 114.06449890136719`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    122.17269897460938`, 78.36309814453125}, {
                    182.42269897460938`, 113.07109832763672`}, {
                    182.35969924926758`, 43.614097595214844`}, {
                    122.17269897460938`, 78.36309814453125}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    103.52159881591797`, 249.46669006347656`}, {
                    43.27159881591797, 214.7586898803711}, {
                    43.334598541259766`, 284.21569061279297`}, {
                    103.52159881591797`, 249.46669006347656`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    120.86710357666016`, 350.61541748046875`}, {
                    120.80010357499123`, 281.0834197998047}, {
                    60.68010330200195, 315.86641693115234`}, {
                    120.86710357666016`, 350.61541748046875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    278.3727111816406, 281.2159118652344}, {
                    278.43971118330956`, 350.74790954589844`}, {
                    338.5597114562988, 315.9649124145508}, {278.3727111816406,
                     281.2159118652344}}}]}}, {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    ImageSize -> {Automatic, 35}}], 
                    StyleBox[
                    "\"PeterBurbery/FileUtilities\"", FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], "OEM6eJy1kUFLAzEQhdm6iFAR9Cf0BzR49diKKBQsSYsHKZJNJz\
Q1uxMyE+L+exNURDz3NofvzXvzxjZ0IXVe4AeQbehcYp1tS+3KEasrCYQpGnjujmBYNa/\
2jK6fBoYYIrBmh0Pl/yunS49p/yub0HQDffCaoWKTb+\
xtdmAOdCdEznme0duoe1Olc4O9wO4ouhQ7iOOtuIfgcYT9TyYSa208sFhDybP4wsSD87Bl5x07oJna\
nXS/unwcA0TvhvetXKlmV5r4c/lp7WuNMnmgGwW+2L04PiyxfGdgonYTE5RIn3v6sMw="}, 
                    "ClickToCopyTemplate"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}], "Grid"], FontColor -> 
                   GrayLevel[0.5], FontSize -> 12, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> GrayLevel[
                    Rational[239, 255]]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {Automatic, Fit}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {1, {}, 1}, "Rows" -> {1, {}, 2}}], "Grid"], 
              ImageMargins -> 0]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[
         TrueQ[
          CurrentValue[
           EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]], 
        Alignment -> Automatic, ImageSize -> Automatic, ImageMargins -> 0, 
        BaseStyle -> {}, DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
        Baseline], Deployed -> False, StripOnInput -> False], 
      OpenerView[{
        Grid[{{
           Style[
            Dynamic[
             DateString[
              TimeZoneConvert[
               DateObject[
               3.8950044299116274`17.343082945105657*^9, TimeZone -> 0]], {
              "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short", 
               ":", "Minute", " ", "AMPMLowerCase"}], SingleEvaluation -> 
             True, Evaluator -> "System"], FontSlant -> Italic, FontColor -> 
            GrayLevel[0.5], FontSize -> 0.9 Inherited], "   ", 
           Item[
            Style[
             Grid[{{"Published to the cloud", 
                Hyperlink[
                "  View \[RightGuillemet]", 
                 "https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Paclet/PeterBurbery/FileUtilities", Alignment -> {Automatic, Baseline}, 
                 BaselinePosition -> Baseline]}}, Spacings -> 0.25, 
              Alignment -> {Automatic, Baseline}], LineBreakWithin -> 
             Automatic, LineIndent -> 0], ItemSize -> Fit], 
           Item[
            Style[
             RawBoxes[
              TemplateBox[{
                RowBox[{"ResourceObject", "[", 
                  ButtonBox[
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.0025], {
                    FaceForm[{
                    RGBColor[
                    0.9607843137254902, 0.5058823529411764, 
                    0.19607843137254902`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.660200119018555`}, {205., 
                    212.11320304870605`}, {246.01799774169922`, 
                    235.79520988464355`}, {369.0710144042969, 
                    306.8401927947998}, {369.0710144042969, 
                    117.38719749450684`}, {205., 22.660200119018555`}}, {{
                    30.928985595703125`, 306.8401927947998}, {
                    153.98200225830078`, 235.79520988464355`}, {195., 
                    212.11320304870605`}, {195., 22.660200119018555`}, {
                    30.928985595703125`, 117.38719749450684`}, {
                    30.928985595703125`, 306.8401927947998}}, {{200., 
                    410.22620964050293`}, {364.0710144042969, 
                    315.5001964569092}, {241.01799774169922`, 
                    244.45519828796387`}, {200., 220.77320671081543`}, {
                    158.98200225830078`, 244.45519828796387`}, {
                    35.928985595703125`, 315.5001964569092}, {200., 
                    410.22620964050293`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYB0n8ffYgewSEAmhO9aBaJ/1cmB+XqT
gsF8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYg+9+8dhH/prQmI9ptyBYV/jmEH
Cj+CeUEMMr9iq24MsnkV3Eeike2b8aQrGtk9DSrhyiA6e88JMD/BvUgJbG/S
EzBfQYpBCaKeIROZv2muNDK/YaqzeSayflj4wMyHhR/M/oDHC8uR3fdAaWM5
svthfJj/YHyY/2F8WPjAzIOFH0p8AQA7u3Ea
                    "]}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{43., 198.67381286621094`}, {107.71399688720703`, 
                    161.3118133544922}, {107.71399688720703`, 
                    86.58680725097656}, {43., 123.94882202148438`}, {43., 
                    198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.3137254901960784, 0.4549019607843137, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{182.77679443359375`, 198.67381286621094`}, {
                    182.77679443359375`, 123.94882202148438`}, {
                    118.06279754638672`, 86.58680725097656}, {
                    118.06279754638672`, 161.3118133544922}, {
                    182.77679443359375`, 198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7803921568627451, 0.8627450980392157, 
                    0.9490196078431372], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{112.8884048461914, 244.9990997314453}, {
                    177.60240173339844`, 207.63610076904297`}, {
                    112.8884048461914, 170.27410888671875`}, {
                    48.174407958984375`, 207.63610076904297`}, {
                    112.8884048461914, 244.9990997314453}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{130.02911376953125`, 350.11590576171875`}, {
                    194.80210876464844`, 312.7189064025879}, {
                    194.80210876464844`, 237.92591094970703`}, {
                    130.02911376953125`, 275.32291412353516`}, {
                    130.02911376953125`, 350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.4627450980392157, 0.3607843137254902, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{269.9334716796875, 350.11590576171875`}, {
                    269.9334716796875, 275.32291412353516`}, {
                    205.1604766845703, 237.92591094970703`}, {
                    205.1604766845703, 312.7189064025879}, {269.9334716796875,
                     350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8862745098039215, 0.803921568627451, 
                    0.9529411764705882], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{199.98130798339844`, 396.48345947265625`}, {
                    264.7543029785156, 359.0864601135254}, {
                    199.98130798339844`, 321.69046783447266`}, {
                    135.20831298828125`, 359.0864601135254}, {
                    199.98130798339844`, 396.48345947265625`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{217.61199951171875`, 199.13890075683594`}, {
                    281.8990020751953, 162.0229034423828}, {281.8990020751953,
                     87.7908935546875}, {217.61199951171875`, 
                    124.90690612792969`}, {217.61199951171875`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.43137254901960786`, 0.6039215686274509, 
                    0.34509803921568627`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{356.46661376953125`, 199.13890075683594`}, {
                    356.46661376953125`, 124.90690612792969`}, {
                    292.1796112060547, 87.7908935546875}, {292.1796112060547, 
                    162.0229034423828}, {356.46661376953125`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[0.8549019607843137, 0.9450980392156862, 0.8], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{287.039306640625, 245.15859985351562`}, {
                    351.32630920410156`, 208.0426025390625}, {
                    287.039306640625, 170.92660522460938`}, {
                    222.75230407714844`, 208.0426025390625}, {
                    287.039306640625, 245.15859985351562`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    356.46649169921875`, 215.76849365234375`}, {
                    296.2834930419922, 250.5924949645996}, {
                    356.46649169921875`, 285.26649475097656`}, {
                    356.46649169921875`, 215.76849365234375`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    217.61199951171875`, 114.06449890136719`}, {
                    277.7949981689453, 79.24049758911133}, {
                    217.61199951171875`, 44.566497802734375`}, {
                    217.61199951171875`, 114.06449890136719`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    122.17269897460938`, 78.36309814453125}, {
                    182.42269897460938`, 113.07109832763672`}, {
                    182.35969924926758`, 43.614097595214844`}, {
                    122.17269897460938`, 78.36309814453125}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    103.52159881591797`, 249.46669006347656`}, {
                    43.27159881591797, 214.7586898803711}, {
                    43.334598541259766`, 284.21569061279297`}, {
                    103.52159881591797`, 249.46669006347656`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    120.86710357666016`, 350.61541748046875`}, {
                    120.80010357499123`, 281.0834197998047}, {
                    60.68010330200195, 315.86641693115234`}, {
                    120.86710357666016`, 350.61541748046875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    278.3727111816406, 281.2159118652344}, {
                    278.43971118330956`, 350.74790954589844`}, {
                    338.5597114562988, 315.9649124145508}, {278.3727111816406,
                     281.2159118652344}}}]}}, {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    ImageSize -> {Automatic, 35}}], 
                    StyleBox[
                    "\"PeterBurbery/FileUtilities\"", FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                   ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                   Alignment -> Left, 
                   Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                   BaseStyle -> {Deployed -> False}, 
                   DefaultBaseStyle -> {Background -> None}, BaselinePosition -> 
                   Baseline, Method -> "Preemptive"], "]"}], 
                "OEM6eJy1kUFLAzEQhdm6iFAR9Cf0BzR49diKKBQsSYsHKZJNJzQ1uxMyE+L+\
exNURDz3NofvzXvzxjZ0IXVe4AeQbehcYp1tS+3KEasrCYQpGnjujmBYNa/2jK6fBoYYIrBmh0Pl/\
yunS49p/yub0HQDffCaoWKTb+\
xtdmAOdCdEznme0duoe1Olc4O9wO4ouhQ7iOOtuIfgcYT9TyYSa208sFhDybP4wsSD87Bl5x07oJna\
nXS/unwcA0TvhvetXKlmV5r4c/lp7WuNMnmgGwW+2L04PiyxfGdgonYTE5RIn3v6sMw="}, 
               "ClickToCopyTemplate"]], LineBreakWithin -> Automatic, 
             LineIndent -> 0], ItemSize -> Fit], 
           Style[
            ActionMenu[
             Highlighted[
              Row[{
                Grid[{{
                   RawBoxes[
                    TemplateBox[{
                    TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, "HintPodIconHint"],
                     ImageSize -> {12, 12}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], 
                    TemplateBox[{1}, "Spacer1"], 
                    StyleBox[
                    "2", FontSize -> 14, FontWeight -> Plain, FontColor -> 
                    GrayLevel[0.25], FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False]}, "RowDefault"], 
                    "\"Potential issues found\""}, "PrettyTooltipTemplate"]], 
                   RawBoxes[
                    TemplateBox[{
                    TemplateBox[{
                    PaneBox[
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"], 
                    ImageSize -> {12, 12}, ImageSizeAction -> "ShrinkToFit", 
                    BaselinePosition -> Scaled[0.1]], 
                    TemplateBox[{1}, "Spacer1"], 
                    StyleBox[
                    "20", FontSize -> 14, FontWeight -> Plain, FontColor -> 
                    GrayLevel[0.25], FontFamily -> "Source Sans Pro", 
                    StripOnInput -> False]}, "RowDefault"], 
                    "\"Suggestions found\""}, "PrettyTooltipTemplate"]]}}], 
                Graphics[{
                  GrayLevel[0.4], 
                  AbsoluteThickness[2], 
                  CapForm["Round"], 
                  Line[{{-1, 0}, {0, -1}, {1, 0}}]}, {
                 ImageSize -> {13, 9}, BaselinePosition -> Scaled[0.2], 
                  ImagePadding -> {{3, 3}, {3, 3}}, AspectRatio -> Full}]}], 
              ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
              Background -> GrayLevel[1], Frame -> True, FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]], FrameMargins -> {{4, 4}, {1, 1}}, 
              Alignment -> {Center, Baseline}], {Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"]], 
                  ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                  BaselinePosition -> Scaled[0.1]], " ", 
                 "The definition notebook is typically saved in the paclet \
directory as \"ResourceDefinition.nb\""}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "5d43e1db-1325-4ec1-addc-c6fb47ed52a2", 49108028, 
                  "DefinitionNotebookFileName", <|
                  "Expected" -> 
                   "C:\\Users\\Peter\\OneDrive - Marshall \
University\\GitHub\\file-paclet\\FileUtilities\\FileUtilities\\\
ResourceDefinition.nb", "Actual" -> 
                   "C:\\Users\\Peter\\OneDrive - Marshall \
University\\GitHub\\file-paclet\\FileUtilities\\FileUtilities\\FileUtilities  \
Definition Notebook.nb", "PacletDirectory" -> 
                   File["C:\\Users\\Peter\\OneDrive - Marshall \
University\\GitHub\\file-paclet\\FileUtilities\\FileUtilities"]|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[49108028]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"]], 
                  ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                  BaselinePosition -> Scaled[0.1]], " ", 
                 Row[{"Suspicious use of session symbol ", 
                   Style[
                    RawBoxes["Print"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], 
                   ".\!\(\*StyleBox[\"\\\" (L25,C9) \\\"\", Rule[FontOpacity, \
0.65`], Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, \
False]]\)"}]}] :> DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "687e6f63-02cb-42b7-a49d-26e2b96d855b", 110023382, 
                  "CodeInspectionFileIssue/SuspiciousSessionSymbol", <|
                  "File" -> 
                   "C:\\Users\\Peter\\OneDrive - Marshall \
University\\GitHub\\file-paclet\\FileUtilities\\FileUtilities\\Kernel\\\
CreateRandomFile.wl", "Editor" -> Automatic, "SourceLineStart" -> 25, 
                   "SourceColumnStart" -> 9, "SourceLineEnd" -> 25, 
                   "SourceColumnEnd" -> 14, "Message" -> 
                   "Suspicious use of session symbol \
``Print``.\!\(\*StyleBox[\"\\\" (L25,C9) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                   "SourceInformation" -> 
                   CodeInspector`InspectionObject[
                    "SuspiciousSessionSymbol", 
                    "Suspicious use of session symbol ``Print``.", 
                    "Warning", <|
                    CodeParser`Source -> {{25, 9}, {25, 14}}, ConfidenceLevel -> 
                    0.55, "File" -> 
                    "C:\\Users\\Peter\\OneDrive - Marshall University\\GitHub\
\\file-paclet\\FileUtilities\\FileUtilities\\Kernel\\CreateRandomFile.wl", 
                    "Editor" -> Automatic|>], "Hash" -> 3691646366599617400, 
                   "Position" -> 
                   "\!\(\*StyleBox[\"\\\" (L25,C9) \\\"\", Rule[FontOpacity, \
0.65`], Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, \
False]]\)"|>]; DefinitionNotebookClient`PackageScope`seekAfter[110023382]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"]], 
                  ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                  BaselinePosition -> Scaled[0.1]], " ", 
                 Row[{"Suspicious use of session symbol ", 
                   Style[
                    RawBoxes["Echo"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], 
                   ".\!\(\*StyleBox[\"\\\" (L69,C8) \\\"\", Rule[FontOpacity, \
0.65`], Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, \
False]]\)"}]}] :> DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "b8dc1483-5c26-4894-a5c4-f75e9ebf0c90", 42361990, 
                  "CodeInspectionFileIssue/SuspiciousSessionSymbol", <|
                  "File" -> 
                   "C:\\Users\\Peter\\OneDrive - Marshall \
University\\GitHub\\file-paclet\\FileUtilities\\FileUtilities\\Kernel\\\
FileNameEdit.wl", "Editor" -> Automatic, "SourceLineStart" -> 69, 
                   "SourceColumnStart" -> 8, "SourceLineEnd" -> 69, 
                   "SourceColumnEnd" -> 12, "Message" -> 
                   "Suspicious use of session symbol ``Echo``.\!\(\*StyleBox[\
\"\\\" (L69,C8) \\\"\", Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, \
Inherited]], Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", \
False]]], Rule[StripOnInput, False]]\)", "SourceInformation" -> 
                   CodeInspector`InspectionObject[
                    "SuspiciousSessionSymbol", 
                    "Suspicious use of session symbol ``Echo``.", "Warning", <|
                    CodeParser`Source -> {{69, 8}, {69, 12}}, ConfidenceLevel -> 
                    0.55, "File" -> 
                    "C:\\Users\\Peter\\OneDrive - Marshall University\\GitHub\
\\file-paclet\\FileUtilities\\FileUtilities\\Kernel\\FileNameEdit.wl", 
                    "Editor" -> Automatic|>], "Hash" -> 6945096946602729487, 
                   "Position" -> 
                   "\!\(\*StyleBox[\"\\\" (L69,C8) \\\"\", Rule[FontOpacity, \
0.65`], Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, \
False]]\)"|>]; DefinitionNotebookClient`PackageScope`seekAfter[42361990]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"]], 
                  ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                  BaselinePosition -> Scaled[0.1]], " ", 
                 Row[{"Suspicious use of session symbol ", 
                   Style[
                    RawBoxes["Print"], "Program", FontWeight -> Medium, 
                    ShowStringCharacters -> True], 
                   ".\!\(\*StyleBox[\"\\\" (L81,C40) \\\"\", \
Rule[FontOpacity, 0.65`], Rule[FontSize, Times[0.9`, Inherited]], \
Rule[PrivateFontOptions, List[Rule[\"OperatorSubstitution\", False]]], \
Rule[StripOnInput, False]]\)"}]}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "c3b98d3d-d203-4694-abb2-eb4f6bffd55f", 42361990, 
                  "CodeInspectionFileIssue/SuspiciousSessionSymbol", <|
                  "File" -> 
                   "C:\\Users\\Peter\\OneDrive - Marshall \
University\\GitHub\\file-paclet\\FileUtilities\\FileUtilities\\Kernel\\\
FileNameEdit.wl", "Editor" -> Automatic, "SourceLineStart" -> 81, 
                   "SourceColumnStart" -> 40, "SourceLineEnd" -> 81, 
                   "SourceColumnEnd" -> 45, "Message" -> 
                   "Suspicious use of session symbol \
``Print``.\!\(\*StyleBox[\"\\\" (L81,C40) \\\"\", Rule[FontOpacity, 0.65`], \
Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, False]]\)", 
                   "SourceInformation" -> 
                   CodeInspector`InspectionObject[
                    "SuspiciousSessionSymbol", 
                    "Suspicious use of session symbol ``Print``.", 
                    "Warning", <|
                    CodeParser`Source -> {{81, 40}, {81, 45}}, 
                    ConfidenceLevel -> 0.55, "File" -> 
                    "C:\\Users\\Peter\\OneDrive - Marshall University\\GitHub\
\\file-paclet\\FileUtilities\\FileUtilities\\Kernel\\FileNameEdit.wl", 
                    "Editor" -> Automatic|>], "Hash" -> 6945096946602729487, 
                   "Position" -> 
                   "\!\(\*StyleBox[\"\\\" (L81,C40) \\\"\", Rule[FontOpacity, \
0.65`], Rule[FontSize, Times[0.9`, Inherited]], Rule[PrivateFontOptions, \
List[Rule[\"OperatorSubstitution\", False]]], Rule[StripOnInput, \
False]]\)"|>]; DefinitionNotebookClient`PackageScope`seekAfter[42361990]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, 
                    "HintPodIconHint"]], ImageSize -> {10, 10}, 
                  ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
                  Scaled[0.1]], " ", 
                 "Symbols in paclets with \"Loading\" \[Rule] Startup may \
have issues with functions that include definitions"}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Warning", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "8f9528bf-251f-4d30-89e3-4a40e6a270e6", 121752542, 
                  "InternalContextWarning", <|
                  "PacletDirectory" -> 
                   File["C:\\Users\\Peter\\OneDrive - Marshall \
University\\GitHub\\file-paclet\\FileUtilities\\FileUtilities"], "Loading" -> 
                   "Startup"|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[121752542]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"]], 
                  ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                  BaselinePosition -> Scaled[0.1]], " ", 
                 "\"ClearAll\" appears to be unformatted code"}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "1a5ac1c3-613c-4a17-9d93-c21e345187a4", 324833681, 
                  "FoundUnformattedCode", {"ClearAll"}]; 
                DefinitionNotebookClient`PackageScope`seekAfter[324833681]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"]], 
                  ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                  BaselinePosition -> Scaled[0.1]], " ", 
                 "\"Function\" appears to be unformatted code"}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "721f300c-9d97-4e81-9596-36d6da5b7657", 324833681, 
                  "FoundUnformattedCode", {"Function"}]; 
                DefinitionNotebookClient`PackageScope`seekAfter[324833681]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"]], 
                  ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                  BaselinePosition -> Scaled[0.1]], " ", 
                 "\"Function\" appears to be unformatted code"}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "c04a8fc0-3083-4089-8f6b-5164e28e515e", 889292814, 
                  "FoundUnformattedCode", {"Function"}]; 
                DefinitionNotebookClient`PackageScope`seekAfter[889292814]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"]], 
                  ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                  BaselinePosition -> Scaled[0.1]], " ", 
                 "The primary context should usually be declared in the \
paclet info file as well"}] :> DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "9dad3f6e-dddd-4fee-95a8-cc2141bfc005", 36786989, 
                  "PacletPrimaryContextMissing", <|
                  "PrimaryContext" -> "PeterBurbery`FileUtilities`"|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[36786989]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"]], 
                  ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                  BaselinePosition -> Scaled[0.1]], " ", 
                 "\"LocalObject\" appears to be unformatted code"}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "8bd0981a-4da4-46ca-9cf8-76a1a95c4408", 64480359, 
                  "FoundUnformattedCode", {"LocalObject"}]; 
                DefinitionNotebookClient`PackageScope`seekAfter[64480359]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"]], 
                  ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                  BaselinePosition -> Scaled[0.1]], " ", 
                 "\"False\" appears to be unformatted code"}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "1cb9b519-d6ea-454e-aa4b-55c8d4695094", 335003735, 
                  "FoundUnformattedCode", {"False"}]; 
                DefinitionNotebookClient`PackageScope`seekAfter[335003735]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"]], 
                  ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                  BaselinePosition -> Scaled[0.1]], " ", 
                 "\"Random\" appears to be unformatted code"}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "85e79686-240c-45a2-893c-96bed98729d8", 335003735, 
                  "FoundUnformattedCode", {"Random"}]; 
                DefinitionNotebookClient`PackageScope`seekAfter[335003735]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"]], 
                  ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                  BaselinePosition -> Scaled[0.1]], " ", 
                 "\"True\" appears to be unformatted code"}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "63e6e60e-3a43-4908-a362-f27997473128", 335003735, 
                  "FoundUnformattedCode", {"True"}]; 
                DefinitionNotebookClient`PackageScope`seekAfter[335003735]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"]], 
                  ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                  BaselinePosition -> Scaled[0.1]], " ", 
                 "Extra whitespace should be removed"}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "02820069-930d-45ab-a2d8-18aa021f3bb2", 335003735, 
                  "ExtraWhitespace", {
                   Cell[
                   "Test if a file exists (I was expecting this to return \
True, I don't know why it returns False because the Random FIle is not a :", 
                    "Text", TaggingRules -> {}, 
                    CellChangeTimes -> {{3.8950027071827292`*^9, 
                    3.8950027112385406`*^9}, {3.8950029797890472`*^9, 
                    3.8950029975648685`*^9}}, CellID -> 335003735]}]; 
                DefinitionNotebookClient`PackageScope`seekAfter[335003735]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"]], 
                  ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                  BaselinePosition -> Scaled[0.1]], " ", 
                 "\"FileExistsQ\" appears to be unformatted code"}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "46950e3c-0129-4843-946d-7627b6a3a93a", 504916341, 
                  "FoundUnformattedCode", {"FileExistsQ"}]; 
                DefinitionNotebookClient`PackageScope`seekAfter[504916341]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"]], 
                  ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                  BaselinePosition -> Scaled[0.1]], " ", 
                 "Converting dynamic outputs to bitmap can ensure they will \
display correctly in other sessions"}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "f2d90acb-082b-49ff-afbb-bb41b64d3ef0", 950158629, 
                  "RasterizeDynamics", {950158629}]; 
                DefinitionNotebookClient`PackageScope`seekAfter[950158629]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.]}, 
                    "HintPodIconHint"]], ImageSize -> {10, 10}, 
                  ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
                  Scaled[0.1]], " ", 
                 "This cell takes up a large amount of screen area. Consider \
reducing the size to avoid potential issues."}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Warning", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "c840fad0-d4bf-408c-8fcd-fb456cc5cbd3", 950158629, 
                  "LargeCellBounds/CellArea", <|
                  "Type" -> "area", "CellID" -> 950158629, "CellObject" -> 
                   CellObject[
                    "8796a5c1-ffb4-41bc-b04c-2c87b1400757", 
                    "f646c454-f46b-4fcb-a93b-47ea9e84f50a"], 
                   "CellSerialNumber" -> 2780, 
                   "CellSize" -> {287.93350837707516`, 2025.6000000000006`}, 
                   "CellTags" -> {}, "ContentData" -> BoxData, 
                   "ContentDataForm" -> StandardForm, "CursorPosition" -> 
                   None, "Evaluatable" -> False, "Evaluating" -> True, 
                   "ExpressionUUID" -> "8796a5c1-ffb4-41bc-b04c-2c87b1400757",
                    "FirstCellInGroup" -> False, "Formatted" -> True, 
                   "NeedsRendering" -> False, "Position" -> 86, "Rendering" -> 
                   False, "Style" -> "Output", "TemplateGroup" -> False, 
                   "TemplateGroupName" -> None, "Area" -> 500000., "Height" -> 
                   750., "Width" -> 2000|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[950158629]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"]], 
                  ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                  BaselinePosition -> Scaled[0.1]], " ", 
                 "\"Import\" appears to be unformatted code"}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "784bd451-dbc8-4518-a0d0-efb7d27994cc", 145043357, 
                  "FoundUnformattedCode", {"Import"}]; 
                DefinitionNotebookClient`PackageScope`seekAfter[145043357]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"]], 
                  ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                  BaselinePosition -> Scaled[0.1]], " ", 
                 "\"Import\" appears to be unformatted code"}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "2565d05a-b983-48a4-b907-18c25f30a32d", 295285293, 
                  "FoundUnformattedCode", {"Import"}]; 
                DefinitionNotebookClient`PackageScope`seekAfter[295285293]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"]], 
                  ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                  BaselinePosition -> Scaled[0.1]], " ", 
                 "The number of selected categories (5) should be limited to \
a maximum of 5 items"}] :> DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "4d5cb193-87a0-4f07-86db-16043456b47d", 651640710, 
                  "CategoriesLimitExceeded", <|"Count" -> 5, "Max" -> 5|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[651640710]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"]], 
                  ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                  BaselinePosition -> Scaled[0.1]], " ", 
                 "URLs should probably be formatted as hyperlinks"}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "af425735-01b2-4cae-ab63-135661a34498", 702019342, 
                  "TextURL", <|
                  "https://github.com/rhennigan/ResourceFunctions" -> 
                   "https://github.com/rhennigan/ResourceFunctions"|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[702019342]; 
                Null], Row[{
                 Pane[
                  RawBoxes[
                   TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`]}, "HintPodIconHint"]], 
                  ImageSize -> {10, 10}, ImageSizeAction -> "ShrinkToFit", 
                  BaselinePosition -> Scaled[0.1]], " ", 
                 "URLs should probably be formatted as hyperlinks"}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Paclet", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Paclet", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "b6b6538a-f2b7-4af0-b1bc-007a210966df", 249816909, 
                  "TextURL", <|
                  "https://commons.wikimedia.org/wiki/File:File-dynamic-clay.\
png" -> "https://commons.wikimedia.org/wiki/File%3AFile-dynamic-clay.png"|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[249816909]; 
                Null]}, Appearance -> None], "BoxID" -> "WarningCountButton"], 
           MouseAppearance[
            Button[
             MouseAppearance[
              Mouseover[
               Graphics[{
                 GrayLevel[
                  Rational[64, 85]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], 
               Graphics[{
                 GrayLevel[
                  Rational[128, 255]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]], "LinkHand"], 
             
             With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
               EvaluationNotebook[]}, 
              CurrentValue[
               DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                DockedCells] = If[
                TrueQ[
                 MemberQ[
                  CurrentValue["ModifierKeys"], "Control"]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Cell[
                  Blank[], "StripeCell", 
                  BlankNullSequence[]]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Condition[
                  Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   Blank[Cell]], 
                  Not[
                   FreeQ[
                   DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "734c03ff-e587-4d48-b3c6-2b6c398714bb"]]]]]], Appearance -> 
             None, BoxID -> "734c03ff-e587-4d48-b3c6-2b6c398714bb"], 
            "LinkHand"]}}, Alignment -> {Left, Baseline}], 
        Grid[{{"", 
           Style[
            Grid[{{"\[FilledVerySmallSquare]", "Cloud object:", 
               RawBoxes[
                TemplateBox[{
                  RowBox[{"CloudObject", "[", 
                    
                    TemplateBox[{
                    "\"https://\[Ellipsis]/burbery1/DeployedResources/Paclet/\
PeterBurbery/FileUtilities\"", 
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Paclet/PeterBurbery/FileUtilities"}, "HyperlinkURL"], "]"}],
                   "OEM6eJy1kc1KAzEQx9m6iFAv+\
gh9gAavHlsRhYIlafEgRbLphKbO7oTMhLhvbxa9+AC9Dr+Z/8f4hm+\
0LSv6BvZXfPc6CKSYQKwEGurYN3ytaQJ8y+0msJj5Gikf37ozODHNh5/xfAd9RCswYbM/\
7HNxEon8qFQpZVkIfbK9m1aXjnpF3Vl1OXWQxgf1BBFphKMGppwcsNpahyBqC9XP6hdTzwFhLwGDBO\
CFOVz0vrl9GSMkDMPXXm9Mc6hN/Et+WfmpRp0R+N4AVrn3IKc11e8MwtzuUoYfAy+jrg=="}, 
                 "ClickToCopyTemplate"]]}, {
              "\[FilledVerySmallSquare]", "Visit web page:", 
               Hyperlink[
                RawBoxes[
                 TagBox[
                  
                  RowBox[{
                   "\"https://www.wolfr\"", "\[Ellipsis]", 
                    "\"ery/FileUtilities\""}], Short[#, 0.75]& ]], 
                "https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Paclet/PeterBurbery/FileUtilities"]}, {
              "\[FilledVerySmallSquare]", "Resource object:", 
               RawBoxes[
                TemplateBox[{
                  RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.0025], {
                    FaceForm[{
                    RGBColor[
                    0.9607843137254902, 0.5058823529411764, 
                    0.19607843137254902`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.660200119018555`}, {205., 
                    212.11320304870605`}, {246.01799774169922`, 
                    235.79520988464355`}, {369.0710144042969, 
                    306.8401927947998}, {369.0710144042969, 
                    117.38719749450684`}, {205., 22.660200119018555`}}, {{
                    30.928985595703125`, 306.8401927947998}, {
                    153.98200225830078`, 235.79520988464355`}, {195., 
                    212.11320304870605`}, {195., 22.660200119018555`}, {
                    30.928985595703125`, 117.38719749450684`}, {
                    30.928985595703125`, 306.8401927947998}}, {{200., 
                    410.22620964050293`}, {364.0710144042969, 
                    315.5001964569092}, {241.01799774169922`, 
                    244.45519828796387`}, {200., 220.77320671081543`}, {
                    158.98200225830078`, 244.45519828796387`}, {
                    35.928985595703125`, 315.5001964569092}, {200., 
                    410.22620964050293`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYB0n8ffYgewSEAmhO9aBaJ/1cmB+XqT
gsF8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYg+9+8dhH/prQmI9ptyBYV/jmEH
Cj+CeUEMMr9iq24MsnkV3Eeike2b8aQrGtk9DSrhyiA6e88JMD/BvUgJbG/S
EzBfQYpBCaKeIROZv2muNDK/YaqzeSayflj4wMyHhR/M/oDHC8uR3fdAaWM5
svthfJj/YHyY/2F8WPjAzIOFH0p8AQA7u3Ea
                    "]}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{43., 198.67381286621094`}, {107.71399688720703`, 
                    161.3118133544922}, {107.71399688720703`, 
                    86.58680725097656}, {43., 123.94882202148438`}, {43., 
                    198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.3137254901960784, 0.4549019607843137, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{182.77679443359375`, 198.67381286621094`}, {
                    182.77679443359375`, 123.94882202148438`}, {
                    118.06279754638672`, 86.58680725097656}, {
                    118.06279754638672`, 161.3118133544922}, {
                    182.77679443359375`, 198.67381286621094`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.7803921568627451, 0.8627450980392157, 
                    0.9490196078431372], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{112.8884048461914, 244.9990997314453}, {
                    177.60240173339844`, 207.63610076904297`}, {
                    112.8884048461914, 170.27410888671875`}, {
                    48.174407958984375`, 207.63610076904297`}, {
                    112.8884048461914, 244.9990997314453}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{130.02911376953125`, 350.11590576171875`}, {
                    194.80210876464844`, 312.7189064025879}, {
                    194.80210876464844`, 237.92591094970703`}, {
                    130.02911376953125`, 275.32291412353516`}, {
                    130.02911376953125`, 350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.4627450980392157, 0.3607843137254902, 
                    0.611764705882353], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{269.9334716796875, 350.11590576171875`}, {
                    269.9334716796875, 275.32291412353516`}, {
                    205.1604766845703, 237.92591094970703`}, {
                    205.1604766845703, 312.7189064025879}, {269.9334716796875,
                     350.11590576171875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.8862745098039215, 0.803921568627451, 
                    0.9529411764705882], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{199.98130798339844`, 396.48345947265625`}, {
                    264.7543029785156, 359.0864601135254}, {
                    199.98130798339844`, 321.69046783447266`}, {
                    135.20831298828125`, 359.0864601135254}, {
                    199.98130798339844`, 396.48345947265625`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{217.61199951171875`, 199.13890075683594`}, {
                    281.8990020751953, 162.0229034423828}, {281.8990020751953,
                     87.7908935546875}, {217.61199951171875`, 
                    124.90690612792969`}, {217.61199951171875`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.43137254901960786`, 0.6039215686274509, 
                    0.34509803921568627`], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{356.46661376953125`, 199.13890075683594`}, {
                    356.46661376953125`, 124.90690612792969`}, {
                    292.1796112060547, 87.7908935546875}, {292.1796112060547, 
                    162.0229034423828}, {356.46661376953125`, 
                    199.13890075683594`}}}]}, {
                    FaceForm[{
                    RGBColor[0.8549019607843137, 0.9450980392156862, 0.8], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{287.039306640625, 245.15859985351562`}, {
                    351.32630920410156`, 208.0426025390625}, {
                    287.039306640625, 170.92660522460938`}, {
                    222.75230407714844`, 208.0426025390625}, {
                    287.039306640625, 245.15859985351562`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    356.46649169921875`, 215.76849365234375`}, {
                    296.2834930419922, 250.5924949645996}, {
                    356.46649169921875`, 285.26649475097656`}, {
                    356.46649169921875`, 215.76849365234375`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6627450980392157, 0.803921568627451, 
                    0.5686274509803921], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    217.61199951171875`, 114.06449890136719`}, {
                    277.7949981689453, 79.24049758911133}, {
                    217.61199951171875`, 44.566497802734375`}, {
                    217.61199951171875`, 114.06449890136719`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    122.17269897460938`, 78.36309814453125}, {
                    182.42269897460938`, 113.07109832763672`}, {
                    182.35969924926758`, 43.614097595214844`}, {
                    122.17269897460938`, 78.36309814453125}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.5529411764705883, 0.6745098039215687, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    103.52159881591797`, 249.46669006347656`}, {
                    43.27159881591797, 214.7586898803711}, {
                    43.334598541259766`, 284.21569061279297`}, {
                    103.52159881591797`, 249.46669006347656`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    120.86710357666016`, 350.61541748046875`}, {
                    120.80010357499123`, 281.0834197998047}, {
                    60.68010330200195, 315.86641693115234`}, {
                    120.86710357666016`, 350.61541748046875`}}}]}, {
                    FaceForm[{
                    RGBColor[
                    0.6901960784313725, 0.5882352941176471, 
                    0.8117647058823529], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    278.3727111816406, 281.2159118652344}, {
                    278.43971118330956`, 350.74790954589844`}, {
                    338.5597114562988, 315.9649124145508}, {278.3727111816406,
                     281.2159118652344}}}]}}, {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    ImageSize -> {Automatic, 35}}], 
                    StyleBox[
                    "\"PeterBurbery/FileUtilities\"", FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], "OEM6eJy1kUFLAzEQhdm6iFAR9Cf0BzR49diKKBQsSYsHKZJNJz\
Q1uxMyE+L+exNURDz3NofvzXvzxjZ0IXVe4AeQbehcYp1tS+3KEasrCYQpGnjujmBYNa/\
2jK6fBoYYIrBmh0Pl/yunS49p/yub0HQDffCaoWKTb+\
xtdmAOdCdEznme0duoe1Olc4O9wO4ouhQ7iOOtuIfgcYT9TyYSa208sFhDybP4wsSD87Bl5x07oJna\
nXS/unwcA0TvhvetXKlmV5r4c/lp7WuNMnmgGwW+2L04PiyxfGdgonYTE5RIn3v6sMw="}, 
                 "ClickToCopyTemplate"]]}}, Alignment -> Left, 
             ItemSize -> {{Automatic, Automatic, Fit}, Automatic}], FontColor -> 
            GrayLevel[0.5], FontSize -> 12]}}, 
         ItemSize -> {{Automatic, Fit}, Automatic}, Alignment -> Left, 
         Dividers -> {None, {-1 -> GrayLevel[
              Rational[239, 255]]}}, Spacings -> {{1, {}, 1}, {1, {}, 2}}]}, 
       Dynamic[
        CurrentValue[
         EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]]], "Text", 
     FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> False]], 
   "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]]},
TaggingRules->{
 "ResourceType" -> "Paclet", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> "2023.03.03", "CreationTimestamp" -> 
  3.894998449726122`17.343082278312174*^9, "UpdatedTimestamp" -> 
  3.894998449726122`17.343082278312174*^9, "CompatibilityTest" -> HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWFtv2zYUri+\
5IPEyNECB9a0PeciCbR2GAduaXerJSeohSZPQ6XNo6UgRTJMqSaXxv98hJTm2I7mS7WCdHxJapL7z8\
dz40X5N7TpiGImYe0f3kQSlQsH9mlq7jEPQfj13uq7qXR//\
Ntrcw39rRx9jytTO3geQZv48HvZBSt9+9t+aFYQO4RIHLSeWErj+QFkM/\
jO1e3SHI6rNW0JDX4gBrmqehkqrVo8GQciDq5iBIq0rUCKWLvRGEZBmh2qKNJvvuQuFLNf+\
ZsIdmGUJ4J4juIZ7fUH1rd8o2vk5gKfIfmaPjJSGocNCpH3TAT/\
k4STdm4dXXhlS2Wt5S1XzPGYMif3weDI1cAUBUgWJTP0wiKV1zXi7f5UldQWRUKEWcpQAJjgqBWrY+\
NXU5jENWSwxMjX11QV1GeguV5oyRr4pYuivL+Lshdza6ompyGwRLTEf/hGhsdc4o5HdQ8xd86a/\
llgmLwuda8lRZdJ6O8EiEQu1eUyY0E6N1G5I/c0fEw/qh1uWPOavIt+WJX/\
gNwu81CBg7G11xCdui0Cp38qiZoP3scYwgmcKagsjzagLbcyrFcJum6LrAKMj8BB3+\
51gHgYSE5OrP8sCX8jwDgFv7pK2cCIBv0m1cc1V2g5yvNGpik6jCLh3zW8p9xh4DjCm5jpmVRbm+\
Ai/VvaSi7DY8VIE8rwHQ9yABmPuRIo4Wh4Ua7fVZmaE7eAOE/\
qFg4sCIUNQ3zu34A764h4f7zw8NtZJK5uz33bQHo2ZtvXNdQ5T8nX2iEBSm7mhLt3NxoFQg564jjwc\
p32/OMorAJ8KcAMfbGQlsHnCRJ+\
ym1tzpE16VP1S1uwJ6Heh5wFPGlH5cj2m3B05tyJ0oRNSJoJJYq2UmNR4SuL5ik2Z8kEedYqzz+\
2sOZMIfIwBd012Uw8wLzN4icfFeL/\
TBibAsiNlrSdjW9pLdokqh102yJIulSHqp6oUeL9KjaVSZtbqlIcyf57Dp7E/\
c32cFIg6q0p5L1ZwCgF1R92AC5l0pyzWqmmikV98h2Ut5eDOFN68MlzSzLweW1frp/\
imbYzHVf0WgM7a2LTFlZUSlsQ2Mgfsi1SBegq6hdWIEtqq5nWzutsxdWn5qY0u9uwAM3Wzy62x0Wec\
3BizLth4Cly672U7UuOT4RFs/8HbY/MTNmvqqPIxSLngoUvZhRQRoLesnluU8wTR/\
EtEPW2GrbZSwg2t9r5U7cq1HaVsyQjpj4YmhzbbVoz0xGrgbJqQHWKBzkBTz9wP0hsY2XRCnVxAXiY\
rXl+BD9Jk96ts6qG7rCYqE0ZnaCW3p/EdKrmCNk/R54+uns/s5+\
At3gmWuazMuUlU0PcHhSjVBH01nHkK/udCJLwEDmgAxMWAVNPt14WYyWmXlweJsYWF/JOZnK/\
sS3qvjJ5fCOoLU/EXy0ehgqx/CmuL6Pz9Qh6zwr64bP8nSn6hboEAP362X81KZ2fp4FoF/\
7oQ5ikkezHpKfcsLNS/K8RfTplXxS0rxX8v54//VoAvRfILkt2/\
Fu6DuJJG2H9mK2QZ3X1Y8rjKVdsLU11Qbnfn/Mae/TiO1RZHs2bny+6Vwq5Sfi8TnHKi+1+K4NOh"]\
]], "DefinitionNotebookFramework" -> "DefinitionNotebookClient", 
  "RuntimeConfiguration" -> {
   "Contexts" -> {"PacletResource`", "PacletResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Tagged", "HintPods" -> True, "LoadingMethod" -> 
    "Paclet", "PacletName" -> "PacletResource", "SourceID" -> 
    "8f99c2b0ee5e9f24d331c183562e905b4bbb1a6f"}, "ToolsOpen" -> True, 
  "StatusMessage" -> "", "SubmissionReviewData" -> {"Review" -> False}, 
  "AutoUpdate" -> True, "Openers" -> {"PrimaryExamplesSection" -> Open}, 
  "PacletBuildData" -> {
   "LastBuiltArchive" -> 
    "C:\\Users\\Peter\\OneDrive - Marshall \
University\\GitHub\\file-paclet\\FileUtilities\\FileUtilities\\build\\\
PeterBurbery__FileUtilities-0.0.1.paclet", "FileHashes" -> 
    ByteArray[CompressedData["
1:eJwBCQP2/CFib1JiAQAAAPwCAAA4Qzp4nJWVW0gUURyH7aa0ZusNFQPL0NTN
2TUz1CxM10vWum0es0TNxtn/zh6cnZGZ2TYvRXbBLvaQ+lBERtlzQQ9pt5fA
XoJIInqoSEiDLB8iCE3BdnHx7E7rND0N/Ibv+x3OtSSFQlSZwLhdwMu0jAXe
VM6zHJacpko3toNkqsAcHJIxh2UMkpFvKVlJoXAkuEUGLGXXthma5q83eZNa
WmRBtryp3/eyoTc/gkKbQ1ureDucMDXnGBmHFKCSVlsFHohnPJdn+2OiUym0
Rc0jAev7JTVvV3FZjqZlxF+5WE+hTC0uIwu8im0681Q0NTmRT6GC0LYacIAI
PAM2mvXOH2p3tQic90u37wWOExRT2NCZN13YJaaTgvuRw7O6qQ+lFDKELkBA
i4xzcdA7FqcSVAb82VFaWBFV0fg/PrWl+fhq9PQjscdDoSyNPgmr6J7Ennw7
ORVWt+w+DNY5MHB2yejhVJRy+j3z02lPMYXytCix71sNMm2nZVrdnDMwENEx
+9VAIaMW89L2zFVxhiXZ+J11z1dodHpELIORE5hWFedYUd/Ea2vPGgplLONs
8+5FjWdxfoO+P/H2DyeFtv5TpulAVr64c3kmJ8q9/JL/LdR8KuP3g8gDZyql
mVZ3m+/2Cl5Sy9w508NfPSOdBCZJsh82i0DLUEPzdsEVQnGre2Tu0u4ZM1GQ
JNGvKMMiMLIgtiPcoeTbjqVs+nmh4DDhSZLg5321VtoF5XYsK3DxZnjj8NX0
NIKTRB+AH1RwQ0eYL7W60UjCkSQpgKsVAWyYaQVRIVi38bH5rGEhiwhIkhgg
IO9FMK/PHPy9J3sqhfAkifbzVS7vtVkDtD0Q1HW5e9cOPUsmIEnilKCi9N3M
fJH5/RkdYUmy3s/6MJu1UmtlTDCmKFxgx9NKDgwWEpIkcUsk593yx71vhOzU
2poQglVUF4+5+745Y3cRnCRRNprhQK7iHYKCOq9/8Cmp93sHoUgSs0hV0zx2
gCSrX4+pN+rvdnPZq/4AhwcAriRaduI=
      "]]}},
CreateCellID->True,
DynamicEvaluationTimeout->60,
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (May 18, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], WindowToolbars -> {}, DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.33333, 0.33333, 0.33333], CellTags -> {"MainDockedCell"}, 
       CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    PrivateNotebookOptions -> {
     "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
    CellLabelAutoDelete -> False, 
    CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
    AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontSize -> 14, FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.62744, 0.62744, 0.62744, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.62744, 0.62744, 0.62744, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.99998, 0.99998, 0.99998, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.98824, 0.41961, 0.20392], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.66667], 0], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2790153672590285854; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2790153672590285854]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4138174468017918531; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4138174468017918531]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Insert Delimiter\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert example delimiter\""}, "PrettyTooltipTemplate"], 
              ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1887802176716758884; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Insert Delimiter"; 
                    DefinitionNotebookClient`DelimiterInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1887802176716758884]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               TemplateBox[{
                 StyleBox[
                  
                  TemplateBox[{
                   "\"Tables\"", 
                    "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\
\[FilledDownTriangle]\""}, "RowDefault"], "Text", FontFamily -> 
                  "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                 "\"Table functions\""}, "PrettyTooltipTemplate"], 
               ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert table with two columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5800166344906378520; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with two columns"; 
                    DefinitionNotebookClient`TableInsert[2]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5800166344906378520]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert table with three columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    533841403879783297; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with three columns"; 
                    DefinitionNotebookClient`TableInsert[3]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    533841403879783297]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Add a row to the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4413051590217973467; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Add a row to the selected table"; 
                    DefinitionNotebookClient`TableRowInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4413051590217973467]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Sort the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    9150037060110806081; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Sort the selected table"; 
                    DefinitionNotebookClient`TableSort[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    9150037060110806081]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Merge selected tables\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2347719643166780208; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Merge selected tables"; 
                    DefinitionNotebookClient`TableMerge[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2347719643166780208]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3646530685697756512; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3646530685697756512]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1866935765212102190; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1866935765212102190]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert comment\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8817953515714839566; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8817953515714839566]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Documentation Tools\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Open Palette\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1266981032716546660; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = "Open Palette"; 
                    PacletResource`DefinitionNotebook`OpenDocumentationTools[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1266981032716546660]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Function Page\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7312678540702684447; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "New Function Page"; 
                    PacletResource`DefinitionNotebook`NewFunctionPage[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7312678540702684447]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Guide Page\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8084030535806498779; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "New Guide Page"; 
                    PacletResource`DefinitionNotebook`NewGuidePage[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8084030535806498779]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Tech Note\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2445183906026021612; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = "New Tech Note"; 
                    PacletResource`DefinitionNotebook`NewTechNote[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2445183906026021612]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {1 -> RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{
                  Thickness[0.0025], {
                   FaceForm[{
                    RGBColor[0.96078, 0.50588, 0.19608], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.66}, {205., 212.11}, {246.02, 235.8}, {
                    369.07, 306.84}, {369.07, 117.39}, {205., 22.66}}, {{
                    30.929, 306.84}, {153.98, 235.8}, {195., 212.11}, {195., 
                    22.66}, {30.929, 117.39}, {30.929, 306.84}}, {{200., 
                    410.23}, {364.07, 315.5}, {241.02, 244.46}, {200., 
                    220.77}, {158.98, 244.46}, {35.929, 315.5}, {200., 
                    410.23}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQ3fo6cIdcZ7nDwyqRde5/ix0YQCAgE8J3rXJIAwG5
TIc3QGWtwVUOs2YCwcMMOB+sfkMGXP3z3ys/Xso1h5uXL9R84NRDU4friwts
ud4XQ+TfmjgU2nJdX3wFwQebswONvyAGzgcpL9CNgZu3BGjc9cPRcPuqgdY9
7IqGu+dzX3CJSrgyxJ4TGQ6m7y1c3YuUHEDKqp5kOMi8fmQmxaAEUc+QCeeD
/SWN4Pcf+qoRY54J1w8LH5j5sPCD2R8E1P56YTncfWD5jeVw98P4MP+h8IH+
h/Fh4QMzDxZ+6PEFAOibv7E=
                    "]}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{43., 198.67}, {107.71, 161.31}, {107.71, 
                    86.587}, {43., 123.95}, {43., 198.67}}}]}, {
                   FaceForm[{
                    RGBColor[0.31373, 0.4549, 0.61176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{182.78, 198.67}, {182.78, 123.95}, {118.06, 
                    86.587}, {118.06, 161.31}, {182.78, 198.67}}}]}, {
                   FaceForm[{
                    RGBColor[0.78039, 0.86275, 0.94902], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{112.89, 245.}, {177.6, 207.64}, {112.89, 
                    170.27}, {48.174, 207.64}, {112.89, 245.}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{130.03, 350.12}, {194.8, 312.72}, {194.8, 
                    237.93}, {130.03, 275.32}, {130.03, 350.12}}}]}, {
                   FaceForm[{
                    RGBColor[0.46275, 0.36078, 0.61176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{269.93, 350.12}, {269.93, 275.32}, {205.16, 
                    237.93}, {205.16, 312.72}, {269.93, 350.12}}}]}, {
                   FaceForm[{
                    RGBColor[0.88627, 0.80392, 0.95294], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{199.98, 396.48}, {264.75, 359.09}, {199.98, 
                    321.69}, {135.21, 359.09}, {199.98, 396.48}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{217.61, 199.14}, {281.9, 162.02}, {281.9, 
                    87.791}, {217.61, 124.91}, {217.61, 199.14}}}]}, {
                   FaceForm[{
                    RGBColor[0.43137, 0.60392, 0.3451], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{356.47, 199.14}, {356.47, 124.91}, {292.18, 
                    87.791}, {292.18, 162.02}, {356.47, 199.14}}}]}, {
                   FaceForm[{
                    RGBColor[0.8549, 0.9451, 0.8], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{287.04, 245.16}, {351.33, 208.04}, {287.04, 
                    170.93}, {222.75, 208.04}, {287.04, 245.16}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    356.47, 215.77}, {296.28, 250.59}, {356.47, 285.27}, {
                    356.47, 215.77}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    217.61, 114.06}, {277.79, 79.24}, {217.61, 44.566}, {
                    217.61, 114.06}}}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    122.17, 78.363}, {182.42, 113.07}, {182.36, 43.614}, {
                    122.17, 78.363}}}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    103.52, 249.47}, {43.272, 214.76}, {43.335, 284.22}, {
                    103.52, 249.47}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    120.87, 350.62}, {120.8, 281.08}, {60.68, 315.87}, {
                    120.87, 350.62}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    278.37, 281.22}, {278.44, 350.75}, {338.56, 315.96}, {
                    278.37, 281.22}}}]}}, {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], ImageSize -> 50, 
                  ImageSize -> {Automatic, 35}}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Paclet Resource\"", FontFamily -> "Source Sans Pro", 
                    FontWeight -> "SemiBold", StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    GridBox[{{"\"DEFINITION NOTEBOOK\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]UNDER DEVELOPMENT\[VeryThinSpace]\
\[VeryThinSpace])\"", FontSize -> 10, FontColor -> GrayLevel[0.5], 
                    FontTracking -> "Plain", FontSlant -> "Plain", 
                    FontVariations -> {"CapsType" -> "Normal"}, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                    FontFamily -> "Source Sans Pro", FontTracking -> 
                    "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {
                    2 -> RGBColor[0.33333, 0.33333, 0.33333]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> 
                 RGBColor[0.33333, 0.33333, 0.33333], StripOnInput -> 
                 False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Paclet Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> 
               RGBColor[0.33333, 0.33333, 0.33333], StripOnInput -> False], 
              "https://resources.wolframcloud.com/PacletRepository"}, 
             "HyperlinkURL"]}, {
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{
                 TemplateBox[{"\"Open Sample\"", 
                   TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                  "RowDefault"], 
                 "\"View a completed sample definition notebook\""}, 
                "PrettyTooltipTemplate"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"View a completed sample definition notebook\"", True}, 
              "OrangeButtonTemplate"], {
             "\"Basic\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3934291920460873112; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                    DefinitionNotebookClient`$ClickedAction = "Basic"; 
                    PacletResource`DefinitionNotebook`ViewSamplePaclet[
                    "Basic"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3934291920460873112]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Advanced\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7566953809767785517; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                    DefinitionNotebookClient`$ClickedAction = "Advanced"; 
                    PacletResource`DefinitionNotebook`ViewSamplePaclet[
                    "Advanced"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7566953809767785517]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Guidelines\"", 
                "\"View general guidelines for authoring paclets\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5906117565281445171; (
                DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
                DefinitionNotebookClient`ViewStyleGuidelines[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5906117565281445171]]& , 
              "\"View general guidelines for authoring paclets\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0.05]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5074018684552945401; (
                DefinitionNotebookClient`$ClickedButton = "Tools"; 
                DefinitionNotebookClient`ToggleToolbar[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5074018684552945401]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[1., 1., 1.]], "Grid"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{
                 TemplateBox[{"\"Check\"", 
                   TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                  "RowDefault"], "\"Check notebook for potential errors\""}, 
                "PrettyTooltipTemplate"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"Check notebook for potential errors\"", True}, 
              "OrangeButtonTemplate"], {
             "\"All\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8900916902137752067; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "All"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], All]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8900916902137752067]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], Delimiter, "\"Definition Notebook\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4301941258590251066; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Definition Notebook"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "DefinitionNotebook"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4301941258590251066]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Paclet Files\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1312802444570235546; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Paclet Files"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "PacletFiles"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1312802444570235546]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Documentation\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    6325522174070009817; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Documentation"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "Documentation"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    6325522174070009817]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Build\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Documentation\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1579518736508902704; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Build"; 
                    DefinitionNotebookClient`$ClickedAction = "Documentation"; 
                    PacletResource`DefinitionNotebook`BuildPaclet[
                    ButtonNotebook[], "Documentation"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1579518736508902704]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"All\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5625167833203047250; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Build"; 
                    DefinitionNotebookClient`$ClickedAction = "All"; 
                    PacletResource`DefinitionNotebook`BuildPaclet[
                    ButtonNotebook[], All]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5625167833203047250]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Locally on this computer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8714502586816766511; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Locally on this computer"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "Local"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8714502586816766511]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5593410685219912767; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPublic"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5593410685219912767]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"In this session only\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2850084946728613817; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "In this session only"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "KernelSession"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2850084946728613817]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your paclet submission\""}, 
                   "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3196298050911436087; (
                    DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3196298050911436087]]& , 
                  "\"Submit changes to update your paclet submission\"", 
                  True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your paclet to the Wolfram Language Paclet \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3704832848557640569; (
                    DefinitionNotebookClient`$ClickedButton = "Submit"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3704832848557640569]]& , 
                  "\"Submit your paclet to the Wolfram Language Paclet \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[1., 1., 1.], 
              RGBColor[0.33333, 0.33333, 0.33333]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[1., 1., 1.], 2 -> 
              RGBColor[0.33333, 0.33333, 0.33333]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[1., 1., 1.]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{
               Thickness[0.0025], {
                FaceForm[{
                  RGBColor[0.96078, 0.50588, 0.19608], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
                  1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{205., 
                  22.66}, {205., 212.11}, {246.02, 235.8}, {369.07, 306.84}, {
                  369.07, 117.39}, {205., 22.66}}, {{30.929, 306.84}, {153.98,
                   235.8}, {195., 212.11}, {195., 22.66}, {30.929, 117.39}, {
                  30.929, 306.84}}, {{200., 410.23}, {364.07, 315.5}, {241.02,
                   244.46}, {200., 220.77}, {158.98, 244.46}, {35.929, 
                  315.5}, {200., 410.23}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQ3fo6cIdcZ7nDwyqRde5/ix0YQCAgE8J3rXJIAwG5
TIc3QGWtwVUOs2YCwcMMOB+sfkMGXP3z3ys/Xso1h5uXL9R84NRDU4friwts
ud4XQ+TfmjgU2nJdX3wFwQebswONvyAGzgcpL9CNgZu3BGjc9cPRcPuqgdY9
7IqGu+dzX3CJSrgyxJ4TGQ6m7y1c3YuUHEDKqp5kOMi8fmQmxaAEUc+QCeeD
/SWN4Pcf+qoRY54J1w8LH5j5sPCD2R8E1P56YTncfWD5jeVw98P4MP+h8IH+
h/Fh4QMzDxZ+6PEFAOibv7E=
                  "]}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{43., 198.67}, {107.71, 161.31}, {107.71, 86.587}, {
                 43., 123.95}, {43., 198.67}}}]}, {
                FaceForm[{
                  RGBColor[0.31373, 0.4549, 0.61176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{182.78, 198.67}, {182.78, 123.95}, {118.06, 
                 86.587}, {118.06, 161.31}, {182.78, 198.67}}}]}, {
                FaceForm[{
                  RGBColor[0.78039, 0.86275, 0.94902], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{112.89, 245.}, {177.6, 207.64}, {112.89, 170.27}, {
                 48.174, 207.64}, {112.89, 245.}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{130.03, 350.12}, {194.8, 312.72}, {194.8, 237.93}, {
                 130.03, 275.32}, {130.03, 350.12}}}]}, {
                FaceForm[{
                  RGBColor[0.46275, 0.36078, 0.61176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{269.93, 350.12}, {269.93, 275.32}, {205.16, 
                 237.93}, {205.16, 312.72}, {269.93, 350.12}}}]}, {
                FaceForm[{
                  RGBColor[0.88627, 0.80392, 0.95294], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{199.98, 396.48}, {264.75, 359.09}, {199.98, 
                 321.69}, {135.21, 359.09}, {199.98, 396.48}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{217.61, 199.14}, {281.9, 162.02}, {281.9, 87.791}, {
                 217.61, 124.91}, {217.61, 199.14}}}]}, {
                FaceForm[{
                  RGBColor[0.43137, 0.60392, 0.3451], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{356.47, 199.14}, {356.47, 124.91}, {292.18, 
                 87.791}, {292.18, 162.02}, {356.47, 199.14}}}]}, {
                FaceForm[{
                  RGBColor[0.8549, 0.9451, 0.8], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{287.04, 245.16}, {351.33, 208.04}, {287.04, 
                 170.93}, {222.75, 208.04}, {287.04, 245.16}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{356.47,
                  215.77}, {296.28, 250.59}, {356.47, 285.27}, {356.47, 
                 215.77}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{217.61,
                  114.06}, {277.79, 79.24}, {217.61, 44.566}, {217.61, 
                 114.06}}}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{122.17,
                  78.363}, {182.42, 113.07}, {182.36, 43.614}, {122.17, 
                 78.363}}}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{103.52,
                  249.47}, {43.272, 214.76}, {43.335, 284.22}, {103.52, 
                 249.47}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{120.87,
                  350.62}, {120.8, 281.08}, {60.68, 315.87}, {120.87, 
                 350.62}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{278.37,
                  281.22}, {278.44, 350.75}, {338.56, 315.96}, {278.37, 
                 281.22}}}]}}, {
              ImageSize -> 12, ImageSize -> 50, 
               ImageSize -> {Automatic, 35}}], 
             "Wolfram Paclet Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentReplyIcon"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.076923], 
         FaceForm[{#, 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{1.5, 7.5}, {6.5, 11.5}, {
          6.5, 3.5}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJw9U2tIVEEUvq5iVkttZmdfuo/ZbQukJGKVqPBLUTGJ0h9hVLIJRYhUVJj2
AjGRWCKiF0llZWRCSEnZExEJ06CotaiQyH7EIrthT3u6NXPn3jswnDlzzzlz
vu8711u9vWJzsqIoSXwv5tuk6IsgrQvOnLf+1CRC5ZKbg3WJAIJV90rNJoJF
XOR6sebI6W3pyXq8DxccIoGwa+uxj/v/McxNbTxZOJ3w4Rkb+ZVgWGk2ZbcQ
Yfm0V+07Jhm6St7vzVhI2JfBT78ZCkI8cj2hqe/xxaIJJm0PoWEssCgtzvCc
lzlYYwXP5iUYHpXlHV4xasXLeh4wyKCWX2fDqcJwbfQ+w4F83vGQDT1fJ1/U
dzJ842bsih1XB3hiI0NzrPyOq9mBPb1tjpyNDBXci5U7MVQnLhji4nMsE+9W
c6ARL3i3XSWbXNiiLi8EzPxbbqydsaD73LgHJ2wp/OiFoKVJ8Ui+Chha6M3T
H8NZUMPm+XB9p8h0QtATjvtxqUh0SBgV76QHZN+lszReA5pNQ66o1+8HV6O3
rdWCBIcTuKHxHJ4NQdO1sx4Nxxy4VYBug2dVt4lMnB/vGCi7TSgWz/504Etk
VbXlNSGkCmWHqFYbJXziYXlT7VKXEdLq2DDMwyvvksTZZ5W4OgiCjmCVFTUP
dh+3HSKJ8y9hqUogIfqn83PkCUndQoTLQsZ2gpperL3fQJLXIMEn5F5GaD3D
l50g2O3OIkhiCUf7v8/fMJOMuRPTmT2FjLlU+0ghY471+dV93epzr/sPPaJz
u3Ev65sNX/8//gP5Ei2u
          "]]}, AspectRatio -> Automatic, ImageSize -> {13., 13.}, 
        PlotRange -> {{0., 13.}, {0., 13.}}]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11], "\[SpanFromLeft]"}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9], 
            ItemBox[
             ButtonBox[
              TagBox[
               StyleBox[
                TemplateBox[{"\"Reply \[RightGuillemet]\"", 
                  StyleBox["\"Reply \[RightGuillemet]\"", "HyperlinkActive"], 
                  BaseStyle -> "Hyperlink"}, "MouseoverTemplate"], FontSize -> 
                9], 
               MouseAppearanceTag["LinkHand"]], BaseStyle -> "Hyperlink", 
              ButtonFunction :> (SelectionMove[
                 ParentCell[
                  EvaluationCell[]], After, Cell]; 
               DefinitionNotebookClient`CommentInsert[]), Evaluator -> 
              Automatic, Method -> "Queued"], Alignment -> Right]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.80294, 0.80294, 0.80294]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 3145484069433207908; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[3145484069433207908]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqAIJQygMsQf39/d3d3BwcHSxgAsoEiQHFiDAkJCXF2djbD
DYCyQDV4DAFaZG1tjccECACqQXYSsiFA84kxAW4O3D3IhuD3BVZ/oRkCdB5J
JkAAxFNwQ4AhT4YhQF3IhgBjkAxDgLqAeiGpEcgApgQyDAHqghgCyhoUG0IV
l1AxTKgSO1RJJ1RJsdTKO1TJxdQqT5CdREnJRgYgphgnprQHAMBNTEU=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJytlM1Kw0AURoPduHTnui+hDgOSksW0GwMxWWSZYFqKkEJaiO4EX0J8AF9T
T7gahmjs0MxlWqbffHN67/zNy12yPguCYH/OV1K0i6Ypnu8v+JHV++2mrh5W
9aHaVM1NOUO8/P50/c9j4eIhsmkxBonj2BgThqH6Cfoo6C6QNE2jKLoaD0bx
/APhj7TWONW1zs3j9u71KXuXRh8FnVE8dko2BL4QlrdJm7295B+/Gzqjwunz
sSFSBZ4/p9tNOPgHENKTKsZyGOQjdUlRPYSVR6TqowRpOPEzy4awg4isniME
J35mMVdOIx1OAiK74AjB2ZWvlEC6qzEZ4iUTj2viZXe8nBMvJ9bX3fFyi329
J3ZKU162E8LlGXd57b8AKuPmMg==
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlD0OgkAQhYk2lnbW3sLW0lazDZ1G/KHAZDURr8AxuAANp6DmCJT2lPqZ
0Y0xChvZl2ges29fZmZnd7w6zDc9z/OOA/7my/NU6+VlMeRDRcf9NgrWs+gU
bAM9WfUJjp6/B7+1wUYDVDf8MonjOE3ToiiuL8CJELcx8X0/z/OGtFlF02Ci
ta6qikhd11mWJUmyewFOhDiraFB+NcFfHMqyDMPwa/nEWRUfk8+7iVSBprWT
4oP+w4SOSRW/cvjIR+qSPhsTOg+h6lYHAUr07Ho34QQhdM/SBCV6dsFlGiFM
AoRTsDRBiZ5dYvK4Gp1NnGTisCdOTsfJnCgXE6sc3R3l4habfDq+JwYdX7Y/
0JC2gc1rfweIxIKt
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True]}, Background -> 
         RGBColor[0.33333, 0.33333, 0.33333], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.33333, 0.33333, 0.33333], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.055556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.308}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.308}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa
m8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5
N5G6
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
N3kqZvY=
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, PlotRange -> {{0, 50.}, {0, 50.}}],
              True -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
DcvuuIyle//vxt/PCE6d
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, 
               PlotRange -> {{0, 50.}, {0, 50.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell[
    StyleData["FileManagerBMPIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0,
              2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
             0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQEiDhBawAGVr+Cwm1VIxP6ZBJyvW3ExfIKZlEPU
lJsKk3kUHNbt4rs6pUXaYdetrr+p2+UdTN5buLpPknF4tX098/M3cg56xw5Y
9eXLOszamGFlLSnnwPR3X/3nR7IOLM97NN6+lXGoSH+7jfusrANbyvry+j3S
DvZPZ+i8Oy/rkLYqISSIXdrhdFOnfdcsWQcfpitXNoVKOWQJq3+3NpF16Ftv
u1nlgKSDuxWzsv5pGYcaz+QtfVqSDg/fi29WtZZxWBTbOmX+FgmHrI+aDMcm
Szu8yWzfr5Yt4TDNuTvnebSMw6EPgoaqRhIOZ8/z+t7kBJqfY7eOd6u4Q+hH
t2cT62Ud5jg9Ny3jFHeI32r0cPovWYcgvy2rJwSJORTlCb+bainnsOOHCMPj
SlGHxcHhdqeN5Ryivu681TVXxOGVbF57m6ucA9eXThvPKGGHU1YysUtPyzo8
uaB0+6eckEMmMBRknso4OO1ZF7/BWtDBtPJU1q570g4cRQGHfKIFHDJWBHoY
dUs5PEh+6Sx+hd/B9HrmkqVGkvD4AQCmgKFd
             "], {{5.49393, 6.2940000000000005`}, {6.24061, 
             6.2940000000000005`}, {6.429096, 6.284750000000001}, {
             6.614185999999998, 6.34661}, {6.759240000000001, 
             6.467319999999999}, {6.890777, 6.587419999999998}, {6.962032, 
             6.759840000000002}, {6.953660000000001, 6.937759999999999}, {
             6.96995, 7.11698}, {6.9035910000000005`, 7.293840000000001}, {
             6.77343, 7.41811}, {6.613585999999999, 7.530479999999999}, {
             6.419682000000001, 7.58385}, {6.224849999999999, 7.56911}, {
             5.49393, 7.56911}}, {{5.49393, 5.8706}, {5.49393, 4.4308}, {6.31,
              4.4308}, {6.509734, 4.41999}, {6.705573, 4.48902}, {
             6.854379999999999, 4.62269}, {6.9925049999999995`, 
             4.761840000000003}, {7.065081999999999, 4.953080000000002}, {
             7.05406, 5.14884}, {7.08081, 5.3499}, {7.011307, 
             5.551820000000001}, {6.866472, 5.693819999999999}, {6.721637, 
             5.83582}, {6.518383999999999, 5.90132}, {6.317889999999999, 
             5.8706}}, {{9.131169999999997, 8.}, {10.356000000000002`, 
             4.736610000000001}, {11.5814, 8.}, {12.221939999999998`, 8.}, {
             12.221939999999998`, 4.}, {11.727999999999998`, 4.}, {
             11.727999999999998`, 5.557409999999999}, {11.774239999999999`, 
             7.238630000000002}, {10.544139999999999`, 4.}, {10.16581, 4.}, {
             8.937809999999999, 7.231200000000001}, {8.986680000000002, 
             5.557409999999999}, {8.986680000000002, 4.}, {8.492740000000001, 
             4.}, {8.492740000000001, 8.}}, {{13.799369999999998`, 
             5.566080000000001}, {13.799369999999998`, 4.}, {
             13.305440000000003`, 4.}, {13.305440000000003`, 8.}, {14.68744, 
             8.}, {15.04065, 8.0207}, {15.387580000000002`, 
             7.899980000000001}, {15.65166, 7.6644999999999985`}, {15.88797, 
             7.431630000000002}, {16.01454, 7.109539999999999}, {16., 
             6.778090000000002}, {16.02146, 6.443669999999999}, {15.8971, 
             6.116339999999999}, {15.659, 5.88053}, {15.38536, 
             5.655040000000001}, {15.03595, 5.542569999999998}, {14.68216, 
             5.566080000000001}}, {{13.799369999999998`, 5.9969}, {
             14.687369999999998`, 5.9969}, {14.908019999999999`, 
             5.982140000000001}, {15.12579, 6.053599999999999}, {
             15.294799999999999`, 6.1962199999999985`}, {15.44357, 
             6.350040000000002}, {15.520309999999998`, 6.559620000000001}, {
             15.50604, 6.7731400000000015`}, {15.516169999999999`, 6.98493}, {
             15.43995, 7.19177}, {15.294799999999999`, 7.34633}, {15.13914, 
             7.49474}, {14.93073, 7.57494}, {14.71574, 7.56917}, {
             13.799339999999999`, 7.56917}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerCDFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 3.5}, {17., 
            3.223860000000002}, {16.776139999999998`, 3.}, {16.5, 3.}, {4.5, 
            3.}, {4.223858, 3.}, {4., 3.223860000000002}, {4., 3.5}, {4., 
            17.5}, {4., 17.776142}, {4.223858, 18.}, {4.5, 18.}, {16.5, 
            18.}, {16.776139999999998`, 18.}, {17., 17.776142}, {17., 
            17.5}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
            1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
            0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 
            1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {
            1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, {{{11.76489, 10.215}, {11.80176, 10.266810000000001`}, {
             11.77555, 10.604633}, {11.58396, 10.907632000000001`}, {
             11.290009999999999`, 11.076163999999999`}, {10.99606, 
             11.244695}, {10.63778, 11.256947000000002`}, {10.333, 
             11.10889}, {11.05187, 11.20557}, {11.479730000000002`, 
             9.99811}, {10.727409999999999`, 9.33197}, {11.149809999999999`, 
             9.52223}, {11.50957, 9.82843}, {11.76489, 10.215}}, {{8.1958, 
             10.303830000000001`}, {8.202184, 9.241180000000002}, {
             8.904717999999999, 8.30847}, {9.924319999999998, 8.009}, {
             10.0459, 7.98489}, {11.0395, 8.27055}, {11.746269999999997`, 
             9.149949999999999}, {11.81152, 10.181730000000002`}, {11.44906, 
             9.569830000000001}, {10.80329, 9.1811}, {10.0929, 
             9.147189999999998}, {9.307032000000001, 9.191650000000001}, {
             8.59527, 9.625599999999999}, {8.1958, 10.303830000000001`}}, {{
             9.91321, 7.952940000000002}, {7.39209, 8.45477}, {7.04614, 
             13.89722}, {12.13989, 14.18054}, {11.451440000000002`, 
             14.616627999999999`}, {10.66164, 14.866693}, {9.84766, 
             14.90631}, {9.270579, 14.904569}, {8.706776999999999, 
             14.732987000000001`}, {8.22656, 14.41296}, {5.411620000000001, 
             12.47095}, {6.03, 7.93628}, {9.538089999999999, 7.93628}, {
             9.65967, 7.93628}, {9.784709999999999, 7.941830000000001}, {
             9.91321, 7.952940000000002}}, {{9.29089, 10.69141}, {9.25389, 
             10.639469999999998`}, {9.280137, 10.301669000000002`}, {9.471731,
              9.998700000000001}, {9.765674, 9.83019}, {10.05962, 
             9.661680000000002}, {10.417869999999999`, 9.649429999999999}, {
             10.72264, 9.797469999999999}, {10.00376, 9.7006}, {
             9.575790000000001, 10.908}, {10.3281, 11.574259999999999`}, {
             9.905787000000002, 11.384055}, {9.546119, 11.077912999999999`}, {
             9.29089, 10.69141}}, {{12.77489, 10.73059}, {12.771159999999998`,
              11.738362}, {12.10084, 12.621973}, {11.131339999999998`, 
             12.897090000000002`}, {11.009269999999999`, 
             12.921389999999999`}, {10.0158, 12.635689000000001`}, {9.309201, 
             11.756293000000001`}, {9.244139999999998, 10.72461}, {9.606552, 
             11.33644}, {10.25222, 11.725138000000001`}, {10.962520000000001`,
              11.759090000000002`}, {11.69498, 11.721043000000002`}, {
             12.366620000000001`, 11.339892}, {12.774899999999999`, 
             10.73059}}, {{11.51758, 12.969909999999999`}, {11.396, 
             12.969909999999999`}, {11.270959999999999`, 12.964357}, {
             11.14246, 12.95325}, {13.66357, 12.45142}, {13.741819999999997`, 
             7.11825}, {8.91577, 6.725830000000002}, {9.60423, 
             6.2897500000000015`}, {10.39402, 6.03966}, {11.207999999999998`, 
             6.}, {11.78508, 6.001780000000002}, {12.348869999999998`, 
             6.17338}, {12.82909, 6.493409999999999}, {15.644409999999999`, 
             8.435419999999999}, {15.025630000000001`, 12.969909999999999`}, {
             11.51758, 12.969909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerCSSIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0,
              1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxdk3tMUwcUxmtZNl0M0Mel5T56wcyCDxwzSLvSlW9EGUKlDogymTY8hrjI
FHFs0SCyDIaADtRBZMjDuDpgbRgspLRDIqIgGW0zqnF00IVNRjMU0slkQ2B3
y/CPneTk5PfPSb7vOyc440jSO3wej6fk+p+5yLsameclYD7PUMVmKVZYe+By
JiIlOPN58h3eTwTae6cb1N8R+CFa5/P8qwG43ki+PJYlRgW/cJ3OG4B9WVFu
XZgIRiL3XH6FBI9J6/a5SCHaBqdOv1Qvhbb5d9J6VYDXmg4PEdcDse/+iG+R
UYA6e7dr7gqJoZsxxkMNAvR8knAuqoTCqDIjTPNAgNiYNNsXShql5XlL8uNC
tL9574h8koa0w3I3f6sIbwmbDDW7GGR5hyMVcjGCT/Ys/LyfQXxvIaMMIXDr
imc6azf7jOXuw/mZKhZxlmzvcJcIihuKXY2XZXDsnKH0aULc/fXdTX/UMsgO
nEiV7BVAGxF3I7mMxqmWRgVxyB8flGhSb8sptOeoogJ/9MNzmuhKf04P79/y
x1bafhCMFGZR54G1D/wwa0grKPs0AJOdar9HJn+Uk9qbs9UEHl30vbf8pwD2
+rkNA8fFMHgLPh75SIRjbPc2z6QIX95OUJxJJ/7bK0bO5jpbYqzkGY/ufsXm
7pdCNsF2PZ4XofSr9+bqxSSeLivT+5RiVHJ2iTMonHg6boi2iuG8lRtxupbG
X/Y6tmgDgUFda6GqgUHt6pTloAkCql+yzauKZDh/akF11MblWaFbFS5jofB5
uyrMKkH8luXgxS4WXzOV90McUixMOT+z84OwduaYwO1Z0R8E/Z7Q7xe1FGLX
v8+vWx2E8PSITa5rNJRtmr1p1SweWtfNu1sZqL0v+Ng537cXa6pDWmQoXVqz
Zc9FBs2W7nmXhoXT2HBhXEHjLL416bn8Npo2LpgGSUxJq3rGuXxXeHrziWv8
RAbmJ0fv5A1QQFxAePFvNGZto7kSC40c00hcwg4aNWt6nfaTDCbVmfqOZgpl
6p2WbKEM/QVPeGMDJFSh6YaHehkKO4fPejg9SYnftFUlyVASqnfE9Ekx5Ztx
8MX9MvSVJxtLWiRo5c6hxcFgorVjppwnwYcp2153jtHwxKam9HP/0U9demOp
iULNkEuQ6CIwFH8hyRFG4v//9jeFT3Hb
             "], CompressedData["
1:eJxdVGlQU1cUjtRRRAsJSyAkeXnv5UXEBRAELFT6iRSwg0QRRREEMyguCClY
QKUsLTXUEYG61G2wiFQLKorgiBsuuEWMoGg0kYhSKBVEZFNQoI8u/uiduXPm
3Jlzzne+851LKeKCVhpxOJxg9o5Yn9gtws4nDALcf5wded0ajwqVs0yiGYz+
dNAiLMAGg894VsVtUjgnTaMk5TbYlOWbxF0nxd9x/TagBfExs7ppDHQZtRe6
CLDyedu68O9o4MbTiswDAhgdlPgaS2jkpr73UDrYYsRoGikEujWbvP7JFpPO
OXxovEDhTHPY1pLJQniZaAuVFyl4U0amBWohfM90D9afpRDcVLS/Ol0E+c5M
H52BwnZFZdFDJzGq5iz4Rc7Q6HEv4I46IgZVvet0UiIN/q76catpAhdjeTZt
ehrHRKFRnhEErp4Pq07yliIosLwkN4iA47sZdo5lUgwtu709O5LATd66N/Yk
A4fPOnaa8gnoqsruH97AYKt9no/j92IcO/44IrGKwctlLRuWtovwlTbg0pMW
BjV1TW/dxCIoR4A/Z+DrF99vNleIV53aqGyd7KNvvGhtH/QyiNpeuNmSIrBZ
AmIuyZB1zgxru0WYahqd6qqSIbk0dG9niRgEf+287kAZ/PvnVsijCSTK2ZdB
Bi0+503shwmU8bK0vfsZBJnVtZoqJLgh3Os35MTiy/vCJlkjweOsSFHYOSne
39DmLzUiP/bP+fuQiD3uaK7bR8N0fMWvG8eSmJl6dIaij8I2K9c9Wwok//ZP
wStk2amqGgIr5J4fXEdRYDL9hH4TCMjUhiBNFQlNx+1r3q9EWK+2MjRfJSHK
SA6vuixEoLWi1+8yCYVVXBRRaYt0bbRmoIfE7j+uNCw9L0Dhktg1rsEUnPNn
zxkeLUDGmP0eOToKIraNSNIGC06PDc3YSEMjTXPqTLGGfgQPI0W+b+jkODtr
NIyvMfnykBRn/7yXeriVj1QPwmW+gMEJb7W8+Fs+Do3kz2RQ/nprY1qbFQw7
VD+EXmNgmN0eUJBghV69NiOBnd+YB04pPjWWKJhUa9f1OwMP3UzFNMISDXcX
iuObGMQ/hz9faYGTmunk5osM2gsXhnjdMcdLL85v81IYTFXxn2hCzPH25uaH
aoYBE+7Sv0rPw9g9/aapLP+37io/8TrIAyFkiZFLEfr4gWnacR5axEda/R/R
cAve1u1ewMOaUi9iYDmNWt16631tPIRQzXYPh1i9F5mFz08zh73UgZNdTCEl
O/zQpvEWiNDEhLRupv7RkcECLzynt11Pp1CvcjgaV2mJ9PbejhwV+dG3j6j1
NtpCoix+dd6rpxbwdy5JOltE4t1CdsFGW+Ba76SwnBckdjo96CsNMMfAaYk9
LaVwLGHCreU5PHR4CLvupbD7esl/9Z1+Lnp/btihaqagKW3hXDnAxbSJbhLt
YhqHi7oSM124yI8c/ib2Pg2OcUvrm/dmyL3KFpD/pz8uVg3Vua8ZkCJ3XFX9
Pb0ZYpI3FU0tZGBpwlMaL+KCqfyg6pkig/N8wbCXlIchf55gcYEMBEubwzMe
nKtPOcQ2yaCWTPj87ZA5lhx1vetpkKFsZN5TLKG8/fWRDY1sfDy/r7zJEhXB
hu1KtQyRzbW0fq8V8lawwsyXwfvCiYiTnnzk1e5OsI+VgZb0xCxu4GNidp1H
8WQZLr+piN4dZY3//5d/AbYWNr4=
             "], CompressedData["
1:eJxdlAtMU2cUx0uV1xDa8iiUtpeH0nt7L7IKkyJu+Ee7ollxgiiKOpBUp8YB
jhHRuOFjTkEUfKGIlPEGRUHCDAiCPHSohangxkBFBRUFBKcwGQhrp3PJvuTL
l5N8OTnn//+d4xQeGbiGzWKxgnRX/x7QTo2TXWIwt+psaMlsPryo1Xn9SQyM
Iu42Lb7Lh08il/hKxSALGY2H1bbw1f8bpaGSx/uGXbbFYFaxY9NeGj0rHn+z
XGWH4nOfBUWa0+Bf4e8Uldmh6Wnp8bZEKRQRPwgHR+yg+nzZQwMbKe749qky
PQRw3zzdySGHgom6eHPcSQEm+vwSGkEh+btR7yg3ewQsLDudzKaw0PPRBwOH
7HE1qLYg5x6J1pRo6VlaCAOr8hh5J4m5TmyLzGtC9JtXy1LbSQR15aY1bBdB
SF8ZSWNROBBekXtbJkbVwS3dHCWFV/JMrkG+GGkeWWXy4xT4R1tN1zkT8Elb
knH6DYUiUYh6diiBS6a7TbzUUgTq6wgk4D7p6IuBFinGV1w9sD+MQH3o4ZnP
fGm4zXp+xIJPoM28g78mhUaC9KDiw11iFIyycjwf0Him16dPBKVLDPuECQPt
za4/PcUidMqrh7VsBkq/r0c4C4To9WEV+o/9FxtmH/I2eMNA1PvQ095RhK66
Hcmu9xnsvcDBhpciSFcm1Q0VMIgtDkkdPC1GYZX4QVkUA/WpsKDALwlEpytD
aAcGRH7PfLcJAk7GLtqyizQCOTd7LMIdULe+dl91oK6+g3PsYpsd0CwIaBfe
kWL0ym+a5WzH9/2z/jmOKMkXj5+oorC9VBoca+yI8lN9lc52FKLUxMiuTId3
/ZPwCV5xrkZLwPZF+vEhZxLTvvcT+k0hsPhGv8v+BxI0P79aP7dfhI6a0ls5
3RKIdsSuqrkkxNhoopnxQwnCbSLVRIU9XsZ/vOACn0TKk9q7yysFyMhLOTMU
Q8Jd4ztvYrIAW47te71wjIQo1W88zNEOpks2DCONQrMO68Fttm/rUUqh0ckQ
Sdoip/v2LKMGKVpPPBbn9/Cxda9yM3c2De3L+8+LvuXjR33+XBplAwn343pt
sLs3oJx4RMMuR7AvL9oG5d3li711/jnr+9FaY+2McyPlRgy8273CpxPWyPz1
owEvQwZLZXShVZQVgiVjgXM6aZT6SgSzrlviSSLVb66h4bqH/3tzsCU0DkqT
JCWNaas8RtZ28BC7Ndd1nk7/xqaoST4ZPERu60912SRFSFuLRdwZHv645R/O
fU3BPjsmaGYmD17uSWO12yno7TjWy8OpnQEL0h11vOdyVi2Ks8TR+VnHArQk
FIxMHWNmhU/0fKeT0E/rxntWyFdYXkzM0s3THreCyAprrI43PuJfKHkfV9RV
rmzIl7zV844VuGY/5W35WQJrw78UmslW0OPpP5nEEVnLcLHKEu2LZjR3KkgU
RU9p/CKJh2v2Q9z9GhLnq+evuz7ChV6eT411/hQ/ZtWe5KJcq1sQsRQ2zrvs
FefBRfayiPUzX1FozNWRNcrBm9bYp5JN//LHRWmWUYtMRCPZtKb1lw4OrG8o
2gYbaMgqSY7ZEi6KQ0uE5/0ZuC8STPhM5SF+oKHItp4Be/hmIdPJg6p+kDfD
0BVnI4ZOvhq3fJfXFaV6vxlrJDSWJMjZruDXTiwt7bKGjsoweR8Dald29+1U
G/x/X/4Nxp4vbg==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAEFBwht4IDCb0Dwg3h/2248ZuDgafrm+xEp
eai4IZSWQ+OzwPkFU9UFyk4xoskzwM2D8VHtg/IZeOD8Bv7pMuWnONHM40Cz
D8pvMITzBeRyZTYeM0RTbwQ3D8ZHtQ/G14fzl0h9q07q1UczzwDNPgMHABhL
Lgc=
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}}}, {{{16.75, 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}, {17., 13.}, {17., 
            4.25}, {17., 4.111930000000001}, {16.88807, 4.}, {16.75, 4.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {6.75, 
            16.}, {6.888071, 16.}, {7., 15.888071}, {7., 15.75}, {7., 15.}, {
            16.75, 15.}, {16.88807, 15.}, {17., 14.888071}, {17., 14.75}}}]}, 
          FaceForm[
           GrayLevel[0.89804]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerEmptyDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGZigAMHMNlg4IDCZ+CB8xv4p8uUn+J0KJiqLlB2
ihEqzgGlWVD5cHM4HATkcmU2HjNAU28INw/GR7UPxteH85dIfatO6tVHM88A
zT4YrYCd34DgB/H+tgWZ42n65vsRKXk0e+XQ+CxwPqr/YfIMcPNgfJh9ANTj
LzA=
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAEZBwitB6Eb9OF8AblcmY3H9FHlGQwcgnh/
2248pgvnQ/Sh8RkE4fwHh1WPzy0SQDNPAM0+KJ+BC87fcUqYw/opB5o8B9w8
GB/VPg40czmg7tVHMw/mTi40vjScv0TqW3VSrzSavAzcPBgfZh8Ae5IxSw==

            "]]}, 
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYCYt1Nc98vTzNyYAADHYfN1Z82BKwWhfPvbm2p
ubBZBM633HKibN99YYfGqc7dOcu1HTq+3L7euFnYQXFDUcZEXW2HzTyFa7pv
czikSj6KEN/O4/C99MEcwaUcDhXcKhp1PdwO6VefZ2l/43C4og1SweWgeVrg
+K4dnA79Tz7JX8rndHhzwFLZq5rLwXNug9qhNg6HOO8T7LazuaH2czhccLnx
4cspHjg/Y+LbGvupBnB+7vPfKz9eQvD5QB5kN3To/pv6/Ukip4MxCAgbOsx+
Jrv8hQe3w4/gx0tnPzFyuO/fOz3vkpaDKhvQZ6+NHF6qGXKskdF2eFglss79
oZGDS3fO89+Z2g6aMf2Hvp4wclhSYMt1fbG2QyGI2mDkAHKG6T1tB5D27h5E
eKKHLwDeAYl+
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYC4uKMiW9r9hs6aMb0H/qaoenQLnbz3HdjA4fl
lcc1rS4JOJROlmAJ0zNwSK6/aVsZIQCRFzZwYAADAQeX7pznv1/qw/mTTtd7
7P8rCOcfcVqbeW8jgs+9dVnl8UxBhyD1BZ0bFAUcZpXPWaRsKeigsvNP+5do
AQctK6AJHIIOX70i2yymCTj4JQlEWH4RcLjHxNkl/1jA4W/7l9vXGQUdgLLX
juoKOsjUJBqFGog7XF9cYMs1XdPh6+3rjcVu4hB3XtZ0sEh3yczfIA61X8th
4/4382x0JOD83ul5Qs0NhnD+r7qsPSWTEXyh5gOnFi41dDhZtm++1HtNB5B3
V240dAjaIdf6+qKmw+mFrts+7zV0uP0TqHGLpkOnY8LTC4cMIeHWp+mAHr4A
Ca2MUA==
            "]]}, 
          FaceForm[
           GrayLevel[1.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerGIFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}}, {CompressedData["
1:eJxlkmtMUwcUxy+Cz20t7eU+2t57C04DZAkGZUWdYf9NpIjxscocoqKiEEtQ
OiQyIgpzW8IcakDdCji0WkGgIZEMQWVgREBBeUatU5GHgHagGErRCnYwIvuw
Dycnv5zz4ZzzOx6RcZqoaQRBLB6PiWz1N7g69SkRbKrJJ74joWxxORy2Uwlj
3cvd9jYpMpffuFPwh4A5EVbKuFGKcHObKGWAR9BEPyvFdHmsZZmdw5WMpKfi
Wgnuq2q6z9oVcK8qe96UK8GLE6J7jjdyxBy68JYwShBpj1iu65eh3v/hI/14
fcQj7rK9k0VYjSJL3S7BY2/e5BhisC9k5t+OzVKkLvLdkkYxuGb0DVfflWJ3
z3zH8a00LLNXLTuTTiLH3RJAPKcw917XeiLWDaWVwbsatBS6dL3f7N1GYaxL
c/KSFwXdrW/zE3Q0Sl4e7kj5hELsxDw/MlMcxpS1ELksdty56Z4oodD66fG4
S0vkeNW6OtJVT6FXPCN3f5MCaaWv3YhzNA4OZM13msPDW/xBad5lBrrGtNZ2
dwER+6NXpi6VIU+8Zd2TEmFy7xtyNG+vrCByBNSyYXWvnDkEekwTGQoFKBpH
Y0TgsaFi/IBrBfzrQy0g29llr1XPwy3ztoX3USKkZ2BWfg+HblNa9rNqJcK/
9yja9FiB9/4ift8B2xU5/Ks/ej3qKkwx+Ve8T81dfnIeDYeynI6cvK0cCsnm
QLOOR/SZhe8O1MpRvGf4lDWAh8GQcuiXUhl0bafHgr/i4bXPTzRcxOLC0qfR
5Z0cWrpHVGNvGFxPTnKySTj0+dYvWqBmwLb3zK0kFUjUVm/XDtIwbQvVeHbI
sKYlY/M7ZwYfen9eYCtgp1g178VFq4HBjLOeUZohGs3pK9oeaGnMs0w/3RvK
YNfK1OxwFQWzOr84mWahm/V1jA1uaFR4/pTUxMIr+k+2XksiqqjB26lTBvvB
mIqEISksJXpz8qgcRz87/8OwQwrT27ovE/QKZDakBFeNSeES//PHYj8OxX3G
kSNiEr8GJHxxoIHDmoXxtM2PhHnQGrIxiIe9XBWavp6E+DcuMaRs3M+zilqf
DBJrM4uzkkkBQceePLT2/ce3z5cX9l+lJ//9gfx/HDhYdbKfZad8ved/AFKJ
jN4=
             "], {{9.72359, 4.45312}, {9.264159999999999, 4.45312}, {
             9.264159999999999, 7.6084}, {9.72363, 7.6084}}, {{
             12.973590000000002`, 5.846680000000001}, {11.51221, 
             5.846680000000001}, {11.51221, 4.45312}, {11.05321, 4.45312}, {
             11.05321, 7.6084}, {13.21044, 7.6084}, {13.21044, 
             7.268550000000001}, {11.51221, 7.268550000000001}, {11.51221, 
             6.186549999999999}, {12.973630000000002`, 6.186549999999999}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerHTMLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           FilledCurveBox[CompressedData["
1:eJy9VNEOgCAIxOhH+qU+wcde+v+3XG2tDkF06kabhsBxp2zx3CMTUUjfsRDd
65UD/yy5YQt/PC6Zx2ky6q1il4Pw7+FaJE+s5MHZXbYuJMz2ooG3OZGw25gH
GJC5Wb4uNiitv7qUw5BvHAwNVRGA7YIbqzU4QS//A9dwNtxb7cl0FNQvjba1
h3BxtoxAbktjs+oZkhPYrmpQ2gUPPRDZ
            "], CompressedData["
1:eJxkfQV0FNvSdXAIEGCi4909g7tbAhuHAMGDBwgOwd3dJbi7uwR3D+7BITgE
dwv27+qe+/Gv9e5ab71XryctR6r2rtp1rhrZpXbrZF5eXkn4nzEpvbyS8r/L
fGh5rmnazEhXNXhJlLcZP5a03fYyWWZc2P47Z870ZkTn75Nb/evG3WXnUs5N
bkaGtxdud/rmxtcaXbcuS2lGxN2Kyfq+cmN8cJW9bUxmHN+ap/Pyh24sy5hk
TM3MZsw6cydT2B03Xjb/vfhYsBnxk7s2en+F9/vctnTt8mbsrHGyZcozbuyu
MDd9gSpmxD48t/nZYTf63/9+u2BVM1pML/xS3evGzc77LjWpZAYty72tbvxa
++FK9bJmzH1f9ff+tW4Er5unvCxlRq+6hcvELeTf/4pfVbqkGY2v7n/sR7vY
p/XFUdOMEk/a7E4S7UbSNOOdLcPMaL7qTbOG49zovWfsu+PVzPg8jh8y2o3E
fnWmepczY23lUVtHDXUDtcuPrsf375sy/W/fgW7EzLk5sAnv3/vgYkveQW7s
f1O2x8KKZmwO2eYG7aDk4T65a5uR8mq+geX5+y0X8isDmprhdrVtUWOAG6GZ
zOEf2pjBt1ns7M3xiLgStLGlGWtuJdt4uKsbOzn81TuYUaB7wNftLd14/2yt
z55+ZvjNj+5Yrp4bnX0ynrs8wowbO7NtK1PRjb11SjT4O8aMZrzN8hJujG72
8nn1UWZjXgq4kadywYDqbc2Y09k04nAONyb/OnK4Rw0zlu0Jc+XO7Ma5CgOz
tgkx48ntmvkvODlfz6tXyMHxeNOq64z9FjcuONqlGE1bXm+KvxsLBm47P4nz
laT6yPQ1MriRY/DEPR1pT7l9/PRvHzeut1+x8mO4Gf2/nRxwzduNsQNyDUqI
NKP9z/rh85K7kfFOQOsi7cx4tP1BhWZJ3Bictc2BIH7vm0XBueISXcgV+2N+
TV7PLOP104WRibOKN+1txqqsuT4MTerGx6cpblZabUbxF4Med+TzVyTZn8IU
Z0bdnu7ZfxU3svXrNTnJDzP49iVO0j74YUfbWcktyJbwdVpskBu5SqU43Del
BQdW5G9Uid/jV2Lz1qp+FsTmqXWgcEauj7+NT0/ObUHKfS3uLEvH7zkzstnL
ShZjfPk9h5dPcl2PtKBBcv7wjwttHD9GDGtrwaQFo0LevHfh9sPNpy0zLfAd
vHZx0acuhNbtkj6K9rH3mfJnfuTCkgo7P/2eYcGfcolvXj1w4f2V6pEZ51gw
qvzt2MU3XShfaO+Im3MtUM8Ebp9yyYWkcXExOxZZEHfr9INsp/k8+WeVBQXr
5cux9pgL+dZ0mXt1pQUXfnXwybjfhTy21KeT8vq3PbfH/97hQsC2iHRPV1hQ
tOFyx7KlLrwdFt781DoLVhy9WXbKCBeObtzXb91yC6aV4IwOckHf6Of/105s
MfJ9ux4uHFe2dG93md+T/vuvfN35PUX91+a7bkH2EtPODmnnQuoL5lq3f1pQ
qCrfPJLvU/ztDJ+vFoi7SFuXf2/KkG2+yQptcq9u1uouPGma51HJTFbkXd6g
c/sKLtTe7Rj1irazYuroIqVc+LOfO5F2mmVvk00p4cL+s1ywWawoOXZh9p68
vt2N6rlLWhGWstLp9QVdCHrepaxa1oohlQ8NsmdzIYe8V2UrPvYeeXV4oAtN
BnoP/VDNiqDiaQfczsTvb39kwsFIKzq3L+x+Szv5Yj65ixV3vlzxSxLgwozY
dvZ6nay4f4eOy+JC8P0ak2Z3tiIkV9y8Z3YXuv49Ezq9uxVxfQbXGs7fH67c
7uyenlZcDMjYKEMGF5YdG9gvSW8rrv8tfm52KhcONjneJ5J2lqALhc95uRA1
5lCWjvz9uo8hrkyJGup67z2wopsVR20hg7t80nDm+zdzIJ+35bTlS8Y3GmKu
rPDr2diKL3duDOvxTDP8He2BLQrUy3dbM76zvhUH883NEXRNw+dTznTBtAdd
2tbwy2kNVwpP77KzoRXZbter/IO2aWnoeUc7KyIONS8atU/z+AsrZJdt2qDh
a8NFqfrQDmkxLtWMhRr2z19NV2pF2l4NHs6arcG7U/HZjzpYsT2gzdKF0zVU
i1jYEvy+/BseTTpHO2jXZa/44VYsbFdffTpGw5KXU+Y/HG3FqOix2af21BBe
+UeVHdFWmAt9rtG1m4bBhVOlfrbGil6/h9/b0kmDz9Py+7zXWrH4ab+ufdpo
yCb+hnan8EGbdkb+ux50Zlxvf9p5Gr+aMHKWFd1vmD6W6aIhIf5Y5pMLrYb/
6M7xy16/7+wJVjS80a74pY6a4RfHW2G9HPLK0lpDlq6vOi+iXbLjrqbtIjQM
lHjE3y+W9w7XYMt7z51ymBVz0hc4faqKhhUMj61GWrFTj2MacPbTg7dRHN9N
OX5uqqxh3pfIbFkbWfEr9saihrX5vcNPPDxXg/NbKJ0zUx0NLyWgBPN7erTs
f5TXKxbL3fdyUSs2S9yorqGmK/fMXS6u/9Up8iaG0jb/LfVYs+JRg8Bdl6Eh
McOLXZt5vXFI1gNdgjU86u+3qVIZK0oxHFUP0TDeUu3Y+1pcf/eCr6mlNSzK
M2Hcec7nldr9Sh4to6HRMHV940FWfNu8oVD2CpyvmL3Xekyz4sChMgO+8Hs6
fMjuFTvdirl+zsVT+D7IVyn6/nyuh/n1Fq+nHbZe7Ra90oqs5Q+rdfn7oVmO
jl69y4qtd690qMz32b97Usr3O63Yfe5FzJxiGopYDjdWlnL8b171GZKb4/2t
pF+KeVYMTXN37/xADVrw7WKRk6x4/eVt9DdvzROXrRjxZYjPpy8qKvIxa/tZ
0WxvlXRJX6l4JNuR+y9gf0LOyo9VnJs8Cfu5X053W91zS7yK7w56oLpWqNMn
Lhh1T0VEgO/86KpWzFLpgO6oqPl95eD4Qlbsp7s/d12FIs/PbUWhGwxkV1Sk
a5m2jE8OKyIJYwaeVvGrMB0px/9a5apP35xS8cD/yN9w+rPEXBdH7DumonnE
0EE9vf/ZxWTheVlxKuLdn76HVJwRx/Tbgu7jJz/5SPvZpsxPRvyh/5R1vUfF
qU6Fhu7i7/V5jlFh8isde/eLBTnOZjy5d7eKNbM2fqmQ1IrZf6cM/rlORRjh
2xl/qxE31qroHFMxpHw5Kx4/GTxm2RQVjAKtv5W3AotPTV8xQDXWK+21+XZm
fNJVxd1nsZ9HZrbi6sQKV281VHG4ddjsE24rMq/blXJnqGrML6/r+KUqn78i
DL5cXxP8C88ZXUbFnEIVX60J5ffuLlJ3YkEV15d3DfGmv5lQtED0L1XFQU7X
rZZcr7OJrGgP9fXO1HWsFV127skfQrv5gz3funL/1mkRpZ6ivUDW50krJh4c
Xqgl7cjJjkO7Xlghy90rC+1pU7dtSWXDvbODuvtlU3Fz9Phuf7LYkPPW1kxj
s6pYNvlkuroVbbje48rPWNqOoXFZwsL+2bLsqof/+32DE9a5lSJsGPohnSUx
UMXoZGrDw61sCJz3qtAVk4rue3NlKTLEhkbyh78ViFu+SrtknYT9sfEKYsuk
KdiJdkbBxycVfM446a3S24a5efMeLrVOQaj78tlstCOWP0WGlQpuNutdw0F7
5QnzsQVLFPRedanfpEE2ww8uVpCjQ770x8b8s4tc3lT2TLQNNeDb4thyBbLM
C86yQdxn+c0KppjXTByy2IYNG3ln2mfS1Y09tJn2hDvtvGhfis3U8cNpGxzj
kw7SaI+/8SVt78f/fp+y1eY+Q37Z0KHL+1GntyuIOZ7szCra7ZYU+DNop4Lu
Vxf/rvzBhhjC+yT7FazrMHzNTy87xD1ueqygP+HWrbR2jFnGFUb7YP2N1b5n
tuMHUXzSJ7R9CUAq2DGC0XeQv4oiXBZHmv+zTTJuff7Zo4c9jz826n/tibmT
F8/2UMGiu+9q+o21Q+DeFI6/z/q+rk+0+84vGuZ9leP5qe6YuxPt6FR3dbKG
nI9NeU23u0+2Y0CSr5fX7uN1iSuT7CjI1zi8/J+t+8+BChq8zrsva7Qd/Z5k
SLloAOeXw5ed73sxg2tkJdpxfV9kyV/ZjvcFibTaKyj0o818a0E7BD7fb8Xx
6n6oXC3FjsNZOsaVoz3r4sfg3VY7ehcoFhrRlPO/Zky7nqns+CzxO5z2Tdlp
drxMGtHmZk0FA+U9OZ755hwq+yyU87vke/5nPrRzrPW9VF7BMwmUGe0YV6b5
00sFFATvub80G+3vvR4syJRZQRYzgU2iDdX3HN3XxE/BPIlTP2w4db5rslIZ
FHjrC91m8KP0Cio/ZMDg+/hea5yscQoFF+genqSzgyTvar67TmS7H9WjpcUO
rSgRH+3DyTvfO8/vDRb8ddCJyYJ7a9pxmjDj2yYnks5LbV0Uwe+fk7uh/1In
knM7Je9sx8gLHV+bZjrRk9vwxmA7Qvo1WFN4khNbmm2x7uT4t+44aOqlWU6Y
jhJgz7JjXbnOo61TnLhNunBqhR2Ndl4PTMPfx/G17WvteBz2ovnvIU5kRAff
rLvsoNfE8OFOg18etyPw1oVvdUY4YTnRver6h3asHJtufV/aunv/Y0dU3/4r
c9HuHXl9wlKbAx9utJrUf6wTo5VUmc8VciDfsMZ9Ps1wYlrWKjeqlXKAg3/z
Pe0YCVSNHShbInjkh+lO+NWfOah+KwfcTU65dk91olHq7jWPRjnQazqZ4GS+
/4/BHfb3dKBRq5JEjk7ME/jU14HV9c8UOM7fR7oybn7VxwFGy7stxznhk3bH
qn5jHIiaXcQ2a7QThUZx4GIc+Pby8dJ3i5wQdzLrjgNECfWnxDpx7nqitvSN
A3tJYzfccOIoYVzjzw60+fVzYtrnvL84oAQHvjdIvJTiixP6cvvqQLUHRASc
788tzzWtmtqJojV6nTqfkfvlxGqvoLxOXClBYp1DQd2gxqm75+O8CwEuqCD8
a9NMv3g9vSUx6+5i3B/1Wt/3V52otaTGkyplFaypvS1VI9pP53fqXK0G75fe
//Gv3E7I6r3ZXAHJutda2jov60n/1G9S02WJDnB3t1g1ib9/vuLbpAxOAx+N
UJBa/JPNie1Pm4xfP15BticjFp3P4TT80UTP88o4kaz8kYnZxyo4R/i1IYTr
5HK3wjH8+97cFitpn6yoRNwYonjwkROn1vdId2qygivanR+DQ52YlDZV2Rj6
4+Ezy02IquTEhnu9l+7ZRH96MOfwv9WdOCRxkf6xSPCB2rP494NmPT9yb4+C
yeKXaPeShX+Q7798XZplYU7MvTd9zKgz3J8jRv9JQzt83ozhne/zfoTxk2gP
qX59zZgE7s+yzwv3zu7Ewj+vK43/TttU5XMBft9z++qEyn8UlC/OAEA7TPx/
MhW9xZGUcmLWzCwrl6T9Z+twsoCKLYRxKfi9Ou1lfHyyLubd+AcO5BFAU1jF
y3KBcbs2OOB1umfC52AVHzlc92Y5kKa6qeqZCiriCROLjnBgvfxZDdXArd0d
yJ/+WKXjdVXUvpa81rcWDtl130rSnjEv5JJ3NQeOP3t8u2YLFVdm9ci+KdRh
+E3iizmP+AK07yzccSdPTxU5VvxacbutA4fSjEpdjHaExP9xtMVf0m5zNO+X
T6scSCHzHqUiHy1thwNEg+tmtldBNnyw8ql/9uRp9Z8HXXJA0iMn2qk4/iVb
k+ikTvzJV7bv9loqSvy+Fe2XyYkTf2IGfKypGvmpCk5MHLlzQVVeX8TXKrTL
iaaCJ4mPGmVuYLuw34nADtU/TV7O8XgpmQYn6qRYPq3EUhUZ62jjIp7RT6Qu
NjLHShUp+X8neUM/wOHwo11z2qa5Az9xfc3ZN2vKZuKbbsU+rf/hxPLtRb8f
3U6b9OhrohOXScf27FUx5sfHpK+TKVjWv2Pz9ccZDzn947kvFxRctr0o8WXV
6bUvvaEdM56A6pyKMnGDvGqnVcAou3LwBdXA4fTjHYVH8u9rrBtUwuGrYIUQ
eNrZLmX96DYrmLtoCyO7ClmGeWmfkv1wUcWuXtz5QQq6SJy/rMK2M/eZKEVB
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
AP/nC/0B0DiClA==
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmIBKK1/V4WtUVTBgQEMBBx8fZvMlyRKO0wILlGZ/p/f
4e7s+wYXBcQdzDaENh19KOTwIOM4735rUYcNM2s2n/UVd3hiuv7VmjRhB43m
xU+u7pR2WLC2uXlvpohDvcGHO9UZCg4TxS89VDwj7uDy6+3rA5JKDvWNCg5t
etIOnEde/2I9reyQflnwwFklBYdQwTyjVT4qDhftwj7cjlByWF55XNMqSdnB
etUshVd9Kg6fVF7OOlmuBHWnmsPTT/KX8v0V4HwDkD+uSjusObqcQeK/qoPd
ZhWgX0QdlE3fJs2KVHZYoSR6TIxJwAHdvzA+mA5VdpDclqatf1LawfsEu+1s
ID/526a3W66KOxxgybt7llnJYeI1iRInDTEHp1kbM6x+yzvs21b363yViIPc
nblbb7+TdqgyuTr5Z7qoQwbX3Os3XMUdqr7FLFNrlHA4I5fB2qYj4vB/GsOf
4FnSDmbGQCAs6PBcvnbyMkUFB6HvEb8uqAo4aFy57P5AXcnhkAmPvOBloPxK
vp2SeioOfcrXHgU3CEPc3aDqkLM9NmNdsTicD/P/apmoFOt6VQe+22KpZi8U
HFazJeZ9F1J28PVy3D49RBnDvwBU6r8x
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerJSIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAWIQreD4MfnMXWkHLatJp+tPyDsY7Fbn5/4qi8Hvkk9+
F3VIxMHjYZXIOnY5hyX39/HNKRZ2mP1MdvmLDlmHDczPezR0hRw03/LuM5gp
4yC+/SLDPSdBh9p125LqZ0o75IaBWAIOGx++nLrJR8ohEqyA32F7Uv1N258S
DgxgIODQwuu/fspScYc9JZMlWK7xO6R9f5K4MEzMQSdV8lFEuIDDk+Z5Z1f5
izow+gJV6gs6aEtMvcKZIeJgbxq3y5NHyOHMu5OHnd4KO/hdnBjzz1kYaq6I
w10VtsapzSIOhjO1JKaKiMH5bqqlTLM4xByeXlC6/XOfsENUivV9f18xh9ML
Xbd9/ivkIKEWzLr4kphDua6i/JccIYc5RxQ2FGWIO+ybL6V/94kg1B0SDpZb
TpTtmy8I909km8W1o2sFHWRePzKTOiDpIJx4+LL2UkGHFce8zTsbpRzC+HQ3
zX0v6FB8XeiTI7+0A8camaiUaiGHdTfiy/znSTuAnNErLuxwZRYogKUd5tvo
AJnCDrD42rqs8rjmLhEHAIs2smM=
             "], CompressedData["
1:eJxdlHs01nccx81KWi3PzXPxXPyu1Amtm7Sy3l225VARpSKkqJzUqq2WiSLa
Gq3mJEORRiG7IOQRoiakVWs6OKZ1Gc1qrKto7ft7fs/xx77n/M5zvr/f8/1c
3u/X50uHblkaZmlhYeFHHuHX+oxu1Tojj7lxdxrSZimRbTepk0vkcXmUe8ay
LiWaT7xf9tidh8uh7BeTw1XIvEj9sK2HQ81uvdv6iypY7T0y/8tNHB6Uf/9m
t5caE9VHbo7uYVEzLnNqTqkalunW2uNBLD4oe/zq5gs1DKd6Frp0MbjtLATU
mOMyKL28ozorXYNvjKmHbF7SuPKosX6esx3Wxra576qgMfv80lT6oB00d1ao
yg/TMKV11OL3MSn5cWQfnOZlm9SkxY4lBmVEMo1OjlQWr0MVCRdVRuMdo6PN
mOl66Bvvz/n2NY2s2U430/P0KNsXfa1kJYOh/P4bixgDPFcmurVeYtBUP69o
Y5ABkd2D+f1TWJye3jJrsY8BCzZu6UvIZ9HgOeOLuSEG2Cf0+lQYOIQ/v7fm
hNKAVFJW92cc6p+OD/wqTo+0zbL42iYOuug1U5b16fCMvK57yon62utwNzfj
ItXHITOHPTf0oVY8P8gP79mOgZiIIR5uL+rWFVA67KzOIg7xYj9PdWLdOTxG
D2SvLynQY7LJUB4ThDQbDGi5QtZYHgVxPh7HLOzRdvW5791cTowXYg/NiOXj
nKdwGNGdNP5hiz1UC72H1CUsblcTAy2p4f4tTIuCn1DwHgbnkq36lNYUXAvf
8w+4TqNO5eA78qQ9Nn0ales0n0ZUw4R3v2424Jequwp9I4WXMRFVH8sNYtw4
SvS/XyfWu4/CzNZLkdNqtdg8bU85yPeTpP39pXYgpn+y1UiZedIg+SgRlKJh
kn2kRqyvmIbQRrFeDUKDj8dqBo+i50wPilJhqrDkLIjbf+gdVehTkgbTWPxN
8Cp6oEQsKStFzUHAoitGCXKq0iOJw8/hv3ZH9NpiaYUhofc6h+W7vysLjbU1
c8yhLZiQ1qrA4lDJiplPOMhyz19QOSgwcb+SSMyhobIi2eojOVatm9W1pIXD
YDMBuk4GU7p9HJzCCMn+MrF/jkNaZ8r+hHYp6hJP+TcVs/AP+LHmr+NS/BQp
CMLChGWRFNsOHLz3Tw0D7duCglLRRzC4zhBQ/pSisv3Aq7BbNLZvOPwwOlYm
chxDI36SV95bVnL0bj9rO+hJY17I/WtMhxwFBJ9Qbxpn83Y1TKhUIOK3rQcO
LqCG996C4POp4f+3n3kZGBlGYYZdbQD1hhzxBKs9eRRGCQPoJQOhOqvwIYVA
am7/2iQpBHtuLKLFup5LRJ6raNGnYxJ4uLymX7ky+PxJx629UyUI8iSTYWSw
OvLSv8WDNsP9i/xJIFxTxmcsgkdd1fi024C4NdaykBP58pWIfIAXeWSl5ny8
eK5VKuo/wgHpO8mEDcjMcR1wlFwTrhMV4txaOiCx0e/C6XsKs648TOkybPH/
+/I/ZYc7ZA==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerJPEGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAWIQnehv/cc0Utoh78Y2jc0P5R3KFu70U/aVxeDP2j1t
Av8tEQf7SMMY2QRZB6uXtY+z+4UdPNrbDepeyThMsytxrPUWcmioLXl1il3G
YQZIfZSgw4U7zoe+y0k7lHmxv/5fI+CQy7jw64enkg47Xp6vW8Ih4PDtZcUZ
h6USDleeZ2l/ExdwuHBx1bSSFHGHltA9EytZBBx45AWDlTTFHAq+zvmyrxDI
t/kup2cp6nDtUTBDj7ugQ1WXjFJenIhD1f0ft4y1hRxmJy5ec/+NsMOJuZcO
/ooXdmAAAxEHtfXnDBVmizgUXJ7/1+OjKJzfqmVaveCpqMO8/mznozeEHU7J
LUzzUBVzSDp8WTtVUtjh3gmbT+yLxRzamBUjD7QIOTy8ZPhcUlvc4QXDQRnb
f4IOj7NSwqOeiTvMkr4sPG2HINw/PoWhN8uPCjrszCk5558o6VCiMv3/hH2C
Do9KJq3VE5dySMpRPOHIKeRQ77G/VnaGlMOhlFUJIZOEHN4cV/spKC/t8OCw
6vG5RsIO8U6s7eIp0g4MJTP09YH+gMXXn6a7G3IvijgAAJv0uk0=
             "], {{8.27593, 5.600999999999999}, {8.27593, 
             4.0764499999999995`}, {7.7903, 4.0764499999999995`}, {7.7903, 
             7.970409999999999}, {9.149, 7.970409999999999}, {
             9.495699000000002, 7.990780000000001}, {9.836413, 7.8734}, {
             10.097, 7.643809999999998}, {10.32893, 7.4181300000000014`}, {
             10.453540000000002`, 7.104199999999999}, {10.43952, 
             6.780890000000001}, {10.46035, 6.45471}, {10.337919999999999`, 
             6.13566}, {10.10423, 5.90714}, {9.834327999999998, 
             5.687319999999998}, {9.491156, 5.57794}, {9.14383, 5.60102}}, {{
             8.27593, 6.020399999999999}, {9.149, 6.020399999999999}, {
             9.365609000000003, 6.0059000000000005`}, {9.579484000000003, 
             6.0753699999999995`}, {9.746219999999997, 6.2143999999999995`}, {
             9.892242000000001, 6.3635}, {9.967786000000002, 
             6.567780000000001}, {9.95391, 6.776010000000001}, {9.963729, 
             6.982559999999999}, {9.888697, 7.184149999999999}, {
             9.746219999999997, 7.334009999999999}, {9.592580000000002, 
             7.478730000000002}, {9.387888, 7.556730000000002}, {9.1769, 
             7.55095}, {8.2759, 7.55095}}, {{12.779349999999999`, 
             5.8757800000000024`}, {11.18246, 5.8757800000000024`}, {11.18246,
              4.495850000000001}, {13.037669999999999`, 4.495850000000001}, {
             13.037669999999999`, 4.0764499999999995`}, {10.69683, 
             4.0764499999999995`}, {10.69683, 7.970409999999999}, {13.01235, 
             7.970409999999999}, {13.01235, 7.5510100000000016`}, {11.18246, 
             7.5510100000000016`}, {11.18246, 6.29641}, {12.779349999999999`, 
             6.29641}}, CompressedData["
1:eJxlk2tMUwcYhos2RYXNnlLbCr1gClJ7enowKIg4eQUVNYgFB5F0Gmy8kCIQ
OorMxigbImZeQIMixcpFx7wEAaGwSbSiBfFSdU6wKAw3ZaZMhCETjbgds4k/
9iZfvjw/3zzfN0OXHrdxAovFmsfM+/1vAjHz/kLJgUQeZAL9yuGLNHj88NZH
RQSuOvjzz62nsSDmbuEX77ioxPFrh16qYSke0SmquKBtC+cbjWrEpZRsLY3g
YkaNIbnwOYV87+grgwQX5R4ubd8GCkvP2qtYIi4cLZas0TAVFE1rYr+ZzEVt
0C5HiooE33wgJXIjgebFIx02qxK59sc3z+V5IX9R0tM7BiWKK9tepP7IR/ze
4ZByjRKlLy8ONbgL8F2AamhnnBLL+grDRWuE4yxoFXwtrhchqKI+ZDRCiYrc
o9YdJ70xqOE/89qjRM+eRDrvoBj3nO29iukkBlLfnJfNkiLk6ZQXhnISzU37
OINZMnxLsUMVGSrkZK+9lCT0hU4R0BW/jIK849fVLE9fJGe61waNUJjdb9fE
8H1RUDY6u8+ixqZfpl3+2yrDidOTKwbkNEqOMnFK8ba105JYQSPbuN/N2S9B
qyam/swgDevw2M/Zp8T44IOVnsO2r/JBlCAwR+tOj3PVDZ1u2I3G6ci0PJ9A
MaR9NzxqbqvhHRl6t3qCBLWdF8J7TGp0aCdq/YslWNp+5ktPhRoFmbeemCkp
lnS7+zb8QKHY302v/0qKhs2H2d8vpzAzWNaZp5eix4+TU3RehTo/rKRMUtiy
OZ+MyVWopnldhgEJfn82ZDI7SHA5FtPUV2IUNrX9tDuNRA9TN6HOB9MrjZ/P
XUTijzSLqyDMGzUa5jCiSdi6Ey88bxGNs+OIMEm2/T9fESTyj83KXDdRgLIV
t6TJRhJsIakP3McHO+FTqq6bxLu/jL2lsV6gihrlpcEqBGcYLkXG8rA4oXFb
zHUVXOw5RHAzAeJtun/YJgrRGfHOrXYC5s/uTPFk+p74Myv3XguB212pwhIP
5n7bQx4+ekDA72b9GKll2FVgfszhYUHZluvTGH9PApiHoHkY6LeFyrvUcL3v
Y+KhkWNdUTOJxpvlDavafvvIvdv41VHrBdgtcDperab+x/OWRBleTxWN+/3A
/wB+8G7/
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerMIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerMXIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerNBIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQ3fTo+Izdx3QcQlPvix78r+KgN2HBD8Nv+g5/JioZ
rZmk4fBh0XqFsx7aDp/Ymc/vna7p8OfFlannD2k7bI7jeeoSrefwr2J91MwE
dYeItT4/lubpONysiZHW+qbiMOeIwoYiDwOHqR/fG+v1KDlM8HQ7dwgo337E
dppdiIzD+e/Bj5cC9bs/rBJZ5y7r8AmoTGaGpoNyTkXV0jfCDjnndTgDJms4
TD91W9DPW8rhmF7gXlMGVYcYBcePyUB51ry7Z4NzFR2u/VJaqAvU39DULWqa
oeBwaMUSP4dgGYe603P0uj3FHTbNfb/8WLeSQ15Y7bptStIOX70i2yyA7pv0
tsbe9J6QwzFv805HoPslpl7hzADKH0lZlRAC9F/Dwbwb2zzEHbafeblpBtD/
/AJnLj5OV3AQWrr3oDgwfKYaXP62PkfRAQBEtY9z
             "], {{14.80901, 9.345419999999999}, {13.743519999999998`, 
             9.70987}, {13.016919999999999`, 10.654219999999999`}, {
             13.952580000000003`, 10.306610000000001`}}, {{11.37113, 
             7.1364199999999975`}, {10.71228, 6.004419999999998}, {10.71228, 
             7.177}, {11.39769, 8.1788}}, {{9.82133, 12.979130000000001`}, {
             8.690819999999999, 13.38113}, {8.03666, 14.26438}, {
             9.224139999999998, 13.742750000000001`}}, {{11.738219999999997`, 
             13.74254}, {12.92535, 14.26367}, {12.27094, 
             13.381170000000001`}, {11.140869999999998`, 12.97931}}, {{
             13.176730000000001`, 12.69978}, {12.60295, 11.88607}, {12.63669, 
             13.113}, {13.30869, 14.019279999999998`}}, {{10.48084, 
             7.6483799999999995`}, {9.600349999999999, 8.933119999999999}, {
             10.48084, 10.12788}, {11.36133, 8.933119999999999}}, {{8.82607, 
             11.30619}, {8.782, 12.866109999999999`}, {10.24941, 
             12.343890000000002`}, {10.24941, 10.82582}}, {{10.71228, 
             12.343890000000002`}, {12.17853, 12.866109999999999`}, {12.13679,
              11.30619}, {10.71228, 10.82582}}, {{7.78548, 12.70037}, {
             7.653829999999999, 14.01924}, {8.325000000000001, 13.113}, {
             8.35872, 11.886630000000002`}}, {{10.113909999999999`, 
             10.394459999999999`}, {9.233909999999998, 9.200330000000001}, {
             7.73775, 9.64138}, {8.6871, 10.875230000000002`}}, {{9.56485, 
             8.17925}, {10.24941, 7.17699}, {10.24941, 6.00399}, {
             9.588669999999999, 7.136619999999999}}, {{10.847769999999999`, 
             10.394459999999999`}, {12.27461, 10.875230000000002`}, {
             13.223969999999998`, 9.64138}, {11.727799999999998`, 
             9.200330000000001}}, {{15.12577, 12.00872}, {14.018169999999998`,
              10.766060000000001`}, {12.710669999999999`, 
             11.251830000000004`}, {13.495080000000002`, 12.36425}}, {{
             10.4809, 15.38392}, {11.32134, 13.94576}, {10.48092, 12.872}, {
             9.640999999999998, 13.945920000000001`}}, {{5.83618, 12.00977}, {
             7.467, 12.364930000000001`}, {8.251059999999999, 
             11.251930000000003`}, {6.94357, 10.766800000000002`}}, {{7.00905,
              10.30738}, {7.94515, 10.65472}, {7.2182, 9.70992}, {
             6.152049999999999, 9.34592}}, {{6.25151, 8.900640000000001}, {
             7.36125, 9.27952}, {8.546149999999999, 8.93023}, {
             7.5544899999999995`, 8.616499999999998}}, {{7.776040000000001, 
             8.210890000000001}, {9.1027, 8.630609999999999}, {
             9.136519999999999, 7.219290000000001}, {7.60984, 
             6.5491399999999995`}}, {{11.82447, 7.218990000000002}, {11.85887,
              8.630529999999998}, {13.1852, 8.21038}, {13.3511, 
             6.548449999999999}}, {{13.40685, 8.61593}, {12.41507, 8.93009}, {
             13.600359999999998`, 9.2795}, {14.710359999999998`, 8.89981}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerPacletInfoIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
              3}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}}}, {{{6., 13.5}, {6., 11.}, {10., 11.}, {10., 
             15.}, {7.5, 15.}, {6.671948, 14.999096000000002`}, {
             6.000903999999999, 14.328052}, {6., 13.5}}, {{9., 12.}, {7., 
             12.}, {7., 13.5}, {7.000358, 13.775994}, {7.224005999999999, 
             13.999642}, {7.5, 14.}, {9., 14.}}, {{13.5, 15.}, {11., 15.}, {
             11., 11.}, {15., 11.}, {15., 13.5}, {14.9991, 14.328052}, {
             14.32805, 14.999096000000002`}, {13.5, 15.}}, {{14., 12.}, {12., 
             12.}, {12., 14.}, {13.5, 14.}, {13.77599, 13.999642}, {
             13.999640000000001`, 13.775994}, {14., 13.5}}, {{6., 7.5}, {
             6.000903999999999, 6.671950000000001}, {6.671948, 6.0009}, {7.5, 
             6.}, {10., 6.}, {10., 10.}, {6., 10.}}, {{7., 9.}, {9., 9.}, {9.,
              7.}, {7.5, 7.}, {7.224005999999999, 7.000359999999999}, {
             7.000358, 7.22401}, {7., 7.5}}, {{11., 6.}, {13.5, 6.}, {
             14.32805, 6.0009}, {14.9991, 6.671950000000001}, {15., 7.5}, {
             15., 10.}, {11., 10.}}, {{12., 9.}, {14., 9.}, {14., 7.5}, {
             13.999640000000001`, 7.22401}, {13.77599, 7.000359999999999}, {
             13.5, 7.}, {12., 7.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerPNGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}}, {{{5.529, 5.57807}, {5.529, 
             4.053519999999999}, {5., 4.053519999999999}, {5., 
             7.947459999999998}, {6.48, 7.947459999999998}, {6.852703, 
             7.9696}, {7.220449, 7.853290000000001}, {7.51264, 
             7.620859999999999}, {7.761139, 7.404469999999998}, {7.898312, 
             7.0872199999999985`}, {7.88574, 6.757950000000001}, {
             7.9057260000000005`, 6.425880000000001}, {7.770876, 
             6.103259999999999}, {7.520519999999999, 5.88419}, {7.218853, 
             5.661900000000001}, {6.848291000000001, 5.553469999999999}, {
             6.47438, 5.57807}}, {{5.529, 5.9974799999999995`}, {6.48, 
             5.9974799999999995`}, {6.713101, 5.9819900000000015`}, {
             6.943998000000001, 6.0508500000000005`}, {7.13054, 6.19148}, {
             7.287083999999999, 6.33478}, {7.370268000000001, 6.54129}, {
             7.35676, 6.753090000000002}, {7.365949999999999, 6.96311}, {
             7.283390000000001, 7.16676}, {7.13054, 7.311090000000002}, {
             6.957866, 7.457780000000001}, {6.736853000000001, 7.5351}, {
             6.51039, 7.528030000000001}, {5.529, 7.528030000000001}}, {{
             11.87171, 4.05348}, {11.3399, 4.05348}, {9.319080000000001, 
             7.05438}, {9.319080000000001, 4.05348}, {8.787279999999999, 
             4.05348}, {8.787279999999999, 7.947459999999998}, {
             9.319080000000001, 7.947459999999998}, {11.345, 
             4.933299999999999}, {11.345, 7.947459999999998}, {
             11.871730000000001`, 7.947459999999998}}, CompressedData["
1:eJxlkXtMU3cUx6soT4V7y6MV6QOYj97LvZUFWAdGv0EkmJkNyibo8LkRO8qs
DzYsCr7oWHRCFUQRplINtloxomFqRAU6FohjAXEK69RKwaLjNcwgxamXGNkf
O8nJySe/nOT8vp/gDRpl+lQej6fgemK+rQVI9GlzeMfycfKZvtxWK0dtIH80
NYfEvzdMCbokOV5qkw95dhPoG95R/srKoqm9gDUWEbB5FZv2JrFYE3/J2k4R
+LZwSufzOgZCh6/28Asf7Jz+VZNBxmBzb8q23TwCjk6zM+1gGBR3/7lo5t4F
e4NKFozQyBMpNsYtI6C1+7ieUNMwDLjou+wEZOur+tf2UWgdeTxgziXx5FzN
4P7dFOx+ouaetXykGiN/jVlEQWpp9YvW+MJquONa9kIGe1dieOtJP+jVS35W
/CbD4Tj56dQBf0Q9Hml0b5PhiT2vwADBJNdYXFqqKoQw1UfMkNTLcFN/78KJ
4kBIZywcFXtTMFz5YKwhPwjH50zJyDBR2J/5dNxEilHp9ezz3jgafJ/55VvT
JcgYT1lx/L0wfNNYu7RsphSeOndFvieDLZ91Zi/lSaEuuDVXbWEwsZblIUVa
4qP3z+5gEdWu1MYYJDjoOhSQQMgRcew7W2iDGD9+xG0elWPh1Rj1T3+KMF3f
ZWnu5/xc4QQdC8I7fxVfb1r+iWI2XnVs75s7zE7y1dWq6rsPWGRZZSKzRAQu
tcVnXjNwrs8fUu0Tw8291zHsxaCB+zaZLEYIcfG5IDMMvztDKpmNYhi7w12O
tNHIQWcJbRVhRc0XoYSGhnnagcayR0G4vu9BWawb/TbPU7NRpywNLrxH4ctz
6z5VzgvEhJ6PbRTSrPEu288LJ1lVOs1oShdgT8vY6Kz7FCjhkQ4Phz+aJVzg
3jTEiVE9nho/bFUd6t+5i0ZtlfYXWbQvbqRcWD7WQ+NM6LWXBRF8/HGWO1AX
BktReDZTSSLn+/hsgmbg0MQGT60moWtV/8XXMXAviipMPU8iq3286f5DBkbl
ZbdV9SROZbb4P4xkEd2X260eJCEt/qFCl8si31n64eoAPlY+FerrbrJwclpL
NvDRcHvboO1vFiUJhqNJd/7jvMWRa64vC0B6cvUQK2D+xx0eqpDMMcGkr3f8
Bvidex8=
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerSVGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 
            2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{15., 10.}, {14., 
            10.}, {14.00113, 11.596388}, {12.921309999999998`, 12.991014}, {
            11.375490000000003`, 13.38965}, {11.62449, 14.3584}, {13.61224, 
            13.845852}, {15.00095, 12.052766}, {15., 10.}}, {{7., 10.}, {6., 
            10.}, {5.998837, 12.052669999999999`}, {7.387368, 
            13.845787000000001`}, {9.375000000000002, 14.3584}, {
            9.623999999999999, 13.38965}, {8.078326999999998, 
            12.990908999999998`}, {6.998712, 11.596276}, {7., 10.}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1,
              3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCwBmIQDQG6DhBay2HribJ983dpO0x7xRSXBuQnfi7MXTFD
yyFv6fW05LNaDm8emUkd0NaCqteB0ho4+NoORUeiariA/AWGk1eI79FyEFb/
bi3yVN3hVPuCrC9VWg5ZsqG+AlvVHaQOHvv63kvLwWC3Oj93q7qDBnd8/Gsp
LYe77wNEXjirOwRx+r/4+l8Taq463L0QWhnOh9ijBFcPsUcJbp4k2B4luH2a
YHEluHsg+hTh7oWYqwT3Dypfx0HTatLp+hXycL6KuxWz8no5h3XOpqqR87Uc
3n5ay//6rrQDX1429/nTmg5rXj0tn/VHwiGP73oWPzcwPA9YKntJizlcWud0
yh/ont3cU0QiGEQcyoVrLn/p1IbzYfEE43e+adbhLtOD69cP3Gu6Yas+3PwJ
HzWmfviiD7f/l4dXlYSUAdx9gXtO3VqWoI/mfj00/6Hz9eHhk3AuJ/yFsz48
/Mwq4qdyt+rDw/eZnSWXANA9sPC/8WXBApGn+vD4Ca++wc3KYIAWfzC+OpwP
i3+Yelj6gJkHSz8w+2DpC+YeWPqDuRc1faLz9dDSt57D6Zb4V8/XAtPFlZnV
HgX6DrLMm67v1tdxCDii1CarZOCgvE94c9waXYcPPdu0Ot/oO8xWeGXHoKnv
0NCwNev6FH2HDr0V+TOFDRwsfOfLFujqOWx5VbxV9Le+w8b7wq9DVuo4PL2g
dPvnOX0HraKOHZaq2g7zbXSuzGrTc3iSfV6HE56+EfkTAK7YJ3o=
             "], {{14.5, 15.}, {14.223859999999998`, 15.}, {14., 14.776142}, {
             14., 14.5}, {14., 14.223858}, {14.223859999999998`, 14.}, {14.5, 
             14.}, {14.77614, 14.}, {15., 14.223858}, {15., 14.5}, {14.99981, 
             14.776065000000001`}, {14.77606, 14.999812}, {14.5, 15.}}, {{10.,
              14.}, {11., 14.}, {11., 15.}, {10., 15.}}, {{6.5, 15.}, {
             6.223858, 15.}, {6., 14.776142}, {6., 14.5}, {6., 14.223858}, {
             6.223858, 14.}, {6.5, 14.}, {6.776142000000001, 14.}, {7., 
             14.223858}, {7., 14.5}, {6.999812, 14.776065000000001`}, {
             6.776065000000001, 14.999812}, {6.5, 15.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1,
              0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxdlHlUFWUYxvGqIJBwl7lzl1nuxTI1jmhFQAT4IAUEqCcDssRSkDCCEDFB
ELcEzRYkCNc4uRCulLJISqyCIhVbbIqmCCaLQQgoINY3d5A/mnPmzPnOzLzf
+7zP8/usAiOWBkuMjIx8yS08G/175l0M0cA/PisvcIEK1kN7b6SYqLGTbvn9
YYoKfOY9T5siGum9mRXe9mp4FsVzDplKuNxrOT3CarDkx9TgXXcoVLTm7thU
o0FIw1+h1hsoRDXJ+12rtVgofBhLIR/b2y43Mzgckt0V9SkFz9uxVJYJByvd
QJj/GAWLuee+653FY5+P8kuvLiWO5Ng/Km3n0evwhse6YRpma2aExVzQIcb8
udmbfdRYAsWqMoUePvafu67M0KA7Klc5aq6HsZxaUHFIi+TNo45rLfTQtC1T
nU9mcHGWpXnuXR1OVTf490Sw2H8xbY9lrA6rV7S6T3bgELSlxXmjWgdm+q25
e25xqAi33Xp+K4+5hgZ5vHQ3a2Z7GYd/gn5d4X2FR+qQ8Qf7nuEQWrA+RT1F
B/e8B2N/OLAYrfq7skyiw4lji0mHDM6MBISXP2En1mZNR9c6m3Fo3hblnmrH
osGUCMtnIbt8If8rYw6SA9OYdJ7F+95XTJwPctgQSToKZ7CeyKuy4THTeNu3
bl9oEXi40bY3hp/QXzvj+vDmUB6ZGy/PcaxTo7GcCIjmYa8tXq6fpEYcleVx
25GHoayfCh015IdCDttJG0MVNEgKZll6c+I8Ymi4sd1tdgdYPHEbud+9lcZb
Hx+IPtTGwK/k+LHFZB3Rl1Dp68qg5vXmvoGrNOYEJJUOHtci7rN5Pj94qTB4
vYko1GJVWb11sEaN4e+J8dkalA3ODkiSaMb306B+UaB02bAGS/P5hG7Z0/cM
AvSuZNRqXDpr88nRSSwSK31Ljq9W407GwUv6PhZC7IJuqGAYfxqHb6q2kGiq
YOf0y9I0Kx4Fgr1DtNhHIvHPb/4LJ96mIcTO4zaP0sTMd66eU4KnQxc9sNCh
a4qtzO4xBbczH92MNNOh5NVnveLcKJEDhQ6PSlefXEkpRH27eYSZEkUPZMgj
qc/ez6GnmPzwmkyss4nF2aKedKcwKe7YCQYwuHaaBGGqFMJYtcUaCJgMqaRw
WlybHFCoxo70305WK6WQFEyVU0Uq0WdvqZjzehqCuwU5UqTuTHiv/rFS5E0q
Q4YQKzclBn++tnssY3z/Amp8XnIxfy4UFq4kjjMKdHra/Gs1poBA2ZQBBYwM
F4Vy/U/r1tRSou7J9MSadEcioESRxaGXj5DvDXWW0/A1GKFAQ0zn8y9OU0Ea
a3fKZa8cQhw7alSwFQCWyPHhrqAVrRVqkY982YR+wzzKZRO8vim0lScDgd2y
M5rBzcjdX7f3yyDQF2/DIqm9X1cXIcfD9lWHG3NYcf9bctACcJMJT30DXu8m
KsQ8E46Esq2vUKgzuikxJbwJx0dsByXyUMKiSioAp0Rlx4Jjf7qwE7odDEYz
GCTVHNJo3J9eOH9/qHacIxX+f17+BzFaMpA=
             "], {{9.8738, 4.7586}, {10.959, 7.9704}, {11.507, 7.9704}, {
             10.098, 4.0765}, {9.6543, 4.0765}, {8.2481, 7.9704}, {8.7935, 
             7.9704}}, CompressedData["
1:eJxlU2dMFGEQPZUIMQb3jvPuvMYhSraiFAvB8myAjaJiUAEF0RAiajCIIhCI
QUDsioVqMELU06C5H1gCBiT2jlEBo4glF1GwYDsJfnsL5w8n2ezOfjvzZt57
6xG/YdGawTKZLJBc4l0KbxQfI7FMgcOzCte9vyxAeS64Pf2QHNF7G3roaAHW
EO8+j14KW61ePi6dPPjm4neGagqM+EEij6phQWNTZ1IQj81tHCbeDQx9KKdw
+vOjhfHhHJ68T+K+qym4mPXLEy6zaEw4vWqJor+eZqGNaNFlxFGYTeBtpxg4
d6tCwv9QOKhxWuoqMCiJrDhz9qgcw56e2Dj1Fo2VzG3qeroCd++Q2EVjblm2
V8MONwgXyrqqg2h0TZ4TnHJRCfXzez8We9IojyUFziosmFQwY9VYGq5144+x
UWpH7psmeLhbNBj3YszQnJE0cooIEdVa7P+YMX1CLI3jBTXt1iI9RonjfKER
5xs5nmWM0NkLGBSnlVZ6bnXHvOGDubylLLJD6jMNGhOqSq6Zanw5ibfhJviI
BLzhUO9a6lepNOFl2O4j6w/wSIhpCxpS6460ugrtOIMg6fHcCPfcDxG15QLM
ha2Jsi4DCDrZUADc4hofn9FjQD/ZhhynpjAdNiWSift4R87lqQgDPPK/tT7N
8dMjnMApGgnenZj5N5wNEr/JPFY8vtKhLDNI86t42OXwNUKkr+MkB8/WX1lJ
GUaExlNRAf4cHo4WXxhhubG5rqKYdZxfmksaOLPQk+rI7v7+ZxmsGfU6Sv1D
j6PrFduvzmOQtPDrnsUWHe6L7XUMVpyv7yyfosW33uYtVi8G/pWWST8bNI7c
7r9MdT8/DCbEikgqLKo1EoYYWJb1XGzZqURNCiHgCoPe76mvSiPcpPm0LOw2
DlNI+l1gsU00+CU5mkykIoJDi/l3dHKTXMKr4mC7/elmY4Nc+h9sHJo5ssEz
OVLFhUJ5rM1fHdM2VOHQL1B88FZIfn/A40jfviwb8afdH4ME5OcuJwz/y9vT
yQBxKrx9QIicxv2XBxD7/hqhceg7kP8F0n559w==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerKernelIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBwht4IDCb0Dwg3h/2248ZuCwROpbdVKv
IlTcEEqj81ng/IKp6gJlpxjR5Bng5sH4qPZB+Qw8cH4D/3SZ8lOcaOZxoNkH
5TcYwfkCcrkyG48Zoak3hpsH46PaB+Prw/kQf+ujmWeAZp+BAwACrS35
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {7.75, 
            16.}, {7.888071, 16.}, {8., 15.888071}, {8., 15.75}, {8., 15.}, {
            17.75, 15.}, {17.88807, 15.}, {18., 14.888071}, {18., 14.75}}}]}, 
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}}}, {{{19., 13.}, {19., 3.5}, {19., 
            3.223860000000002}, {18.776139999999998`, 3.}, {18.5, 3.}, {7., 
            3.}, {7., 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQfW91mNqfJH0HgVL5hitmCg7uU76xxe/Qd3Awjdvl
2aPskHpf9OD/ZToOd9kVtnYaKznseaHtYfxNy2HHqje7lSRUHfas9Gjd6Krp
INZuvH8WUP6Ot9TiUhM1hyk3FSb3APXXsGYeW9Sp5rCT3yFL2FzB4a4KW+NU
Z2UHK6kD0QqM8g42tyySdOtUHSwEJrH6MEg5iBo0RpcD5cPAFos4cL+KflYC
1B+0wP+J5yRhhx8iDI8lgeYzaLeL3TzH6ZDB2rYmD2h/wdc5X/YZ8jsI/slX
tQa67wS77ezQ+cwOem8y2/cD3W+w2i48GiifGnvHjRnoP47iLz/2nuV06HRM
eHoB6H+zs9Z+FycKOyx++SalIMTQ4dRT+yX3/4k4pJqdUFE2N3CQOwkU+C/p
ILrO/WEVUH7NLIVXdgzyDgCwloC6
             "], {{14.356890000000002`, 8.80715}, {15.26808, 9.20715}, {
             14.75798, 8.51929}, {13.889980000000001`, 8.210630000000002}}, {{
             15.50572, 9.055660000000001}, {15.40481, 8.047169999999998}, {
             14.95886, 7.41475}, {14.98468, 8.353030000000002}}, {{14.69925, 
             8.2}, {14.66778, 7.05536}, {13.62143, 6.702780000000002}, {
             13.62143, 7.816750000000001}}, {{13.48092, 9.9899}, {14.09851, 
             8.93313}, {13.48093, 8.144059999999998}, {12.86377, 
             8.933209999999999}}, {{12.60539, 8.80729}, {13.07211, 8.2105}, {
             12.20383, 8.51926}, {11.69399, 9.207640000000001}}, {{13.34039, 
             7.816750000000001}, {13.34039, 6.702810000000001}, {
             12.293999999999999`, 7.055390000000001}, {12.262530000000002`, 
             8.2}}, {{11.97714, 8.353090000000002}, {12.00295, 
             7.415180000000001}, {11.55736, 8.047659999999999}, {
             11.456740000000002`, 9.055730000000002}}, {{10.16199, 
             7.578840000000001}, {11.359990000000002`, 7.839730000000001}, {
             11.93624, 7.021730000000002}, {10.97586, 6.66539}}, {{
             11.016440000000001`, 6.38067}, {11.74664, 6.651610000000002}, {
             11.18759, 5.92502}, {10.357750000000001`, 5.64171}}, {{
             10.419440000000002`, 5.365740000000002}, {11.27625, 5.65826}, {
             12.181249999999999`, 5.391480000000001}, {11.41413, 5.14879}}, {{
             11.429440000000001`, 3.6768399999999986`}, {11.551440000000001`, 
             4.897399999999999}, {12.526169999999999`, 5.205770000000001}, {
             12.55101, 4.16919}}, {{12.60754, 5.558840000000002}, {
             11.509590000000001`, 5.88251}, {12.20647, 6.788230000000002}, {
             13.253540000000001`, 6.435409999999999}}, {{13.34042, 
             3.2504900000000028`}, {12.833490000000001`, 4.117919999999998}, {
             12.814119999999999`, 4.925980000000001}, {13.34042, 4.15807}}, {{
             13.48096, 4.450240000000001}, {12.83467, 5.3932400000000005`}, {
             13.48096, 6.270240000000001}, {14.127249999999998`, 
             5.3932400000000005`}}, {{14.127959999999998`, 
             4.117769999999998}, {13.62153, 3.250720000000001}, {13.62153, 
             4.15807}, {14.147639999999999`, 4.925700000000001}}, {{
             13.708409999999999`, 6.435409999999999}, {14.755480000000002`, 
             6.788230000000002}, {15.45236, 5.88251}, {14.35436, 
             5.558840000000002}}, {{14.41041, 4.168940000000001}, {14.43565, 
             5.205680000000003}, {15.41, 4.897}, {15.531869999999998`, 
             3.6763200000000005`}}, {{15.547509999999999`, 
             5.1483599999999985`}, {14.780389999999999`, 5.391360000000001}, {
             15.68567, 5.65821}, {16.542669999999998`, 5.365090000000002}}, {{
             16.60379, 5.641249999999999}, {15.774359999999998`, 
             5.924939999999999}, {15.21554, 6.651240000000001}, {
             15.945540000000001`, 6.380030000000001}}, {{15.98616, 6.66484}, {
             15.025730000000001`, 7.021660000000001}, {15.602219999999999`, 
             7.8392}, {16.8, 7.578090000000001}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           FilledCurveBox[{CompressedData["
1:eJxTTMoPSmJiYGDYBsTMQMzIwszIDEUMjAxw9qjIgDtgkIgAAMeOBqk=
             "], {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1: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
             "], {{13.48089, 1.9509299999999996`}, {10.96851, 
             1.9509499999999989`}, {8.931845, 3.9876499999999986`}, {
             8.931859999999999, 6.500030000000001}, {8.931874999999998, 
             9.0124}, {10.96857, 11.049077}, {13.48094, 
             11.049069999999999`}, {15.993319999999999`, 
             11.049062999999999`}, {18.03, 9.01238}, {18.03, 6.5}, {18.03, 
             5.2935}, {17.55072, 4.1364199999999975`}, {16.6976, 
             3.2833000000000006`}, {15.84447, 2.4301899999999996`}, {
             14.687389999999999`, 1.95092}, {13.48089, 
             1.9509299999999996`}}}]}, 
          FaceForm[
           GrayLevel[0.53726]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerDocumentationIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBwht4IDCb0Dwg3h/2248ZuCwROpbdVKv
IlTcEEqj81ng/IKp6gJlpxjR5Bng5sH4qPZB+Qw8cH4D/3SZ8lOcaOZxoNkH
5TcYwfkCcrkyG48Zoak3hpsH46PaB+Prw/kQf+ujmWeAZp+BAwACrS35
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {7.75, 
            16.}, {7.888071, 16.}, {8., 15.888071}, {8., 15.75}, {8., 15.}, {
            17.75, 15.}, {17.88807, 15.}, {18., 14.888071}, {18., 14.75}}}]}, 
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 13.}, {19., 
            3.5}, {19., 3.223860000000002}, {18.776139999999998`, 3.}, {18.5, 
            3.}, {10., 3.}, {10., 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}, {19., 13.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGZigAFjBz2T65lLlqo6wPg3sjzuJGdyOqScifU+
8d/I4YfNDutscxaHy/P/eghWGjmssHqStoORwUF81muTS5cMofoYHNzOHZpX
VqEB5xclVx0Sqld3YNgxSVYaqD7rccfWH1vUHDR2RAQ2azI7/Oxdb7sZyC8A
qeNnh/On8l37b2mjBlf/OtxKfp6pOsK8oNkWO/+ro9mn4TC3Qe1QW7shnP+p
eva/N88NHTY4m6pGAtVH7n7rVGxr5NC6y2OhTou6w+0v6fZBMUYO61+Lv2k7
q+agNdFFf3GCkQPPGS7XXefVHNgWT7JiTDVy+CqUPLPuoprDUYUNRRmZRg4S
YH+rOSxymH9i8h4jh/5/07MvAvk7g60i/gPDa/Hx97m/vNUc0MMXAJkejkw=

            "]]}, 
          FaceForm[
           GrayLevel[0.53726]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {1, 3, 3}, {0, 1, 0}}}, {{{17.824, 11.118}, {17.823, 
            11.28}, {17.692, 11.412}, {17.529, 11.412}, {12.235, 11.412}, {
            12.073, 11.412}, {11.941, 11.28}, {11.941, 11.118}, {11.941, 
            2.8823}, {11.942, 2.8372}, {11.953, 2.7929}, {11.974, 2.7531}, {
            12.045, 3.002}, {12.271, 3.1746}, {12.529, 3.1765}, {17.824, 
            3.1765}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 
             4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
              0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 
             1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.04675, 6.052660000000001}, {
             14.98306, 6.096589999999999}, {14.9068, 6.11858}, {
             14.829500000000001`, 6.115309999999999}, {14.83814, 6.15225}, {
             14.84931, 6.188549999999999}, {14.862930000000002`, 6.22396}, {
             14.989640000000001`, 6.231980000000002}, {15.1139, 
             6.186519999999998}, {15.20552, 6.09862}, {15.130299999999998`, 
             6.077719999999999}, {15.121929999999999`, 6.073559999999999}, {
             15.04675, 6.052660000000001}}, {{16.107940000000003`, 
             7.377000000000001}, {16.689980000000002`, 6.79499}, {16.77984, 
             5.8828700000000005`}, {16.32256, 5.198469999999999}, {
             15.865280000000002`, 4.5140699999999985`}, {14.988219999999998`, 
             4.247999999999999}, {14.227759999999998`, 4.562980000000001}, {
             13.4673, 4.87796}, {13.03524, 5.686269999999999}, {13.19582, 
             6.493559999999999}, {13.356390000000001`, 7.30086}, {14.06488, 
             7.882300000000001}, {14.88799, 7.882300000000001}, {15.34556, 
             7.88232}, {15.784389999999998`, 7.70055}, {16.107940000000003`, 
             7.377000000000001}}, CompressedData["
1:eJxlU31MzHEcvvKWRnSX7+9XXaULdfr+7kShOD3GSpzcctRizcupVja3y+at
MJQQtVO3it6U90Niul4c5b2oE5bJEpGGpdKLzNuvf/zjj88+e/Zsn8+z59nj
vmFL2CZrgUAwk5/h3f4gu8pgkaHuVqNJO1mEKd8euo17zaGj/ZXKJ5TAVTX7
g206B1JW+SIhjCArV2GxTePALpCcWczjbpVDp+gQj1s/SMwrCaoNGRN2pnCI
9rk6ZFpNUPyz5NVZEYeuz7f9PeII0vXhH9lCCrYnL7t/A8HH83YVjjIKdeCW
6WELCRx26Lc+8aXo/jpLJn5IMPfAdL9dKgrZkllkeTADfdrJZEUSRWbrHPOA
kcGYqY+v/1pDsbjKVhr4iMGNGMPIc/4UGVcU16a0MQiRdg7oCcW7p/ft43sY
bB47VBjjQaFL3laRuoJFwGjNlW0FFO/XHr5YZ2Zxn+wTZ5ZS2ChOrCqoZ7Ho
i7LoWy5Fl29T2I4TLExWBW5BqRSFxx6MU0ezyB0xMqFvO0WEZt6bFRwLRUhl
dG8ehYTLKvcQs9B2Jz9S1/D3dx88hT8M/EpX7bv3liLf/vTNmmYGz1zuNjhU
Ulx3k0ruHGaw7rjfJ3f+n9EfM4LlDEqG/dvP62ku1irqCMbqVLXKKoqOaF7J
G4ISq+pRwj6Kl8LehY0dBE8ifPPyKAdrtrGwiOdFkraJFzLlSLGvLT66keCy
kNrFNMihnKkjA33/48Ra4QSvKjm2V6R+vbuZ9zdH854a5ehkM262JjE4oLES
mfpleH2rrKlEzUJvMSRIQ2VI7C1VxUc6oty8JLa+gkN3s+bozlQneNGevWU5
HAw9fKDznRHVxF4qjuOgbj2mjSwVQ3IoKuiqksP3QUfGTuOC5ZPSln56Tv/x
jvd0yy7y/k3zsTGKI53RbloZELGHIvRCUoBrghMaZs854/nFG4gTeQ62sAgv
2+gxMd0bAst6c7WAgVN+lLRe643Mtb8X/Rg/CRZJy9DuAIpIeYru1C8hvEKa
lWZe3w9XmX+XrxDO49u4DL4PW41HWmL5PvwFn0hNig==
             "], {{14.929780000000001`, 6.679259999999999}, {14.99634, 
             6.637309999999998}, {15.059230000000001`, 6.58981}, {15.11778, 
             6.537259999999998}, {15.13069, 6.72777}, {15.13348, 
             6.918830000000002}, {15.12614, 7.109630000000001}, {15.0175, 
             7.005190000000001}, {15.00081, 6.98846}, {14.888, 
             6.879850000000001}, {14.90472, 6.82555}, {14.929780000000001`, 
             6.679309999999999}, {14.929780000000001`, 
             6.679309999999999}}, CompressedData["
1:eJxTTMoPSmViYGBQB2IQ/fq/zLPT0QYOjyLEt19cIOGgUm/w4Q6QH8NRFHCI
R9pBfUHnhoc/9R1mxZ9lbLKUdXh/ZI248009hxjjn2mzpeUcdr48X7dkh66D
zQ7r7O1/5Rx6X3J62xToODQUu035libnsG5mzeazc7UdJhznCTk2X8bhvOd7
6fjTWg5zpC8LT7sh5TAr5YnOm5laDgpbOyf/tpVwkFpcGmKqqO1wQi9wr6mA
mMNXV6foc6naDhsy7xV2nRN3sBBdabDtgrbDsSkei6YXSjqw/HKZpxKr43Bj
XqTQgmdSDiBjZLt0HDy2+h9PVpNxMOuL6PZ/qOOgJTH1CqeHrIP6VTvZ/khd
h3XMz3s0dOUcIu6+snxZq+tg8kpR6q6jrMOaFQdNePp1HY6JNclM+SDj8Dux
5UPGZl0Hn797VnqwyjgIlMo3XGHTc7CadLreA+ifblHTGW2Ceg51QW8vf9wh
47BQ44L6pxQ9h1UVyp9PxMs6fFs1lXN/iZ7Dr1vG3kwmMg7qntd99lXqOdz6
8MUrkk3aIcvjTvLLYj2HOeVzFinflHQIm7967Y3/eg4JKluexryScFjkMP/E
5Cn6DkElKtP/C0g49MYuqsqWMHCYsOCH4TM/cYdN13fb32M2cPiRpKF+66qY
w8zGUz++39R3MDqyUS8vWcxB694Jm0/L9R1SPhfmrvgh6vCsR+Mtb52+A0vx
lx9734o6+L9M+Ds/GMHnnnFg7W5NhPolBbZc14P1HOZ92fdxq7qYg+D9zkj9
MKD58xyd/y8Rdqg71sqsKGngcM2SLWX9dhEHI+apH98D08+WnLX6QrPEHCoj
VpieBfKPPTyz/hkwfQEAdeMU4A==
             "], {{13.11765, 9.647049999999998}, {16.647060000000003`, 
             9.647049999999998}, {16.647060000000003`, 10.23529}, {13.11765, 
             10.23529}}, {{13.11765, 8.47058}, {16.647060000000003`, 
             8.47058}, {16.647060000000003`, 9.058810000000001}, {13.11765, 
             9.058810000000001}}}]}, {
           EdgeForm[
            CapForm["Butt"]], 
           EdgeForm[
            JoinForm[{"Miter", 10.}]], 
           EdgeForm[
            Thickness[0.]], 
           EdgeForm[
            GrayLevel[0.65098]], 
           FaceForm[
            GrayLevel[0.65098]]}]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerTIFFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}}}, {{{7.476430000000001, 7.56917}, {6.447, 7.56917}, {
             6.447, 4.}, {6.027209999999999, 4.}, {6.027209999999999, 
             7.56917}, {5., 7.56917}, {5., 8.}, {7.476430000000001, 8.}}, {{
             8.85472, 4.}, {8.43225, 4.}, {8.43225, 8.}, {8.85472, 8.}}, {{
             11.84251, 5.766640000000002}, {10.49879, 5.766640000000002}, {
             10.49879, 4.}, {10.07679, 4.}, {10.07679, 8.}, {12.06027, 8.}, {
             12.06027, 7.56917}, {10.49879, 7.56917}, {10.49879, 
             6.197459999999998}, {11.84251, 6.197459999999998}}, {{
             14.782259999999999`, 5.766640000000002}, {13.43854, 
             5.766640000000002}, {13.43854, 4.}, {13.01654, 4.}, {13.01654, 
             8.}, {15., 8.}, {15., 7.56917}, {13.43854, 7.56917}, {13.43854, 
             6.197459999999998}, {14.782259999999999`, 6.197459999999998}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerUnknownIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGBQB2IQHTjbYud9Rz2HG+e+Bz9eyu5wzDjjxfwJBg4r1tVM
e87I4uCr4XJA8Y2BwwHdUzkTOFkcdLZvkRKyN3QoCExr9tnE6sC86fpu+zRD
hx2SeQeeu3M4rLfdrOLw1cAhQPK/3eMmdofDjRN0EibpO2wou936rIrLYef9
hRoX9A0dElo+ZDw+wevAAAINhg4bLnt4P33LA+c7vPFZ+HmXgINTwtMLStGG
DueSkj4XvhVw2NV8Y6ZTvYHDHR7zB5+TReHqWwI95zY8E4bz+yK6/RkNxBy2
nijbN1/JwOHa0VyTBnMJBz7dTXPf8xs6NKzbllRfKeuwM9gq4n+9oYPHmqPL
GSQQfD52p00NnvIOohMTRfNtDB0ObH95vq5FHm6+ptWk0/Ucqgj7JFf01Mer
OrzdrfTj/i1dhw2gcJBVhsgzaENpDYdWLdPqBaoaDi8M4uMagPLXQe76ruRw
R1N2zf9kVYg725UdFrTM3FbfKu+wepbCKzsGGQe2AxVsvLKyDkvMCov2H1Z0
cOnOef57pQjUXBmHDd23MxjyORy8zTsdE0Rh9rI4vH5kJnXgtgqcvy7luJvC
PnWHDztvdf0FxvfB5+2Chw6rw+Xr7oUsOcShBefPWPvV1em1hkNA7/Q8oWYu
uH++mC8UYHwu5NDGrBh5QEQXLj/v0sFf9t+14forlT+fkLfRg/MB09PfBQ==

             "], {{16.686, 7.765140000000002}, {16.00777, 
             6.803710000000001}, {16.04777, 8.25342}, {16.841960000000004`, 
             9.32471}}, {{14.986, 8.997559999999998}, {16.38884, 9.61328}, {
             15.61564, 8.57028}, {14.28, 8.0957}}, {{12.01489, 8.998}, {
             12.720699999999999`, 8.09516}, {11.38452, 8.57026}, {
             10.611329999999999`, 9.614259999999998}}, {{10.952150000000001`, 
             8.253860000000001}, {10.99215, 6.80415}, {10.31441, 
             7.766060000000001}, {10.1589, 9.32466}}, {{8.01074, 6.94966}, {
             9.938229999999999, 7.369580000000001}, {10.86475, 6.05415}, {
             9.319580000000002, 5.481}}, {{9.397, 4.937999999999999}, {
             10.50345, 5.348640000000001}, {9.643999999999998, 
             4.231930000000002}, {8.38424, 3.8017600000000016`}}, {{10.04153, 
             2.939460000000004}, {8.50174, 3.275400000000001}, {9.81326, 
             3.723149999999997}, {11.21365, 3.3105600000000024`}}, {{12.0264, 
             3.6294000000000004`}, {10.25809, 4.15089}, {11.38016, 
             5.608890000000001}, {13.066440000000002`, 5.04102}}, {{13.22659, 
             5.550790000000001}, {11.544459999999999`, 6.118169999999999}, {
             11.49222, 7.961920000000001}, {13.22659, 7.34474}}, {{12.50759, 
             9.23779}, {13.5, 10.937499999999998`}, {14.49341, 9.23779}, {
             13.5, 7.968750000000002}}, {{13.77346, 7.34473}, {
             15.506369999999999`, 7.961910000000001}, {15.457, 6.11816}, {
             13.77341, 5.550780000000001}}, {{13.93361, 5.04102}, {15.61989, 
             5.608890000000001}, {16.741960000000002`, 4.15089}, {
             14.973650000000001`, 3.6294000000000004`}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerWLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerXMLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.726999999999999, 6.01648}, {
             7.884519999999999, 4.}, {7.323999999999999, 4.}, {
             6.443760000000001, 5.560419999999999}, {5.55859, 4.}, {5., 4.}, {
             6.160519999999999, 6.01648}, {5.027529999999999, 8.}, {
             5.580260000000001, 8.}, {6.44373, 6.4670000000000005`}, {7.30133,
              8.}, {7.858, 8.}}, {{10.21241, 4.736269999999999}, {9.04211, 
             8.}, {8.43231, 8.}, {8.43231, 4.}, {8.90442, 4.}, {8.90442, 
             5.558230000000002}, {8.85815, 7.23077}, {10.03149, 4.}, {
             10.392400000000002`, 4.}, {11.56769, 7.239559999999999}, {
             11.52338, 5.558230000000002}, {11.52338, 4.}, {
             11.995480000000002`, 4.}, {11.995480000000002`, 8.}, {
             11.382750000000001`, 8.}}, {{13.303540000000002`, 4.43079}, {
             13.303540000000002`, 8.}, {12.82854, 8.}, {12.82854, 4.}, {15., 
             4.}, {15., 4.43079}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerTXTIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
            1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
            0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0,
             2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
            0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0,
             1, 0}}}, CompressedData["
1:eJx10DEKgDAQRNFFbexTWGyhSwgp9hA5g0cQrL1/Z8Bs4cAIYXjwhZDjes57
FpG1n6WfSeLb27c2Volz+/dhBxtxrIPL2Ar/oQtZg16JsQ879Gyxx3vEuygx
3iPs0Fdi7NHb2EycoA8b9EqMfWovO5kdXA==
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerFileOpenerTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TagBox[
         PaneBox[#, ImageSize -> {Full, Automatic}], 
         EventHandlerTag[{{"MouseClicked", 1} :> 
           DefinitionNotebookClient`FileTreeOpen[
             EvaluationCell[]], Method -> "Preemptive", PassEventsDown -> 
           Automatic, PassEventsUp -> True}]], 
        MouseAppearanceTag["LinkHand"]]& )}], 
   Cell[
    StyleData["HintPodTitleBar"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{
            Offset[{0, -3}, {1, 1}], 
            Offset[{0, -1.3443}, {1, 1}], 
            Offset[{-1.3443, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{1.3443, 0}, {-1, 1}], 
            Offset[{0, -1.3443}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], {-1, -1}, {-1, -1}, {-1, -1}, {1, -1}, {
            1, -1}}]], 
         InsetBox[
          FormBox[
           StyleBox[
           "\"Notebook Analysis\"", FontColor -> GrayLevel[0.4], FontColor -> 
            GrayLevel[0.4], FontFamily -> "Source Sans Pro", FontWeight -> 
            Plain, FontSize -> 13, StripOnInput -> False], TraditionalForm], 
          Offset[{8, 0}, {-1, 0}], 
          NCache[
           ImageScaled[{0, 1/2}], 
           ImageScaled[{0, 0.5}]]], 
         TagBox[
          TagBox[
           TooltipBox[{
             GrayLevel[0.6], 
             DiskBox[
              Offset[{-13, -10}, {1, 1}], 
              Offset[6]], 
             GrayLevel[0.97], 
             AbsoluteThickness[1.5], 
             CapForm["Round"], 
             LineBox[{{
                Offset[{-15, -8}, {1, 1}], 
                Offset[{-11, -12}, {1, 1}]}, {
                Offset[{-15, -12}, {1, 1}], 
                Offset[{-11, -8}, {1, 1}]}}]}, 
            FrameBox[
             StyleBox[
             "\"Close analysis pod\"", "Text", FontColor -> 
              RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
              "Plain", FontTracking -> "Plain", StripOnInput -> False], 
             Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
             RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
             StripOnInput -> False], TooltipDelay -> 0.1, 
            TooltipStyle -> {Background -> None, CellFrame -> 0}], 
           Annotation[#, "Close analysis pod", "Tooltip"]& ], 
          EventHandlerTag[{"MouseClicked" :> NotebookDelete[
              EvaluationCell[]], Method -> "Preemptive", PassEventsDown -> 
            Automatic, PassEventsUp -> True}]]}, AspectRatio -> Full, 
        ImageSize -> {Full, 20}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 0}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterTop"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {4, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterBottom"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {0, 4}}]& )}], 
   Cell[
    StyleData["HintPodFooter"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{{-1, 1}, {-1, 1}, 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 1.3443}, {-1, -1}], 
            Offset[{1.3443, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-1.3443, 0}, {1, -1}], 
            Offset[{0, 1.3443}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], {1, 1}, {1, 1}}]], 
         InsetBox[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{3}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False], 
              
              StyleBox[#, FontColor -> GrayLevel[0.4], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 12, 
               StripOnInput -> False], 
              StyleBox[
               TemplateBox[{5}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False]}, "RowDefault"], TraditionalForm]], 
          Offset[{5, 2.5}, {-1, 0}], {-1, 0}]}, AspectRatio -> Full, 
        ImageSize -> {Full, 21}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 3}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodMenuItems"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       TemplateBox[{#, FrameMargins -> 3, Background -> GrayLevel[1], 
         RoundingRadius -> 0, FrameStyle -> Directive[
           AbsoluteThickness[1], 
           RGBColor[0.75686, 0.82745, 0.88235]], ImageMargins -> #2}, 
        "Highlighted"]& )}], 
   Cell[
    StyleData["HintPodActionMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], #2}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          Dynamic[
            If[
             CurrentValue["MouseOver"], 
             GrayLevel[0.96], 
             GrayLevel[1.]]]}, "Highlighted"], ButtonFunction :> 
        ReleaseHold[#3], 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["HintPodDisabledMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], 
              StyleBox[#2, FontOpacity -> 0.4]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          GrayLevel[1.]}, "Highlighted"], ButtonFunction :> Null, 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic, Enabled -> False]& )}], 
   Cell[
    StyleData["HintPodActionLabel"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[#, FontColor -> GrayLevel[0.2], FontFamily -> 
         "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, LineIndent -> 
         0, StripOnInput -> False], FrameMargins -> 0, ImageMargins -> 0, 
        BaselinePosition -> Baseline, ImageSize -> Full]& )}], 
   Cell[
    StyleData["HintPodMenuDelimiter"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[
         GraphicsBox[{
           CapForm["Round"], 
           GrayLevel[0.9], 
           AbsoluteThickness[1], 
           LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
          PlotRange -> {{-1, 1}, {-1, 1}}, ImageMargins -> {{0, 0}, {2, 2}}, 
          ImagePadding -> {{5, 5}, {0, 0}}, ImageSize -> {Full, 2}], 
         LineIndent -> 0, StripOnInput -> False], FrameMargins -> 0, 
        ImageMargins -> 0, BaselinePosition -> Baseline, ImageSize -> 
        Full]& )}], 
   Cell[
    StyleData["HintPodIconChevron"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.2], 
         AbsoluteThickness[1.8], 
         CapForm["Round"], 
         JoinForm["Miter"], 
         LineBox[{{-0.5, 1}, {0.5, 0}, {-0.5, -1}}]}, AspectRatio -> Full, 
        BaselinePosition -> Bottom, ImageMargins -> {{0, 4}, {0, 0}}, 
        ImageSize -> {5.6, 7.7}]& )}], 
   Cell[
    StyleData["HintPodIconPopOut"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYC4h1yra8Dd6g4rHN/WCWip+KwRiYqxXq+isNk
CZYwvlwEDROHqYPpKwUrUHFgAIEDKg5nzwDBG2VU/hlluPogMEMCzm9kOdpv
aC6OJi/mINR84NRCVwQfIq8M519wufHhi5Yymn4lNPOVHNLAQBHO/6YR03/o
K5eDB9Ab69wFHJoeHZ+xexqng8r0/xPqfvM5cG9dVnl8JacD0FO6m+byOPxL
/f4kUZHbQZr3ge4EBW6HD2IeAX9m8Dhkzyqfs2gxp8ONxmK3Kd/4HOYsUt75
p50Tbi6YesgF9b8ShJ+oCOfD3Anjw/zx9JP8pXx7hD9h4QfjqxtyAKNCBU0e
EY4wPqr5iHh4/nvlx0tnVRyYObvkk98pOwA9+X75MRUHWWD03udHxCssngGf
XO7X
          "]]}, AspectRatio -> Automatic, ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconWrench"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.4], 
         AbsoluteThickness[1], 
         Opacity[1.], 
         JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGYCYmWv6mZ9n3/2cmJZvp/5BBzci37yv9wu6/Au
ysnuhaQynG8at8uT55AGXJwBDHQdPl3yTRKIUIfzo1Ks7/vzajiosjVOdfbW
ccjaUzJZokUFrv8ySLmlqoPbts9/r1iowsVh6mD6zp4BAh4NnPbA3AHTr+ss
8/rRNoS7YXyYv2D+7H/ySf5SPrdD7D/nX29ff7H/6hXZZnGNGc6HqYPRMPED
b+bZ6FxBqAPpOprL7YAefgCtVISU
          "], CurveClosed -> {1}]}, AspectRatio -> Automatic, 
        BaselinePosition -> Scaled[0.2], ImagePadding -> 0.5, 
        ImageSize -> {16., 16.}, PlotRange -> {{0., 16.}, {0., 16.}}]& )}], 
   Cell[
    StyleData["HintPodIconInfo"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{6.81, 13.}, {
           3.3914, 13.}, {0.62, 10.229}, {0.62, 6.81}, {0.62, 3.3914}, {
           3.3914, 0.62}, {6.81, 0.62}, {10.229, 0.62}, {13., 3.3914}, {13., 
           6.81}, {13., 10.229}, {10.229, 13.}, {6.81, 13.}}, CompressedData["
1:eJxTTMoPSmViYGCQB2IQbct1fXGBrbRD6+vAHXKtvA7r3B9WiayTdoCI8zgc
/qoR039IHkoLOjCAgYKDB0iZu4CDPFijgsOsmSDAC1UnCzWPE0rLQMXZHV6x
mAia1Ug56E1Y8MMwjdXh685bXX9VJRx4Jq9sCvRkcTh7BgREHfoPgTSwOAQB
db8OFHYAO4eLFeo+IQcRMIMLzoe4h9dBW2LqFc4MYYd4zdMCx38JOviYdzom
pIo4PJgjuHSvo6jDkgKQz0QdCsEelHDQjAHZJAa1VxIqLwH3Jzofok8S4i9W
RQews67LQsJhnoKDMRjIQ9Q3wMJJwQFMJULDSRJmrhzUPKh6Blmof+QcwM6K
kXb4Bgq2rzJQcXFovMhA5UUdciqqluo0SztsKMqY+NZG2OHV1E08hTrSDquA
oTmXQdABPX4BaWq/EA==
           "], {{8.81, 9.79}, {8.8101, 9.5122}, {8.5878, 9.2854}, {8.31, 
           9.28}, {7.51, 9.28}, {7.2283, 9.28}, {7., 9.5083}, {7., 9.79}, {7.,
            10.62}, {7.0054, 10.898}, {7.2322, 11.12}, {7.51, 11.12}, {8.35, 
           11.12}, {8.6239, 11.115}, {8.8447, 10.894}, {8.85, 10.62}}}]}, 
        AspectRatio -> Automatic, ImagePadding -> 0.5, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconNone"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       GraphicsBox[{}, AspectRatio -> Automatic, ImageSize -> {16., 16.}, 
        PlotRange -> {{0., 16.}, {0., 16.}}, BaselinePosition -> Scaled[0.2], 
        ImagePadding -> 0.5]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreAlways"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYCYpF17g+rROQcbLmuLy6wlXaoBguoOvQf+qoR
w6/i8CZwh1zralWH4oyJb2vsVRx0N819v/yYqoO0/l0VtkYEv/U1UOFRBP/D
8mPe5pyqcP0z8oSaD3ipws2H0famcbs8fVQd2BqnOnevUXUAa+dWdUgSiLDc
ckLVwQPounXHVeB8kK1TmxH8gN7peULOKnD9EP+owM2H+QvmzyUFIBEeuHxC
mb+c2CtuuP75NjpXZj3jgpsP0s11nRPO5+feuqzyOAec73dxYsy/w+xw/WDr
uNjh5n9MPhPr7cEG93+V2Wq78Nus8PCB8WHhB+PDwhemHxb+MPNh8ZMGBhJw
f8Lkv2nEAJXwOGyu/rQh4DWrwwrTs9Z+F7kdvHiYtNunsTrYgrwpy+XQteHh
y6lGbA6HxNWCWRdzOJwKObhiyTk2B3fmCm4VDXaouRwOEaeMjmzUY4OHhybI
eA02eHgt/GH4bJ0qm4PT+bSrz4Hh+Z0tfobPVDZ4eIOVx7DD3QlzNwMYIPx1
smzffCl9FUg4u7M5hPEBU1S+isPs0Pmr195gdTAGgc0qUHewOswDJhfv7yoO
/g7CiYcvszoAU9vrQAtVh6V+QAFnNqg9iHj5dMk3SWAGIt78wBGJiFcYH+ZP
GB/mT5h+WLqBmQ/zJwC4F0s3
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInCell"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
            0}}}, {{{11.69, 13.37}, {7.57, 13.37}, {7.57, 12.37}, {7.76, 
           12.37}, {11.19, 8.93}, {11.19, 1.25}, {7.57, 1.25}, {7.57, 0.25}, {
           12.19, 0.25}, {12.19, 13.37}}, {{9.17, 12.37}, {11.17, 12.37}, {
           11.17, 10.37}}}], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIjIGYCYo+HVSLr3EUdbLmuLy6wlXZYUgBiyTlAxJUc
kt9FOdllyDuU6yrKf1mD4LM879F466sMV28MApuVHX7yv9y+3lkOQj9WdngU
Ib794gFZh/Dojfvf/FN22CHX+jrQAsHvf/JJ/tJ6GTgfbI+ODFz/2TMgIA03
vxroqodVQg5gSkQO6m4mVPubGR1E7I/d2fpE2cHy2tFckwYGB2n9uypsjCoO
YG89/GcP4wd5zm1QO/QHzr9wNeyN/u5f9jD9kHD4aQ8zX+z36XcnD3+3v8fE
2SXfrOygvqBzw8OX3+yDQAxHBB/srr9KcL7mW959BjuV4PrnCi7de7BcCW4+
LLwhND88PmDyEHcLOjg2PTo+Y/d3+/21shbpLYIOTglPLyjd/mZ//wH35JVM
CD4knATgfL0JC34YPuOH688Nq1237REf3HzNmP5DXzX4HLhVNOp6dv6yP3xZ
O1UyiRcePrlH/22q/sQDD79vGiANPA5yy1946NUzOOy61fU39TuPw5GNenmL
GxkdwPal8cLjB2Y+LP7SwEDCgQEMZODyf7+VPpgTKOOw9ldM7tE6XgfmCqCL
9sk43PfvnZ4nxAuJZ2NZB5j9UV933uraK+swf/XaG/HfeCDudZJzuA1yTgov
PH3CzBcAJg/mdHmHVElQyuSH851lXj8ykxKEq4eFNwCKHGBr
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInNotebook"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYC4qAdcq2vAwUcbLmuLy6wFXdYUgBiSTp4PKwS
Weeu4GCgtVL4AouUw1zBpXsPlis4vDlgqexlLeWg+ZZ3n8FOBB+s/y+CH6S+
oHODoyJc/z0mzi75ZkW4+cYgsFnRoanYbco3N0kHEftjd7Y+UXRYeM3kvcVR
CYeQx0tnH2FQgroLwb9pWxmxYqs4nP9zQfrmV8bicP0g1VzXxeDmf9OI6T/0
lcsB6Bmgj6QcGMDggz1MvoTnRNz7f2/sf/K/3L7+saLDzmCriP/PX9iHR2/c
/+YfzL1P4Pz+Xoc96+IfwPkrVqZm1068AdcPtAxo4yW4+ccenln/jOGkPcz/
MjWJRqEGh+xh4QPjw8IPxoeFL0w/LPxh5sPiB0KzwuNPHhibO+Su2h8GKTvE
7aAYeYAl7+5Z+/rfVgXnOLgdPu6qO5h345j9voPiasGsXHA+JJw44Hy9CQt+
GD5jh+vPDatdt+0RG9x8TZByDTYH/uky5V7st+21JaZe4cxgdZgp5PnFqOuh
vQY/99ZlP1kcIO54CjWfxeFeX0HUh0Uv7bdEft15i4vVoa2/Q3Oiy1t77Xax
m+fKWeHxAzMfFn9pYCACj1+YfMeX29cbgfF/+LJ2qmQSKzx95B79t6n6Ews8
/cDsB3O5JB1Upv+fUPebxeHIRr28xQeB6e+Cy40PX1gdnjTPO7uKX8qh/8kn
+Uv57A4sYXy6m2KlHDjBCY3DwV9OLMvXGJjeda7MejaXC56eYeENAPSkchE=

          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
          3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJdIGYC4qAdcq2vL6o52HJdX1ywVwtC24rB+YdTViWE
XBKE86tF1rk/rOJxMAaBzxpwPkReDY2vCDVPCMpXhvPB+jerwfnPf6/8eOms
ukPDdoemR+wiUHkNuHtgfJh7YXy2xqnO3W/U0eQ14ObB+DD7YHzNmP5DXzWY
4PzY3KP/NlX/toeZBxYP/GIPsw/GBzuHSxrOX7TF/MchFSkH9g9iHgF/Ptmb
vrdwdTeSdNjZywYU+WQPcb8E1B+f7H8EP146m0XcYeE1E6DKT/Z9IGUXRB02
V3/aEJD92R5s7A4Rh1kzQeCr/YQFPwyfvRN2+Put9MEcwe/2894vP+ZtLuxw
3793ep7QT3uIOiEHkC651t/2YH8a80LtY3NA5TPB+RPrflsVnPtkL/8lJ6xW
T8jhTSDYo1DzxOB8BjBQh/O/aQADzlQTTV4bbh6MD7MPxoeFfwDI2czaDmfP
gAA0nCdqOTglPL2gdFvDweNhlci645oO8iAPzdOEmPNXw+EPMDp9k7Qc4nZ5
8jC9VncAG39KywE9/QIAH6UuJw==
          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{
          5.63, 11.05}, {5.63, 10.44}, {6.0569, 10.539}, {6.5048, 10.49}, {
          6.9, 10.3}, {9.53, 10.3}, {9.53, 11.05}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{7.92, 3.73}, {
          8.0396, 3.4994}, {8.0784, 3.2353}, {8.03, 2.98}, {9.41, 2.98}, {
          9.41, 3.73}}}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}}}, {{{6.73, 6.21}, {6.2, 5.82}, {6.67, 5.46}, {11.22, 5.46}, {
          11.22, 6.21}, {6.73, 6.21}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{8., 8.7}, {
          8.0514, 8.4458}, {8.0162, 8.1818}, {7.9, 7.95}, {10.25, 7.95}, {
          10.25, 8.7}}}]}, AspectRatio -> Automatic, ImagePadding -> 0.75, 
        ImageSize -> {15., 15.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconHint"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[#], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}}, {{{9.015, 17.37}, {4.4559, 17.37}, {0.76, 
           13.645}, {0.76, 9.05}, {0.76, 4.455}, {4.4559, 0.73}, {9.015, 
           0.73}, {13.574, 0.73}, {17.27, 4.455}, {17.27, 9.05}, {17.27, 
           13.645}, {13.574, 17.37}, {9.015, 17.37}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQbcixRiYqRcVh3bak+pu23A5rf8XkHt2n7OC/fkpq
x2MOB8+5DWqHnik5nP8e/HjpbHYHj4dVIuvYlRyAiisjVrA78Bau6b6toegQ
ApQ9soDdQepAtIJjoILDJ8fzaVefczgs6Nzw8GWoPNx84yMb9fIeyzr831T9
acMFXod1N+LL/OVkHV5uX8/8/IyAw7Fck4btDrIOZQ/mCC7dK+TAXMGtomEn
6/DP+dfb1w0iDkIi9sfufJV1ePRy6iYeQzGHac7dOc+t5R3SwEDcwe7FzTW/
bBQc9kybwF+1TcLh7TwbnStSig7Hd+3oZSuQdDjab1iuy6jk0MIL8qGkg8f+
WlmL50oO9uHRG/fnSDr4fu4LLjmi7HDw1ELXbZslHGDhAzO//9BXjRh+VQeG
iXW/rQzEHKzv+/dOz1N1uFfY1fekSMRhzhGFDUUZqhB/LhaCmFOs6sC0h1VI
ZL+Ag8g6d2AIqjqYCJrZ7L3E64Ae/gDrrapT
           "], CompressedData["
1:eJxTTMoPSmViYGBQBGIQ/emSb5KAhJoDAwg0aDhYbjlRtu++isNudX7urWpK
DrX2pnG7Tqo4TFPsKy2sVnRQvv2zLqtGBULfUXAI6J2eJ8Ss4mDSsN2hKUnB
Ia0jOfZOmrKD/l0Vtsar8g5Gz9apPlms5GDgs4zLLVXeweLHoZRVDxQdnNdm
3ivskneQW/7CQ09e0aHEbco3tnh5h+jLex6LxCo4FErzPtC9IO+wVfT36Xed
8nDzH5tJHYheIOeQBxJ4pOCgu2nu++Vscg75Qs0HTjUqOjDkN7IcPS/rcObd
ycNOukoObqqlTLM4ZOD+O7JRL2/xQWkHHibtdrFITYeb8WX+ctOkHQ6eWui6
zVjLQfD4rh29bdIO/Ye+asTwazuAnJswRdohaIdc6+uL2g6qbI1TnbtlHGy5
ri8uqNVxEIgAhtg3WYj5B3QcgKEkzcsAdOfS2UcUDHQdEp5eULotqehw89z3
4Mepug63pGsSjUyVHMr3zZfSj9V1uKKdKvkoQtmhOGPi25p6XQeQ8p91KhB9
lroOIGH7UlWH+qw9JZNn6EDs54bGF4OOA9AVtlzhag6KG4oyJupqO4CCYaGr
mgM4XiO0HK5WvFQz9FBzuAzi7tR0cNv2+e8VCzUHJ5AF0poO6PEPAFdvzZk=

           "]}]}, AspectRatio -> Automatic, BaselinePosition -> Scaled[0.1], 
        ImagePadding -> 0.5, ImageSize -> {14., 14.778}, 
        PlotRange -> {{0.76, 17.27}, {0.73, 17.37}}]& )}], 
   Cell[
    StyleData["FileManagerFile", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{60, Inherited}, {0, 0}}, Deployed -> True, Evaluatable -> 
    True, CellGroupingRules -> {"SectionGrouping", 100}, 
    CellFrameMargins -> {{5, 5}, {2, 2}}, 
    CellFrameLabelMargins -> {{0, Inherited}, {Inherited, Inherited}}, 
    ContextMenu -> {
      MenuItem["Open", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeOpen[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Un/Mark as Excluded", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeExclusionToggle[EvaluationCell[]]"]]\
, MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Copy Path to Clipboard", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeCopy[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"]}, ShowStringCharacters -> 
    False, Background :> FEPrivate`If[
      CurrentValue["MouseOver"], 
      GrayLevel[0.92], 
      GrayLevel[0.99]]], 
   Cell[
    StyleData[
    "FileManagerDirectory", StyleDefinitions -> StyleData["FileManagerFile"]],
     ShowGroupOpener -> "Inline", Evaluatable -> False, CellEventActions -> 
    None, CellFrameLabels -> {{
       Cell[
        BoxData[
         TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
        None], None}, {None, None}}, ContextMenu -> {
      MenuItem["Open/Close Group", 
       KernelExecute[SelectionMove[
          EvaluationCell[], All, Cell]; FrontEndTokenExecute[
          EvaluationNotebook[], "OpenCloseGroup"]], MenuEvaluator -> 
       Automatic, Method -> "Queued"], 
      MenuItem["Open Directory", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeOpen[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Un/Mark as Excluded", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeExclusionToggle[EvaluationCell[]]"]]\
, MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Copy Path to Clipboard", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeCopy[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"]}, Background -> 
    GrayLevel[0.99]], 
   Cell[
    StyleData[
    "FileManagerEmptyDirectory", StyleDefinitions -> 
     StyleData["FileManagerDirectory"]], CellFrameLabels -> {{
       Cell[
        BoxData[
         TemplateBox[{}, "FileManagerEmptyDirectoryIconTemplate"]], 
        Background -> None], None}, {None, None}}], 
   Cell[
    StyleData["FileManagerBottomSpacer"], ShowCellBracket -> False], 
   Cell[
    StyleData["FileManagerTopSpacer"], CellMargins -> 0, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    CellOpen -> False], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    PasteAutoQuoteCharacters -> {}, StyleMenuListing -> None], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["ExampleImage"], PageWidth :> First[{650}], 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.88072, 0.61104, 0.14205], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.36842, 0.50678, 0.7098], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.56018, 0.69157, 0.19488], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", 
    PrivateFontOptions -> {"OperatorSubstitution" -> False}, FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 1053094956087266899; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Paclet", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "FileOpen"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[1053094956087266899]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 4898876371082581810; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Paclet", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "Directory"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[4898876371082581810]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["RelatedSymbol", StyleDefinitions -> StyleData["Item"]], 
    DefaultNewCellStyle -> {"RelatedSymbol", FontFamily -> "Source Sans Pro"},
     DefaultFormatType -> DefaultInputFormatType, FormatType -> InputForm], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["Input"], CellProlog :> First[{
       Quiet[
        (Block[{$ContextPath}, Once[
           ReleaseHold[
            CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
           "KernelSession"]; If[$VersionNumber >= 12.2, 
           Needs["DefinitionNotebookClient`"], 
           Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
         DefinitionNotebookClient`LoadDefinitionNotebook["Paclet", #]; 
         Null]& )[
         InputNotebook[]]]}]], 
   Cell[
    StyleData["Code"], CellProlog :> First[{
       Quiet[
        (Block[{$ContextPath}, Once[
           ReleaseHold[
            CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
           "KernelSession"]; If[$VersionNumber >= 12.2, 
           Needs["DefinitionNotebookClient`"], 
           Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
         DefinitionNotebookClient`LoadDefinitionNotebook["Paclet", #]; 
         Null]& )[
         InputNotebook[]]]}]], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[
      Rational[16, 17]]], 
   Cell[
    StyleData["DisclosureDetails"], CellMargins -> {{94, Inherited}, {10, 0}},
     FontSize -> 12, FontColor -> GrayLevel[0.5]], 
   Cell[
    StyleData[
    "PacletDirectoryChooser", StyleDefinitions -> StyleData["Output"]], 
    Deletable -> False, CellMargins -> {{50, 40}, {Inherited, Inherited}}], 
   Cell[
    StyleData["PacletDirectoryChooserTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        PaneSelectorBox[{"Notebook" -> TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                    StyleBox[
                    "\"Paclet Directory\"", "Text", FontWeight -> "SemiBold", 
                    StripOnInput -> False], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]}, {
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Notebook"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Same as Notebook\"", "RadioButtonBarLabel", 
                    StripOnInput -> False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}], "  ", 
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Custom"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Other\"", "RadioButtonBarLabel", StripOnInput -> 
                    False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}]}], "Deploy"], 
                    RadioButtonBar[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = 
                    RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {
                    "Notebook" -> "Same as Notebook", "Custom" -> "Other"}, 
                    Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]]], 
                    "Text", FontSize -> 13, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                   ItemBox[
                    TemplateBox[{
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{16.273, 20.84}, {16.273, 
                    13.062}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionOpenAllGroups"]; 
                    SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Expand folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionCloseAllGroups"]; 
                    FrontEndTokenExecute[
                    EvaluationNotebook[], "OpenCloseGroup"]; SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Collapse folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    DynamicModuleBox[{RSNB`r$$ = 0}, 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}]}, ImageSize -> 
                    14, ImagePadding -> 1, PlotRange -> 1.3], True -> 
                    OverlayBox[{
                    AnimatorBox[
                    Dynamic[
                    BoxForm`RemapVariable[RSNB`r$$, {0, (-2) Pi}], 
                    BoxForm`RemapValue[#, RSNB`r$$, {0, (-2) Pi}]& ], {0, 1}, 
                    AppearanceElements -> {}, DefaultDuration -> 1, ImageSize -> 
                    0.1], 
                    GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}], {{{
                    Cos[
                    Dynamic[RSNB`r$$]], -Sin[
                    Dynamic[RSNB`r$$]]}, {
                    Sin[
                    Dynamic[RSNB`r$$]], 
                    Cos[
                    Dynamic[RSNB`r$$]]}}, {0, 0}}], {{{1, 0}, {0, 1}}, {0, 
                    0}}]}, ImageSize -> 14, ImagePadding -> 1, PlotRange -> 
                    1.3]}]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]], 
                    ContentPadding -> False], Initialization :> (CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}] = False), 
                    DynamicModuleValues :> {}], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    If[
                    And[CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}] === 
                    "Notebook", 
                    Not[
                    DirectoryQ[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]], Appearance -> None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Queued", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Refresh files\""}, "PrettyTooltipTemplate"]}, 
                    "RowDefault"], ItemSize -> Fit, StripOnInput -> False]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Left, Right}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
             DefaultBaseStyle -> "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"], "Custom" -> TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                    StyleBox[
                    "\"Paclet Directory\"", "Text", FontWeight -> "SemiBold", 
                    StripOnInput -> False], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]}, {
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Notebook"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Same as Notebook\"", "RadioButtonBarLabel", 
                    StripOnInput -> False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}], "  ", 
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Custom"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Other\"", "RadioButtonBarLabel", StripOnInput -> 
                    False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}]}], "Deploy"], 
                    RadioButtonBar[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = 
                    RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {
                    "Notebook" -> "Same as Notebook", "Custom" -> "Other"}, 
                    Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]]], 
                    "Text", FontSize -> 13, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                   ItemBox[
                    TemplateBox[{
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{16.273, 20.84}, {16.273, 
                    13.062}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionOpenAllGroups"]; 
                    SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Expand folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionCloseAllGroups"]; 
                    FrontEndTokenExecute[
                    EvaluationNotebook[], "OpenCloseGroup"]; SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Collapse folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    DynamicModuleBox[{RSNB`r$$ = 0}, 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}]}, ImageSize -> 
                    14, ImagePadding -> 1, PlotRange -> 1.3], True -> 
                    OverlayBox[{
                    AnimatorBox[
                    Dynamic[
                    BoxForm`RemapVariable[RSNB`r$$, {0, (-2) Pi}], 
                    BoxForm`RemapValue[#, RSNB`r$$, {0, (-2) Pi}]& ], {0, 1}, 
                    AppearanceElements -> {}, DefaultDuration -> 1, ImageSize -> 
                    0.1], 
                    GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}], {{{
                    Cos[
                    Dynamic[RSNB`r$$]], -Sin[
                    Dynamic[RSNB`r$$]]}, {
                    Sin[
                    Dynamic[RSNB`r$$]], 
                    Cos[
                    Dynamic[RSNB`r$$]]}}, {0, 0}}], {{{1, 0}, {0, 1}}, {0, 
                    0}}]}, ImageSize -> 14, ImagePadding -> 1, PlotRange -> 
                    1.3]}]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]], 
                    ContentPadding -> False], Initialization :> (CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}] = False), 
                    DynamicModuleValues :> {}], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    If[
                    And[CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}] === 
                    "Notebook", 
                    Not[
                    DirectoryQ[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]], Appearance -> None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Queued", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Refresh files\""}, "PrettyTooltipTemplate"]}, 
                    "RowDefault"], ItemSize -> Fit, StripOnInput -> False]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Left, Right}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"]}, {
               TagBox[
                GridBox[{{
                   InputFieldBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectory"}]], 
                    String, FieldHint -> "Choose paclet directory", 
                    BaseStyle -> {
                    FontSize -> 12, FontColor -> GrayLevel[0.25]}, 
                    ImageSize -> {Full, 24}, BaselinePosition -> Baseline, 
                    FrameMargins -> {{3, 3}, {1, 1}}], 
                   ButtonBox[
                    StyleBox[
                    "\"Browse\[Ellipsis]\"", "Text", FontSize -> 12, 
                    StripOnInput -> False], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    Replace[
                    SystemDialogInput["Directory", 
                    Replace[
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}], Except[
                    PatternTest[
                    Blank[], DirectoryQ]] :> Replace[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]], Except[
                    PatternTest[
                    Blank[], DirectoryQ]] :> Directory[]]]], Pattern[RSNB`s, 
                    Blank[String]] :> With[{RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]]}, 
                    If[RSNB`nbDir === RSNB`s, 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = 
                    "Notebook"; Null, 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = RSNB`s; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = 
                    "Custom"; Null]; If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`s]]]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]]], 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]], Method -> "Queued", ImageSize -> {Automatic, 24},
                     Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    Appearance -> Automatic, Evaluator -> Automatic]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {"Text"}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"]}, 
         Dynamic[
          CurrentValue[
           EvaluationCell[], {TaggingRules, "PacletDirectoryType"}]], 
         ImageSize -> Automatic], Background -> GrayLevel[0.98], FrameMargins -> 
        10, FrameStyle -> GrayLevel[0.8], ImageSize -> {
          Scaled[1], Automatic}, StripOnInput -> False]& )}], 
   Cell[
    StyleData["PacletDirectoryChooserErrorTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            GraphicsBox[{
              Thickness[0.028571], 
              StyleBox[{
                
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
                   3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 
                  3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 
                  1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQfbJs33yp88YO51advxqWI+LApN0udvOdsYOre9FP
/pciDhGWW06U/TN26EiOvePWLArnb35VvFXUWgzOtzeN2+WZowTnX614qWZ4
QgluXmvNhc2RosoOMPsOnlroui1Y2SGMT3fT3PXGDn8kiq8LTVJ24Lq+uMC2
y9ihx+sVi8lGZYenF5Ru/4xD8EHW8Djpw/lvAnfItb7Wg/NDHi+dfWSBHty8
fKHmA6cS9eD2/Vn58ZKvkh7cPQG90/OEmPXg7oXxYf6B8WH+hfFh4QEzDxZe
MPtg4QlzD9if74Xh7pU6EK3guFEY7h8YH+ZfGB8WHjA+LLxg5qHHHwAbtMYJ

                  "], CompressedData["
1:eJxTTMoPSmViYGCQBWIQfdzbvNPxgLEDSxif7qa7Gg6WW06U7btv7HC14qWa
IYemw78rQMZHY4cIkISdpoPIOveHVV+MHRhAoEHToXSyBEuYn4nDwVMLXbdN
NoXznRKeXlDabQox19bE4V2NvWncLVMH5ds/67JkTKDmmsLNz5j4tsZe1Mxh
2+e/VypOGjs0TnXuzlE3c9g3X0r/7hIEv/kAyCI9OB9kHV8ugg+2T1YPbt4u
Tx4m7eO6cPt+BD9eOrtFF+4e8Zvnvgcn6zpot4vdPLcdwa8FSu/qNHU4ewYI
ePTg/oXxYeEBCg4RPT14eBXacl1fXKAHD09jENis57Bs9hGFDZs0HAJ6p+cJ
MetD5OdqOIDDPwHBjwM52NsYzp81EwgqEXyQ9uYFxnDz0OMPAAfUunk=
                  "], CompressedData["
1:eJxTTMoPSmViYGBQAmIQbcixRibqiJFD41Tn7pzl9g58upvmvlc3drA3jdvl
mWPv0Hzg1ELXMmOHaUDp59L2Dkza7WI31xlDxLfZOQT0Ts8TCnZ0MAo10Fop
zOsQlWJ937/X0eFMvcf+2rlsDue/Bz9e2u3okLoqISRIncFhnfvDKhE/R4c/
Kz9e8k36bJ8vBDTJ0NHh5OQl2Wr3X9k7JTy9oMTt6PDE85Lp5PyH9uogB95y
cHilKHXX8c0Vex6QA1Y6OOgfsLMqfbrb3i9JIMKyxMGBAQqArl9+zBrB318r
a5HuwgLnV0asMD27mwHOjxTffpHh3i97mHmb9PIWM+75Yg+zz/Dyt/VrTN7a
w9wzU8jzi1HXY3uYe4Gh8nvlxxv2MP8YXD0TxeWxfT/Mv9M49185P3vXflh4
/LrA+lW3+Jo9LLzA+hbpwcPzV13WnhJhfXh4P146+4jCBn14fIDD09oAHl/F
GRPf1sw3cDj8VSOm/5G9w5vAHXKt3IZQ/0HDoQHBFwFFwBcEHxR9zQlGcP3o
6QEAaQXeGQ==
                  "]}]}, {
                FaceForm[
                 RGBColor[0.85098, 0., 0.10588, 1.]]}, StripOnInput -> 
               False]}, {
             ImageSize -> 12, BaselinePosition -> Scaled[0.05], ImageSize -> 
              16}], #}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
          False, GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], FontColor -> 
        RGBColor[0.86667, 0.06667, 0.], FontSize -> 13, FontFamily -> 
        "Source Sans Pro", StripOnInput -> False]& )}], 
   Cell[
    StyleData["PacletDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (OverlayBox[{
         TemplateBox[{}, "FileManagerDirectoryIconTemplate"], 
         GraphicsBox[{
           Thickness[0.041667], {
            FaceForm[{
              RGBColor[0.961, 0.961, 0.961], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.545, 22.597}, {
             7.5464, 20.5}, {2.5454, 18.402}, {2.5454, 12.598}, {2.5454, 
             12.597}, {2.5454, 6.7952}, {7.5454, 4.6962}, {7.546, 4.6972}, {
             12.545, 2.5992}, {17.545, 4.6972}, {17.545, 4.6962}, {22.545, 
             6.7952}, {22.545, 12.597}, {22.545, 12.598}, {22.545, 
             18.402}}}]}, {
            FaceForm[{
              RGBColor[0.898, 0.898, 0.898], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 14.057}, {
             16.875, 14.057}, {16.875, 8.3359}, {17., 8.1169}, {21.952, 
             6.0399}, {22.049, 6.2709}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.057}, {6.875, 
             14.057}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 6.0399}, {7., 
             8.1169}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.874, 6.2383}, {6.9515, 4.1733}, {7.0475, 
             3.9423}, {12., 6.0193}, {16.952, 3.9423}, {17.048, 4.1733}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{17.125, 14.139}, {17.125, 19.86}, {16.875,
              19.86}, {16.875, 14.139}, {17., 13.92}, {21.952, 11.843}, {
             22.049, 12.074}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{7.125, 14.139}, {7.125, 19.86}, {6.875, 
             19.86}, {6.875, 14.139}, {1.952, 12.074}, {2.048, 11.843}, {7., 
             13.92}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.875, 21.363}, {11.875, 18.356}, {12., 18.303}, {
             12.125, 18.356}, {12.125, 21.363}, {12., 21.415}}}]}, {
            FaceForm[{
              RGBColor[0.749, 0.749, 0.749], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{8.292, 
              19.859}, {12., 21.415}, {15.707, 19.859}, {12., 18.303}}, {{
              17.5, 19.527}, {17.5, 20.192}, {12., 22.5}, {6.5, 20.192}, {6.5,
               19.528}, {12., 17.219}, {12., 17.219}, {15.7, 18.772}, {17.5, 
              19.527}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 5.4026}, {12.5,
              5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
              0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 9.5283}, {21.5, 
              11.207}}, {{21.5, 12.711}, {21.5, 12.291}, {17., 10.403}, {16.5,
               10.613}, {16.5, 10.194}, {15.707, 9.8613}, {16.5, 9.5283}, {
              16.5, 4.8083}, {16.5, 4.8093}, {16.5, 4.3903}, {15.707, 
              4.0573}, {17., 3.5143}, {22.5, 5.8223}, {22.5, 12.291}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
              0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 11.207}, {6.5, 
              9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {7.5, 9.5286}, {8.292, 
              9.8616}, {7.5, 10.194}, {7.5, 10.614}, {7., 10.404}, {2.5, 
              12.291}, {2.5, 12.711}, {1.5, 12.292}, {1.5, 5.8226}, {7., 
              3.5146}, {8.293, 4.0576}, {7.5, 4.3906}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{3.2925, 17.762}, {7.0005, 19.318}, {10.708, 
              17.762}, {7.0005, 16.206}}, {{6.5005, 10.612}, {2.5005, 
              12.291}, {2.5005, 17.01}, {6.5005, 15.332}}, {{7.5005, 
              10.193}, {7.5005, 10.612}, {7.5005, 15.332}, {12., 17.22}, {
              12.5, 17.01}, {12.5, 18.095}, {7.0005, 20.403}, {1.5005, 
              18.095}, {1.5005, 11.626}, {7.0005, 9.3182}, {8.2935, 
              9.8612}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {17.5, 15.332}, {
              21.5, 17.01}}, {{13.293, 17.762}, {17., 19.318}, {20.708, 
              17.762}, {17., 16.207}}, {{17., 20.403}, {11.5, 18.095}, {11.5, 
              17.01}, {12., 17.22}, {16.5, 15.332}, {16.5, 10.612}, {16.5, 
              10.194}, {15.706, 9.861}, {17., 9.318}, {22.5, 11.626}, {22.5, 
              18.095}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{16.5, 4.3906}, {12.5, 2.7116}, {12.5, 7.4316}, {
              16.5, 9.1096}}, {{11.5, 2.7116}, {7.4995, 4.3906}, {7.4995, 
              9.1096}, {11.5, 7.4316}}, {{16.5, 10.614}, {16.5, 10.195}, {12.,
               8.3056}, {8.2915, 9.8616}, {7.4995, 10.194}, {7.4995, 
              10.615}, {6.4995, 10.195}, {6.4995, 3.7256}, {12., 1.4176}, {
              17.5, 3.7256}, {17.5, 10.195}}}]}, {
            FaceForm[{
              RGBColor[0.965, 0.765, 0.749], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{12., 17.662}, {16.945, 15.586}, {16.945, 9.9376}, {
             12., 7.8636}, {7.055, 9.9376}, {7.055, 15.586}}}]}, {
            FaceForm[{
              RGBColor[0.91, 0.655, 0.635], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 17.763}, {
             11.875, 17.763}, {11.875, 12.041}, {6.952, 9.9757}, {7.048, 
             9.7447}, {12., 11.823}, {16.952, 9.7447}, {17.048, 9.9757}, {
             12.125, 12.041}}}]}, {
            FaceForm[{
              RGBColor[0.867, 0.067, 0.], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5, 
              8.5146}, {12.5, 13.234}, {16.5, 14.912}, {16.5, 10.193}}, {{7.5,
               14.912}, {11.5, 13.234}, {11.5, 8.5146}, {7.5, 10.193}}, {{
              15.708, 15.664}, {12., 14.109}, {8.292, 15.664}, {12., 
              17.221}}, {{12., 18.305}, {6.5, 15.996}, {6.5, 9.5286}, {12., 
              7.2206}, {17.5, 9.5286}, {17.5, 15.996}}}]}}, {
          ImageSize -> 12, AspectRatio -> Automatic, ImageSize -> {24., 24.}, 
           PlotRange -> {{0., 24.}, {0., 24.}}}]}, 
        Alignment -> {Right, Bottom}]& )}], 
   Cell[
    StyleData[
    "MainGuideChooser", StyleDefinitions -> 
     StyleData["PacletDirectoryChooser"]], CellGroupingRules -> 
    "NormalGrouping"], 
   Cell[
    StyleData["MainGuideChooserTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        TagBox[
         GridBox[{{
            PaneSelectorBox[{True -> RowBox[{
                 TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                 StyleBox["/", FontColor -> GrayLevel[0.5]]}], False -> 
              RowBox[{
                 TemplateBox[{}, "FileManagerNBIconTemplate"], 
                 StyleBox["/", ShowContents -> False]}]}, 
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "Relative"}]]], 
            InputFieldBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "MainGuidePageString"}]], 
             String, FieldHint -> "Choose a guide page", 
             BaseStyle -> {FontSize -> 12, FontColor -> GrayLevel[0.25]}, 
             ImageSize -> {Full, 24}, BaselinePosition -> Baseline, 
             FrameMargins -> {{3, 3}, {1, 1}}], 
            ButtonBox[
             StyleBox[
             "\"Browse\[Ellipsis]\"", "Text", FontSize -> 12, StripOnInput -> 
              False], ButtonFunction :> 
             With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                EvaluationCell[]}, 
               WithCleanup[NotebookDelete[
                  Cells[RSNB`cell, AttachedCell -> True]]; 
                CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = True, 
                
                Module[{RSNB`initial$, RSNB`res$}, 
                 RSNB`initial$ = SelectFirst[{
                    FileNameJoin[{
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], "Documentation", $Language, 
                    "Guides"}], 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], 
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]}, DirectoryQ, 
                    Directory[]]; 
                 RSNB`res$ = SystemDialogInput["FileOpen", RSNB`initial$]; If[
                   And[
                    StringQ[
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]]], 
                    StringQ[RSNB`res$], 
                    StringStartsQ[RSNB`res$, 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]]]], RSNB`res$ = StringReplace[
                    StringDelete[RSNB`res$, 
                    StringExpression[StartOfString, 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], 
                    Alternatives[$PathnameSeparator, ""]]], "\\" -> "/"]; 
                   CurrentValue[RSNB`cell, {TaggingRules, "Relative"}] = True,
                    CurrentValue[RSNB`cell, {TaggingRules, "Relative"}] = 
                   False]; If[
                   StringQ[RSNB`res$], 
                   CurrentValue[
                    RSNB`cell, {TaggingRules, "MainGuidePageString"}] = 
                   RSNB`res$]], 
                CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                False]], Method -> "Queued", ImageSize -> {Automatic, 24}, 
             Enabled -> Dynamic[
               Not[
                CurrentValue[
                 EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
             Appearance -> Automatic, Evaluator -> Automatic]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
          False, GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "ColumnsIndexed" -> {2 -> 0.2}, "Rows" -> {{Automatic}}}, 
          BaseStyle -> {"Text"}], "Grid"], Background -> GrayLevel[0.98], 
        FrameMargins -> 10, FrameStyle -> GrayLevel[0.8], ImageSize -> {
          Scaled[1], Automatic}, StripOnInput -> False]& )}], 
   Cell[
    StyleData["AttachedMessage"], Deletable -> True, 
    CellMargins -> {{60, 40}, {15, 5}}]}, Visible -> False, FrontEndVersion -> 
  "13.3 for Microsoft Windows (64-bit) (May 18, 2023)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"3e5dfd3c-c701-4f2d-88c6-0899e9b596bc"
]

