Notebook[{

Cell[CellGroupData[{
Cell["FileTreePicker", "Title",
 CellTags->{"Name", "TemplateCell", "Title"},
 CellID->663496386,ExpressionUUID->"4522c44b-11a9-4c32-ad1a-91dbe132e0c1"],

Cell["\<\
Create a file tree with expandable directories to select multiple files\
\>", "Text",
 CellTags->{"Description", "TemplateCell"},
 CellID->733391762,ExpressionUUID->"1c1b7d65-a7b2-49b5-9692-0b0d11dbcd33"],

Cell[CellGroupData[{

Cell[TextData[{
 "Definition",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Function", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Define your function using the name you gave in the Title line \
above. You can add input cells and extra code to define additional input \
cases or prerequisites. All definitions, including dependencies, will be \
included in the generated resource function.\n\nThis section should be \
evaluated before creating the Examples section below.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoFunction"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d511468b-e47d-4c5e-83be-83124ca33be0"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Function"},
 DefaultNewCellStyle->"Input",
 CellTags->{"Definition", "Function", "TemplateCellGroup"},
 CellID->72845326,ExpressionUUID->"4dee4148-f4cd-447b-bb38-965f000715cb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"FileTreePicker", ",", " ", "viewer", ",", " ", "fileToggler"}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "FileTreePicker", "]"}], " ", "=", " ", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"FileNameForms", " ", "->", " ", "All"}], ",", "\n", "\t", 
      RowBox[{"MaxItems", " ", "->", " ", "Infinity"}]}], "\n", "}"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FileTreePicker", "[", 
     RowBox[{"files_", ",", " ", 
      RowBox[{"opts", " ", ":", " ", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
    RowBox[{"FileTreePicker", "[", 
     RowBox[{"files", ",", " ", 
      RowBox[{"SystemDialogInput", "[", "\"\<Directory\>\"", "]"}], ",", " ", 
      "opts"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FileTreePicker", "[", 
     RowBox[{"files_", ",", " ", "dirName_", ",", " ", 
      RowBox[{"opts", " ", ":", " ", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
    RowBox[{"FileTreePicker", "[", 
     RowBox[{
     "files", ",", " ", "dirName", ",", " ", "Infinity", ",", " ", "opts"}], 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FileTreePicker", "[", 
     RowBox[{
      RowBox[{"Dynamic", "[", "fileList_", "]"}], ",", " ", 
      RowBox[{"dirName_", "?", "DirectoryQ"}], ",", " ", "depth_", ",", " ", 
      RowBox[{"opts", " ", ":", " ", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
    RowBox[{"Enclose", "[", "\n", "\t", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "\n", "\t\t", "fileAssoc", "\n", "\t", "}"}], ",", "\n", 
       "\t\t", 
       RowBox[{
        RowBox[{"fileAssoc", " ", "=", " ", 
         RowBox[{"ConfirmBy", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"FileSystemMap", "[", 
            RowBox[{
            "File", ",", " ", "dirName", ",", " ", "depth", ",", " ", 
             RowBox[{"Sequence", " ", "@@", " ", 
              RowBox[{"FilterRules", "[", 
               RowBox[{
                RowBox[{"{", "opts", "}"}], ",", " ", 
                RowBox[{"Options", "[", "FileSystemMap", "]"}]}], "]"}]}]}], 
            "]"}], ",", "\n", "\t\t\t", "AssociationQ"}], "\n", "\t\t", 
          "]"}]}], ";", "\n", "\t\t", 
        RowBox[{"fileAssoc", " ", "=", " ", 
         RowBox[{"FixedPoint", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"DeleteCases", "[", 
             RowBox[{"#", ",", " ", 
              RowBox[{"<|", "|>"}], ",", " ", "Infinity"}], "]"}], "&"}], ",",
            " ", "fileAssoc"}], "]"}]}], ";", "\n", "\t\t", 
        RowBox[{"If", "[", " ", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"ListQ", "[", "fileList", "]"}]}], ",", " ", 
          RowBox[{"fileList", " ", "=", " ", 
           RowBox[{"{", "}"}]}]}], "]"}], ";", "\n", "\t\t", 
        RowBox[{"fileList", " ", "=", " ", 
         RowBox[{"Intersection", "[", 
          RowBox[{"fileList", ",", " ", 
           RowBox[{"Cases", "[", 
            RowBox[{"fileAssoc", ",", " ", "_String", ",", " ", 
             RowBox[{"{", 
              RowBox[{"-", "1"}], "}"}]}], "]"}]}], "]"}]}], ";", "\n", 
        "\t\t", 
        RowBox[{"DynamicModule", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", "\n", "\t\t\t", 
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", "\n", "\t\t\t\t", 
             RowBox[{"viewerContent", " ", "=", " ", 
              RowBox[{"fileAssoc", " ", "//.", " ", 
               RowBox[{"{", "\n", "\t\t\t\t\t", 
                RowBox[{"a_Association", " ", ":>", " ", 
                 RowBox[{"Normal", "[", "a", "]"}]}], "\n", "\t\t\t\t", 
                "}"}]}]}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t\t\t", 
            RowBox[{"viewer", "[", 
             RowBox[{
              RowBox[{"Dynamic", "[", "fileList", "]"}], ",", " ", 
              "viewerContent"}], "]"}]}], "\n", "\t\t\t", "]"}], ",", "\n", 
          "\t\t\t", 
          RowBox[{"SaveDefinitions", " ", "->", " ", "True"}], ",", "\n", 
          "\t\t\t", 
          RowBox[{"Initialization", " ", ":>", " ", 
           RowBox[{"(", "\n", "\t\t\t\t", 
            RowBox[{"If", "[", " ", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"ListQ", "[", "fileList", "]"}]}], ",", " ", 
              RowBox[{"fileList", " ", "=", " ", 
               RowBox[{"{", "}"}]}]}], "]"}], "\n", "\t\t\t", ")"}]}]}], "\n",
          "\t\t", "]"}]}]}], "\n", "\t", "]"}], "\n", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FileTreePicker", "[", "___", "]"}], " ", ":=", " ", "$Failed"}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fileToggler", "[", 
     RowBox[{
      RowBox[{"Dynamic", "[", "files_", "]"}], ",", " ", "file_"}], "]"}], 
    " ", ":=", " ", 
    RowBox[{"CheckboxBar", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"Dynamic", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"If", "[", " ", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"files", ",", " ", "file"}], "]"}], ",", " ", 
          RowBox[{"{", "file", "}"}], ",", " ", 
          RowBox[{"{", "}"}]}], "]"}], ",", "\n", "\t\t", 
        RowBox[{"Function", "[", "\n", "\t\t\t", 
         RowBox[{"files", " ", "=", " ", 
          RowBox[{"If", "[", " ", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"files", ",", " ", "file"}], "]"}], ",", "\n", 
            "\t\t\t\t", 
            RowBox[{"DeleteCases", "[", 
             RowBox[{"files", ",", " ", "file"}], "]"}], ",", "\n", 
            "\t\t\t\t", 
            RowBox[{"Append", "[", 
             RowBox[{"files", ",", " ", "file"}], "]"}]}], "\n", "\t\t\t", 
           "]"}]}], "\n", "\t\t", "]"}]}], "\n", "\t", "]"}], ",", "\n", "\t", 
      RowBox[{"{", 
       RowBox[{"file", " ", "->", " ", 
        RowBox[{"FileNameTake", "[", "file", "]"}]}], "}"}], ",", "\n", "\t", 
      
      RowBox[{"Method", " ", "->", " ", "\"\<Active\>\""}]}], "\n", "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"viewer", "[", 
     RowBox[{"_", ",", " ", 
      RowBox[{"{", "}"}]}], "]"}], " ", ":=", " ", 
    "\"\<No files to show\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"viewer", "[", 
    RowBox[{
     RowBox[{"Dynamic", "[", "files_", "]"}], ",", " ", "list_List"}], "]"}], 
   " ", ":=", " ", 
   RowBox[{"Column", "[", "\n", "\t", 
    RowBox[{"Replace", "[", "\n", "\t\t", 
     RowBox[{"list", ",", "\n", "\t\t", 
      RowBox[{"{", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Verbatim", "[", "Rule", "]"}], "[", 
          RowBox[{"file_", ",", " ", 
           RowBox[{"File", "[", "name_", "]"}]}], "]"}], " ", ":>", " ", 
         RowBox[{"fileToggler", "[", 
          RowBox[{
           RowBox[{"Dynamic", "[", "files", "]"}], ",", " ", "name"}], 
          "]"}]}], ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"Verbatim", "[", "Rule", "]"}], "[", 
          RowBox[{"dir_", ",", " ", "dirContents_List"}], "]"}], " ", ":>", 
         " ", 
         RowBox[{"OpenerView", "[", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{"{", "\n", "\t\t\t\t\t", 
            RowBox[{"dir", ",", "\n", "\t\t\t\t\t", 
             RowBox[{"Dynamic", "[", "\n", "\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{"viewer", "[", 
                RowBox[{
                 RowBox[{"Dynamic", "[", "files", "]"}], ",", " ", 
                 "dirContents"}], "]"}], ",", "\n", "\t\t\t\t\t\t", 
               RowBox[{"SynchronousUpdating", " ", "->", " ", "False"}], ",", 
               "\n", "\t\t\t\t\t\t", 
               RowBox[{"SingleEvaluation", " ", "->", " ", "True"}], ",", 
               "\n", "\t\t\t\t\t\t", 
               RowBox[{"TrackedSymbols", " ", ":>", " ", 
                RowBox[{"{", "}"}]}]}], "\n", "\t\t\t\t\t", "]"}]}], "\n", 
            "\t\t\t\t", "}"}], ",", "\n", "\t\t\t\t", "False", ",", "\n", 
           "\t\t\t\t", 
           RowBox[{"Method", " ", "->", " ", "\"\<Active\>\""}]}], "\n", 
          "\t\t\t", "]"}]}]}], "\n", "\t\t", "}"}], ",", "\n", "\t\t", 
      RowBox[{"{", "1", "}"}]}], "\n", "\t", "]"}], "\n", "]"}]}], 
  ";"}]}], "Code",
 TaggingRules->{},
 CellChangeTimes->{{3.871528921516446*^9, 3.871528958746409*^9}, {
   3.8715292386223087`*^9, 3.8715293039539423`*^9}, {3.871529390427988*^9, 
   3.8715293956365747`*^9}, {3.871529427566455*^9, 3.871529428407816*^9}, {
   3.8715294649500885`*^9, 3.8715294681331043`*^9}, {3.8715295294331913`*^9, 
   3.871529554270673*^9}, {3.871529632485585*^9, 3.8715296401893*^9}, {
   3.8715296894800177`*^9, 3.871529720724134*^9}, {3.8715298100759087`*^9, 
   3.8715299062609897`*^9}, 3.8715304259772816`*^9, {3.8715313518619413`*^9, 
   3.871531365487113*^9}, {3.871532173139271*^9, 3.871532173836445*^9}, {
   3.8715322328298016`*^9, 3.8715322605197983`*^9}, 3.8715323434942636`*^9, {
   3.871532437902149*^9, 3.871532448408595*^9}, {3.871533346865816*^9, 
   3.871533347421752*^9}, 3.8719663520228157`*^9, {3.8719676612152753`*^9, 
   3.871967661687827*^9}, {3.871967859021223*^9, 3.871967872717201*^9}, {
   3.871969068206853*^9, 3.8719690790641036`*^9}},
 CodeAssistOptions->{
 "CodeToolsOptions"-><|
  "CodeInspect" -> <|
    "Tags" -> <|
      "NoVariables" -> <|"DynamicModule" -> <|Enabled -> False|>|>|>|>|>},
 CellLabel->"In[1]:=",
 CellID->20776434,ExpressionUUID->"c3496e22-6edf-40b7-aa08-fad2d47c8920"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Documentation", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Documentation"},
 CellTags->{"Documentation", "TemplateSection"},
 CellID->429741307,ExpressionUUID->"b38d6a87-8e5c-43a8-a3ca-5b3db6168e42"],

Cell[CellGroupData[{

Cell[TextData[{
 "Usage",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Usage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Document input usage cases by first typing an input structure, \
then pressing ", 
           Cell[
            BoxData[
             StyleBox[
              DynamicBox[
               ToBoxes[
                
                If[$OperatingSystem === "MacOSX", "\[ReturnKey]", 
                 "\[EnterKey]"], StandardForm], SingleEvaluation -> True, 
               Evaluator -> "System"], ShowStringCharacters -> False]]], 
           " to add a brief explanation of the function\[CloseCurlyQuote]s \
behavior for that structure. Pressing ", 
           Cell[
            BoxData[
             StyleBox[
              DynamicBox[
               ToBoxes[
                
                If[$OperatingSystem === "MacOSX", "\[ReturnKey]", 
                 "\[EnterKey]"], StandardForm], SingleEvaluation -> True, 
               Evaluator -> "System"], ShowStringCharacters -> False]]], 
           " repeatedly will create new cases as needed. Every input usage \
case defined above should be demonstrated explicitly here.\n\nSee existing \
documentation pages for examples."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoUsage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d073f914-3d35-4d67-983d-6f4440548ece"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Usage"},
 DefaultNewCellStyle->{"UsageInputs", FontFamily -> "Source Sans Pro"},
 CellTags->{"TemplateCellGroup", "Usage"},
 CellID->542419310,ExpressionUUID->"a6a1c184-df86-4a32-9afc-1cb71d75e324"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FileTreePicker", "[", 
  RowBox[{
   RowBox[{
    TagBox[
     ButtonBox[
      StyleBox["Dynamic", "SymbolsRefLink",
       ShowStringCharacters->True,
       FontFamily->"Source Sans Pro"],
      BaseStyle->Dynamic[
        FEPrivate`If[
         CurrentValue["MouseOver"], {
         "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
      ButtonData->"paclet:ref/Dynamic",
      ContentPadding->False],
     MouseAppearanceTag["LinkHand"]], "[", 
    StyleBox["files", "TI"], "]"}], ",", 
   StyleBox["dir", "TI"]}], "]"}]], "UsageInputs",
 FontFamily->"Source Sans Pro",
 CellID->3075263,ExpressionUUID->"851a67e6-521c-4edd-9d59-1987801c698c"],

Cell[TextData[{
 "creates a file tree with checkboxes to select files in directory ",
 Cell[BoxData[
  StyleBox["dir", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "78c3002f-f824-40e2-822a-a1192891e752"],
 " and all its subdirectories."
}], "UsageDescription",
 CellID->209075747,ExpressionUUID->"22e8d0c0-a24e-465b-a950-d4d3e11856bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FileTreePicker", "[", 
  RowBox[{
   RowBox[{
    TagBox[
     ButtonBox["Dynamic",
      BaseStyle->Dynamic[
        FEPrivate`If[
         CurrentValue["MouseOver"], {
         "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
      ButtonData->"paclet:ref/Dynamic",
      ContentPadding->False],
     MouseAppearanceTag["LinkHand"]], "[", 
    StyleBox["files", "TI"], "]"}], ",", 
   StyleBox["dir", "TI"], ",", 
   StyleBox["depth", "TI"]}], "]"}]], "UsageInputs",
 FontFamily->"Source Sans Pro",
 CellID->778220026,ExpressionUUID->"4af828a5-1e48-4fed-8222-64d58d7b3be4"],

Cell[TextData[{
 "only shows files at depth specification ",
 Cell[BoxData[
  StyleBox["depth", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "9d76fee0-b412-42a6-aabf-5a0cc394ba2c"],
 " as used by ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["FileSystemMap", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/FileSystemMap",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "52c489fe-2d4d-4af3-bf72-7d7427915c08"],
 "."
}], "UsageDescription",
 CellID->550669579,ExpressionUUID->"8c7315b8-f235-415a-a44e-54d9f5b21071"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FileTreePicker", "[", 
  RowBox[{
   TagBox[
    ButtonBox[
     StyleBox["Dynamic", "SymbolsRefLink",
      ShowStringCharacters->True,
      FontFamily->"Source Sans Pro"],
     BaseStyle->Dynamic[
       FEPrivate`If[
        CurrentValue["MouseOver"], {
        "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
     ButtonData->"paclet:ref/Dynamic",
     ContentPadding->False],
    MouseAppearanceTag["LinkHand"]], "[", 
   StyleBox["files", "TI"], "]"}], "]"}]], "UsageInputs",
 FontFamily->"Source Sans Pro",
 CellID->841122036,ExpressionUUID->"da35deca-c819-4c89-ac5d-b79895912086"],

Cell[TextData[{
 "uses a ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["SystemDialogInput", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/SystemDialogInput",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "d4dacd75-95ce-4d1f-9f37-d730fe00f5ca"],
 " to pick the root directory."
}], "UsageDescription",
 CellID->41218918,ExpressionUUID->"ca9af5ec-9082-4fda-95f6-e3b8ace114bc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details & Options",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a detailed explanation of how the function is used and \
configured (e.g. acceptable input types, result formats, options \
specifications, background information). This section may include multiple \
cells, bullet lists, tables, hyperlinks and additional styles/structures as \
needed.\n\nAdd any other information that may be relevant, such as when the \
function was first discovered or how and why it is used within a given field. \
Include all relevant background or contextual information related to the \
function, its development, and its usage.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "700b28ae-81f2-47c9-a1d8-f223ea3854b2"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Notes"},
 DefaultNewCellStyle->"Notes",
 CellTags->{"Details & Options", "Notes", "TemplateCellGroup"},
 CellID->908801236,ExpressionUUID->"03ccf16d-bde1-4314-aca6-9dac06de8bfe"],

Cell[TextData[{
 "The default ",
 Cell[BoxData[
  StyleBox["depth", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "bd89ce9a-46c1-4035-8931-c89f8847dfb9"],
 " specification is ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Infinity", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/Infinity",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "b07c5de9-a8b0-4000-b3a6-e59f21874409"],
 "."
}], "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.871533799251169*^9, 3.871533825421161*^9}},
 CellID->211877713,ExpressionUUID->"42ceb51c-df7d-443d-969a-434e24ed4c32"],

Cell["Empty directories will be omitted in the interface.", "Notes",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8715325630697293`*^9, 3.8715325781369886`*^9}, {
  3.8715337940969095`*^9, 3.8715337986525307`*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->869166863,ExpressionUUID->"d69eda63-9284-447f-aedb-cb46145aa9a2"],

Cell[TextData[{
 Cell[BoxData["FileTreePicker"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "cf0b14c1-8af1-40a5-98ce-ea37ae6a5cd9"],
 " takes the following options from ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["FileSystemMap", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/FileSystemMap",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "0331b6d5-bfcd-4947-a721-60e2933a2d50"],
 ":"
}], "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.8719668201469154`*^9, 3.8719668606751704`*^9}},
 CellID->666066227,ExpressionUUID->"c79e0151-6323-4cb4-bb4d-ee5055f40f33"],

Cell[BoxData[GridBox[{
   {Cell[TextData[Cell[BoxData[
     TagBox[
      ButtonBox[
       StyleBox["FileNameForms", "SymbolsRefLink",
        ShowStringCharacters->True,
        FontFamily->"Source Sans Pro"],
       BaseStyle->Dynamic[
         FEPrivate`If[
          CurrentValue["MouseOver"], {
          "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
       
       ButtonData->"paclet:ref/FileNameForms",
       ContentPadding->False],
      MouseAppearanceTag["LinkHand"]]], "InlineFormula",
     FontFamily->"Source Sans Pro",ExpressionUUID->
     "74d72347-7c12-4998-82c8-6e9ab03d4a0e"]], "TableText",ExpressionUUID->
     "ab929ca0-9324-4149-9ea9-e7b33841c968"], Cell[TextData[Cell[BoxData[
     TagBox[
      ButtonBox[
       StyleBox["All", "SymbolsRefLink",
        ShowStringCharacters->True,
        FontFamily->"Source Sans Pro"],
       BaseStyle->Dynamic[
         FEPrivate`If[
          CurrentValue["MouseOver"], {
          "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
       
       ButtonData->"paclet:ref/All",
       ContentPadding->False],
      MouseAppearanceTag["LinkHand"]]], "InlineFormula",
     FontFamily->"Source Sans Pro",ExpressionUUID->
     "e2f6ed9c-4d56-46c5-8d2e-8eadbf20d6a9"]], "TableText",ExpressionUUID->
     "88d96d14-9cc8-456c-be6c-7820a9a6b232"], Cell[
    "include files with names of the specified forms", "TableText",
     ExpressionUUID->"82854c53-6926-4cb2-ad46-092a9ad01c9b"]},
   {Cell[TextData[Cell[BoxData[
     TagBox[
      ButtonBox[
       StyleBox["MaxItems", "SymbolsRefLink",
        ShowStringCharacters->True,
        FontFamily->"Source Sans Pro"],
       BaseStyle->Dynamic[
         FEPrivate`If[
          CurrentValue["MouseOver"], {
          "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
       
       ButtonData->"paclet:ref/MaxItems",
       ContentPadding->False],
      MouseAppearanceTag["LinkHand"]]], "InlineFormula",
     FontFamily->"Source Sans Pro",ExpressionUUID->
     "fb8c5bd6-db44-4cbd-9680-794e3032ab7b"]], "TableText",ExpressionUUID->
     "52acebd9-4071-4ac8-9388-817b2edd368f"], Cell[TextData[Cell[BoxData[
     TagBox[
      ButtonBox[
       StyleBox["Infinity", "SymbolsRefLink",
        ShowStringCharacters->True,
        FontFamily->"Source Sans Pro"],
       BaseStyle->Dynamic[
         FEPrivate`If[
          CurrentValue["MouseOver"], {
          "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
       
       ButtonData->"paclet:ref/Infinity",
       ContentPadding->False],
      MouseAppearanceTag["LinkHand"]]], "InlineFormula",
     FontFamily->"Source Sans Pro",ExpressionUUID->
     "13f5df2d-6cb4-4631-b2e4-1da293c98a83"]], "TableText",ExpressionUUID->
     "0226a443-5f02-4260-b312-097104620a8b"], Cell[
    "maximum items to include from a directory", "TableText",ExpressionUUID->
     "621f18b1-2a65-415c-a444-5907e8df3e96"]}
  }]], "TableNotes",
 TaggingRules->{},
 CellChangeTimes->{{3.871966873455942*^9, 3.871966921317033*^9}},
 CellID->967534110,ExpressionUUID->"42370f33-6627-4fc4-9204-54829eeaf682"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Examples", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Demonstrate the function\[CloseCurlyQuote]s usage, starting with \
the most basic use case and describing each example in a preceding text cell.\
\n\nWithin a group, individual examples can be delimited by inserting page \
breaks between them (either using ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"[Right-click]\"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontColor -> GrayLevel[0.28627], 
                 FontSize -> 14, StripOnInput -> False], 
                StyleBox[
                "\" \[FilledRightTriangle] \"", FontFamily -> 
                 "Source Sans Pro", FontSize -> 13.86, FontColor -> 
                 GrayLevel[0.5], StripOnInput -> False], 
                StyleBox[
                "\"Insert Page Break\"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontColor -> GrayLevel[0.28627], 
                 FontSize -> 14, StripOnInput -> False]}, "RowDefault"], 
              ShowStringCharacters -> False]]], 
           " between cells or through the menu using ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"Insert\"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontColor -> GrayLevel[0.28627], FontSize -> 14, 
                 StripOnInput -> False], 
                StyleBox[
                "\" \[FilledRightTriangle] \"", FontFamily -> 
                 "Source Sans Pro", FontSize -> 13.86, FontColor -> 
                 GrayLevel[0.5], StripOnInput -> False], 
                StyleBox[
                "\"Page Break\"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontColor -> GrayLevel[0.28627], FontSize -> 14, 
                 StripOnInput -> False]}, "RowDefault"], ShowStringCharacters -> 
              False]]], 
           ").\n\nExamples should be grouped into Subsection and \
Subsubsection cells similarly to existing documentation pages. Here are some \
typical Subsection names and the types of examples they normally contain:\n  \
", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Basic Examples: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "most basic function usage\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Scope: \"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontSize -> 14, StripOnInput -> False]}, 
               "RowDefault"], ShowStringCharacters -> False]]], 
           "input and display conventions, standard computational attributes \
(e.g. threading over lists)\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Options: \"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontSize -> 14, StripOnInput -> False]}, 
               "RowDefault"], ShowStringCharacters -> False]]], 
           "available options and parameters for the function\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Applications: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "standard industry or academic applications\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Properties and Relations: \"", FontFamily -> 
                 "Source Sans Pro", FontWeight -> "SemiBold", FontSize -> 14, 
                 StripOnInput -> False]}, "RowDefault"], ShowStringCharacters -> 
              False]]], "how the function relates to other functions\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Possible Issues: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "limitations or unexpected behavior a user might experience\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Neat Examples: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "particularly interesting, unconventional, or otherwise unique \
usage"}], "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExamples"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "06028568-fd7b-46b9-a0bc-8cff7d165bb9"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Examples"},
 CellTags->{"Examples", "TemplateCellGroup"},
 CellID->553094467,ExpressionUUID->"c6a22afb-0188-41a3-8529-8b9f255b64b2"],

Cell[CellGroupData[{

Cell["Basic Examples", "Subsection",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->279727361,ExpressionUUID->"dfa6cfae-3d78-4c23-8e27-ce0f0b8e76c2"],

Cell["\<\
See and select files up to three levels down from the installation directory:\
\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8715326128579035`*^9, 3.8715326210286827`*^9}, {
  3.871532678772088*^9, 3.8715326889242053`*^9}, {3.872005107653384*^9, 
  3.872005108327524*^9}},
 CellTags->"DefaultContent",
 CellID->915773500,ExpressionUUID->"c8670ca1-f02a-495b-82fb-446ac3a76db9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FileTreePicker", "[", 
  RowBox[{
   RowBox[{"Dynamic", "[", "files", "]"}], ",", "$InstallationDirectory", ",",
    "3"}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8715293188484125`*^9, 3.871529339054442*^9}, {
  3.8715315281330605`*^9, 3.8715315751559277`*^9}, {3.871532049513138*^9, 
  3.8715320499596076`*^9}, {3.8715321810644383`*^9, 3.8715321892043657`*^9}, {
  3.871532361917531*^9, 3.8715323778589735`*^9}, {3.8715324804743295`*^9, 
  3.871532495786072*^9}},
 CellTags->"DefaultContent",
 CellLabel->"In[7]:=",
 CellID->69030481,ExpressionUUID->"398cbd5e-b8b5-4b65-a078-3798d6f3708b"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
TBnAuDHn/nW+2VyKIHrePWiuaauddeyhzpdxY654TAs0/FQUfE8OFHLOx8bC
2Mtit9IuWW7TaM9VNzO0pjpQyNOr3wJ1vsyL20/I2szWOeV2j6Bs++FCnmYu
k+Way4bP9WdaEvJiW5E6zjNDos4IibtfjMGHC/C1OfznNx3S5P0ufiao7Mja
DX2HrP62+3h7WWcuQh6cSk+9GW5dYs5b966W3G7ctlwqH/za2/32Sl8sLFPs
2oi0u5mZctd2rNWKK9+fPo6QB/3JGzu+PDrXlre3ndMYN4bnhfHFIEIGAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AACALi8vLzzhCOCrcvgz9Y5FPIlv5VPVyoPqvomj4pGgiw8NBIBPx4FPnT4i
92+fYtx97Gbw+PhYHuU8Lv9lOIqQ/XDSI/YKAI7C+Qg5IuTb29uxYOMR89fX
198tQj5KykLjptE7VpcA4Ficj5AD2WYsZBdQrHiCznxJEDLAebLGsX/++eev
X7+6haXNuZNfLde7+czaZ8oOaJ+fn+eaWxSyKhkUcKTtdtXKXHM5Ba0K9d+y
XapHCx+2+N12i0y00taTmxtsewxjFCtVqdGcYO+OuVfMlUTPcwFxeXnpAcx0
uz0mN1Q2Ksak20mNfF6orVMN3i5y4/CdWRTyH3/8oTJycrew9uurq6vuig7D
QgglReyEQ1dfc0IOdbjmnK/Ihd2QdvlItxrt8rlMSUHrv9ly7oAbEre3t9F/
2SyKqf/a/FJPsY1Q06U51VyGUUu0Yi6mhmJ8PCZzq+cBlwlzJXodqozN6dL9
EAe0aXyNUi7gkckfjbdCa+XP/e7urvSE/DZ8W8ZCto31d67w4OQ3vxU2s9n0
N5LA7YpzQh7IJPfBbeUks5PSm3R00HIVkLGz4bMo7EP9tS78WuX9IlK4dr7M
E9lvVVJ6Lhu79ShmU5VNc4f1Vy1GEKvXLpAj5LGQXY/H2ZVE4SNGyKFWN6R+
lg5P2yDZnfERQWPrMvmA5c3Rcm91fDHagxrAdyAc2warxcZTT8g2kl9bGnHK
GSqIa3D5rLbsrZmjRMglUnU/Q6ROR+TKLe0oYIW6WvvT22I/l2K5HlWbtyi2
vUR95aqc61Eno1eqZE68i0KODoQDyyAfnkP2Ea1sqdrSwlzMySWfQ3nosrE9
OHo3fxbecC4QwPfEjv3zzz+1i/3999+xvLXxNJNDDkE5FIw9LnYribE9n51e
99CcSTCLOWQ3OlcgUhalzvu36d8yjdmOyqaNgDm/lbc33tJmzmU+baR22wub
XubnfiZXPBZy2XAPcll4oJA1LA5rS4ztI1c51vhQGKcS+S1/McqBNbJJe3cP
4PNix/769eu3334LJ3dtPPWEbOF4H9ROp13JKVYJKpw550/vj+3yowh5PDGs
zX+aLOSQXpt7iWIK5xyC2jY6uBQzd48OLXOO3alwOabkDpSxOlDIJaE9N4Ym
onQNeHdw5ti7ewCfl3BsOPn333/v2njqCTnL0yfmPkH2cgd45yZkHyw2Kanb
jZDXCNloM/MFxBzWfmEhtxGyKdaNpM1c39oIueSgAL4P2bF28pyNp56QffZ6
v53I5PyhL9B4n/UOOHfa7rPp9qz8vYXsAiVLWdbaScjGc+RsnjK3JCdOu7yf
kEtuPJecm6G3iI9oc7Nrur3yd6DMr/DCxcEB+D4Ux8rJf/3118rCxnK73TJt
NSsnW03e+7z/lmtAcVGvzb6eRsjZAypcpk+sFHLbSrGiL1GVbW9XfCchR+vd
kouzy5x4746kh2uxBg+Xvxj3zfyQ7hcD4Dtz+J162sUULMWsBkvAO2yUiYln
ZdpbtmKcq7pwnMm2e/2BQnZgFp3JE4l3FbK31PUIJy6KACObEbPsutPexkKO
GWv3r/PE2lN791OVewpZtNteNo3kbfS8HUx/jqY9aLZz+doPq5117A3P/WkH
x3yTG+EBCocLOfapWGIb51Na7ZLlNo32XHUzQ2uqA4U8NbdIqKtlXtxKIbe3
WmjbS7zX3fbujSHrO5wZlJEMWxtPvftZNk1KeSzkaeaSXGxFpI5z/jzqzBPz
2sHZfJufigIoHP7zmz6xzaGRp5O1ka12Q98h285GmFKEXOgmmQdBVDvDrUvM
ebMcyiTq3G7cktytPDZqHNfF3cH3w1un58gRciHKWMgR9A7u4y4j0I2Qp6Vx
nt7eC18+LFfeHg7ixvC8MI8hETIAfAG6F/UAAOD0IGQAgDMBIQMAnAlzvw4K
AAAAAAAAAAAAAAAAn53/F0JZFnw=
    "], {{0, 430.83733923606707`}, {285.0247021408522, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{119.98960000000002`, 119.98960000000002`},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{285.0247021408522, 430.83733923606707`},
  PlotRange->{{0, 285.0247021408522}, {0, 430.83733923606707`}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.871531538562532*^9, 3.8715315862560663`*^9}, {
  3.8715320502731547`*^9, 3.8715320582386394`*^9}, {3.871532178140182*^9, 
  3.871532189444279*^9}, {3.871532347928893*^9, 3.8715323844272842`*^9}, {
  3.8715324629834223`*^9, 3.871532530944231*^9}, {3.8715326923886156`*^9, 
  3.8715327415878263`*^9}, {3.871532780499045*^9, 3.8715327809404416`*^9}, {
  3.8719669343950357`*^9, 3.871966973625162*^9}, {3.8719670303931026`*^9, 
  3.8719670447700334`*^9}},
 CellTags->"DefaultContent",
 CellLabel->"Out[7]=",
 CellID->150723569,ExpressionUUID->"25f8521e-e7d3-470b-81e9-1ca6416827e6"]
}, Open  ]],

Cell["See the selected files:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8715327896894026`*^9, 3.8715327938593273`*^9}},
 CellID->796024934,ExpressionUUID->"8d6d8685-2d67-4474-85e0-83db54d8b0e2"],

Cell[CellGroupData[{

Cell[BoxData["files"], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.871532697260096*^9, 3.8715326977011433`*^9}},
 CellLabel->"In[193]:=",
 CellID->533892407,ExpressionUUID->"b3899de4-afc5-43e4-a8d4-23e24055907a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"C:\\\\Program Files\\\\Wolfram Research\\\\Mathematica\\\\13.1\
\\\\Documentation\\\\English\\\\PacletInfo.wl\"\>", 
   ",", "\<\"C:\\\\Program Files\\\\Wolfram Research\\\\Mathematica\\\\13.1\\\
\\WolframKernel.exe\"\>", 
   ",", "\<\"C:\\\\Program Files\\\\Wolfram Research\\\\Mathematica\\\\13.1\\\
\\wolframscript.exe\"\>", 
   ",", "\<\"C:\\\\Program Files\\\\Wolfram Research\\\\Mathematica\\\\13.1\\\
\\SystemFiles\\\\Formats\\\\FormatMappings.m\"\>"}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.8715326979420767`*^9, 3.8715327354232016`*^9}},
 CellLabel->"Out[193]=",
 CellID->856522754,ExpressionUUID->"4ca33147-a2b2-4cc0-9e46-a4b33f9b57d6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsection",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->859239780,ExpressionUUID->"59b0ec6a-f302-4197-aab8-7a812e3c1142"],

Cell[CellGroupData[{

Cell["FileNameForms", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.871967313725806*^9, 3.8719673158219414`*^9}},
 CellID->803654551,ExpressionUUID->"d35c42a5-5602-46ed-ba49-837a012fc256"],

Cell["Only show.wl and.nb files:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8719671516823187`*^9, 3.871967163715313*^9}},
 CellID->365012568,ExpressionUUID->"87f0eaa5-81be-4972-88a7-291d39a60fdd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FileTreePicker", "[", 
  RowBox[{
   RowBox[{"Dynamic", "[", "files", "]"}], ",", "$InstallationDirectory", ",", 
   RowBox[{"FileNameForms", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<*.wl\>\"", ",", "\"\<*.nb\>\""}], "}"}]}]}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8719671234652233`*^9, 3.8719671478266325`*^9}},
 CellLabel->"In[9]:=",
 CellID->923618801,ExpressionUUID->"2f395be0-ddaa-4fa3-9825-fa87a43ac798"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
yWDvLWRknqvGRuJNcFJGdP34rUHXarQCXZmxzHIw+Xo/nbwMeg6Djqdk3LqY
/aDfK2MPFQ+JRipLV65zvyf2rt6Z6Mf4XTNJHw0tRaVpi3roA2jlU4Hml5X+
e7KMdDh9U+pPHFUXjfgNSlVSzWe5Hwmdsl5LmqIf2LxOkJF5rrpSEy+qeRmJ
V50LlB/R7XVma8RKGZHv0ZwOKKrg3UvesirUBR8vfl/MVZ3Xk5G0zJ0GWacQ
R0YmFq3YtXpwuz9ZRhJaby5JIppzirpQvlJG4resL8IdsHqz8OPIyCQP6I00
a45lepPcxEoZqZ0Rkpde95a+jNi1qkCB5jj2qeaJrJeR8SBrRhPTsutInNeY
UXs0RlOS6uydLKNx6DF5Rs5KGYnL6wovywGTi9isFhmZ59FiIy8pI2Zi8gHM
0P48sBwGpNm9a8uIfA9FIYTEra7XWD0ezdh1dugNyuyPWy/2LSbPKDa0Rkbi
x3eHKae+Dh1vLuIgI/PcUUZ0I7hARnatuHplUnB6MtKcPUkN3OJOyshyvBrN
w9dUSB61AsUXy0jv9E/KSNx1Vqkuh1Dnd2W6NC5TnZxBn8dlliDIJ0s20Ynb
l+JfhDwoVduclyEj89xYRlz2zTx94cPLzMiI30xjsV6ItepApScjiqamhtLB
eRn5dmA5iqdMrDkln5GR3haIkzKidquHoFF1I+0FnONXfLKMzjTGewd9HhTw
5pouUy3WW8HRgPsXoaUlV/VmeWRkkpvJiL6vtJKbom0zMuK/gknLiLV1X7ZQ
sX1Y8I17nlXMnXy/At1ZSgu+cRvGpIzog966/dfXbb0e709a0q0b9tSrOCtJ
pzyQkd6uWp2sG6nVY6dphVW/T1uiIMyUUXOy36haNfa+nKKuv1e58GujeftQ
MMq3GPka1u594MgrT22d7OFH5mYyYpdB2l9kX1m6hGZkZAn+c6yt+tt2naRi
Xs9gU1M8i9qQXVfRTGZkxHeCpVXsWGbfj0YmS0nDmEZsLCNpmSmhfursan/S
vrvJMtaiK0lvkCdlZDm6Ur16llMy4j1JpxxnvoNtfjM9/LBs8qCA5o9VK75D
23c7p3W9KvuquenDa+P0vr/fO7Y48EYS1Wy9oapUze4lv9pPOX0qloneSKI5
KfMupREb/+JgMJheZ3TGfOjsreYIz5RZDtatzfDNQR78CLrZYqyqXnKDSY3e
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
TtsC
    "], {{0, 491.44259169127986`}, {219.01898164507588`, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{119.98960000000002`, 119.98960000000002`},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{219.01898164507588`, 491.44259169127986`},
  PlotRange->{{0, 219.01898164507588`}, {0, 491.44259169127986`}}]], "Output",
 
 TaggingRules->{},
 CellChangeTimes->{{3.8719671373352146`*^9, 3.871967205335755*^9}},
 CellLabel->"Out[9]=",
 CellID->670909433,ExpressionUUID->"ffb89020-6bc2-4935-8e92-f73aebf78cd1"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["MaxItems", "Subsubsection",
 TaggingRules->{},
 CellChangeTimes->{{3.8719673564886312`*^9, 3.871967357824358*^9}},
 CellID->171782015,ExpressionUUID->"d169e9cd-285f-4660-8272-54077e66fcec"],

Cell["Limit the number of files shown per directory:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8719673593462305`*^9, 3.8719673683443336`*^9}, {
  3.8719675296908293`*^9, 3.8719675351471806`*^9}},
 CellID->83422537,ExpressionUUID->"b901601f-0e5f-4fba-a96b-c1d120119e86"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FileTreePicker", "[", 
  RowBox[{
   RowBox[{"Dynamic", "[", "files", "]"}], ",", "$InstallationDirectory", ",", 
   RowBox[{"MaxItems", "->", "5"}]}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8719673773860316`*^9, 3.8719673797793016`*^9}, {
  3.871967425667791*^9, 3.871967488771455*^9}},
 CellLabel->"In[14]:=",
 CellID->887140059,ExpressionUUID->"1f50ca70-b33b-45ec-8492-eca4444157fa"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
Rd7d3dXT4UpSFi62UtSmP0lsmyf4jJ0rRN4evLmLXtzvrgzn64TVlIWrhIn2
WSNkNfYadrdHyNbkMwmyGnt7exsvhbZ8c3ODIF8bUt16AyKttp34KV7NMziz
pFrjCHnGzhVypCDb5rZn062ZrdEZ+omdoL1gon2Ziq5qdw9E4ySCbL1q+1dX
Q/try7b3a412I2MldabYcrIjpAzxnIoHkn1rxpedhshUL7/hBWzzdFYq6jM/
n3fIbYVPqaRudtyNeLn3mz5d7Oywjz7HvZ8kYtC9Zt+juNQ/qx04g9Im9S5S
6y2USk2r/Z/wTra/Vfpqe2W5GvTIoWknGhwLcm/DeTvCd3oqI/9fd3hD0oHk
+N60r+rO0lepWLTgR4LkdHwUDXbE/Y6HhwePc6QGOkNTAwc7Qk1WeaW/av8s
+yTqdeKMdbK3I5plkhR4W3RsxDh87FjCG5vWq6WqVHUtH1N/vaN9Ob8g24Hk
l2D7K82M5775pvAsYh3lR2DzftOLeXX6qCq8gFlOXtXcVFJ1302+p7Qco0Rb
GWvRtcDt+A1Xk9jV6ate3+qi1mv4agfOoEhYeyeiXLGLRmpa74ZFJ1Sv1Uvr
dkaWo0E7niU4Eb80JC4gyNYJyR/rdu9k+W8++56y4yEeSG4nHaKbch3UVlZd
LGbLLhS9JEzt1fGOkCArtSjjVt72uMuyiq3uCNeQVF3aWeNEfbzWq7qok/Ek
He8IL5M62TbxDtx+TNgm9gqYderFXlVveBTqR5Tbj741I5DNOQV52Z3Uhha0
jzbh1JMD1i77yjaxvymn4TtlMxEh6+/TDn2MZdyI6vL8iV9A9a2OJV82t7Xg
e8qctw1tfbzO+i44IEKW/WbH+pCfdZEK6xjwAqsdOEnNWuhiGq9E8azZdARZ
Dnsn219bTiXVorimCrJXETuzd76cW5B1c6eDIe4Fv+LLf93vy9V4ILkDfrZK
bdQ5Sbv8cHJRcoFSgckIeXVHSJBtwepSfsAW7ABImrC6I7xRfoZ6mRhtjhP1
4zDG3V7dESKVUVwRHY6eHBwhL0H5FbSYe9opfh655piHqi4eJPUMuoAg+yXY
3Y6e2Pp016aS1dWeAvi3m4/XynQbrl2ZLqYa89X1wo2oN7SjVaNOq7hD0xW5
eZM1n0PuiYYffulKGiua78AxNWuhW9deUNqrone6pW1XBdkalU6NZrJLrAry
ttBsVM+O1qe9EG8fXE90bNQDyZ2xHRr3l07heG/iguzFdJTWTP74WrO6I1yQ
bRebkwrvl3Lcru6IOAaXOqd5V97s5MkIeXVHLK1jSfabqbPeYTOPekNXBAlF
PGVUhaI1n+fgB8klBTkeLeaPRhD0sXoSU6C96GtGkKNOpv2i3kjx6vY9+eBG
PNCNx3PdcTGHPL7oHyPI2terMzaXuQ4cU7MW6ThP9KpQ7XZ8Do7zGUH29d6o
wQD0qiBXmo717PidaUT9s33PEEb/64G0hDuOZCfNY1H5lPZs+jwW5NUd4Q5L
8G1ZR1rzuB3sCL9Hq7Xvu7Niu5oFVnfEEsIYWzNO3J1EkJf3M0V/B/1QD5LP
EmTtQR823Xy8B2meMocJcm2ab7IdJo5qFdH/tONqGlCcXJBV72D29bJPB64S
sxY1X5HoVRH90f1ylfTVnbW0UoXiMEHeFpqN6tkZHDnxXHOzzQNpfFeeBHn1
nmJZE+TVHRGdVFfHaH8bIuTxjmheTM8kyKs7QsQz1HQyDbvPezKJZypiqr9W
MThInMsIso9Buyd+pkurPas2CPCaK+O3mwlBrhFyPD2b59HysVd91q4ndbdn
i5BnBHm+A1eJWYtBfkCMq7C2e4p+U4L81Z21vEuEp0BrYBZZFeR+o6fs+Clf
WT3XkiDXCFmkMbvjBVkMdkR00icDuJ9ecnVHXF6QBzvC0RQXH+9OmaJJTybx
mLxau05BHnylVgyu3XFlnTURvx2f4+OMaK23J8ha9rRzLZAcGNdY66pmV32e
7MBV4qxj3X8NBjgmq/CJB/GyUneW9k4a6jVPag7qUwRZorT6LMNYkNW9g2M4
lp8X5MnpNHVHDPagfzWzIy4pyKs7omLdritI7fmZgGcGOaxj2FNVsYovJ8je
BFtQYrwpyAOJWBVkz5EOpunOC3Ka9pOmYUQHZp6q6PWVknvV51jRfAcuneeg
I57PXJWOQRVpTT030660TaQVSZCjA1bYkw+10nMLss7oQTJ/RpCXdz0ZP5W5
ryAPnnlvtm4sCOmrmR1xSUFe3RFLZ/yu2YHyZHWMZnzWRCP15vR6BFkDec3C
9RD12TIe+ddtffTZb53StLexIC/hFxh8Pky62ZkRZF0HN++jwHEOcL1pinOB
Ul1xlCTNX4qHU/U5TXub70D/GYHBdc3nSm1aj0rFuf2pXXE3xTmB7lK8pqhR
cYpUEmTPCynF5J0Qj9U4Ln//cf5Smkuwad3keg/M2PGui3fuseGTglwnMdYj
eV6Qt+/DIjFbNbkj1KJtJyXl/s/siBlBntxZgx6Y3BFLuIh4AZ0y6a7WS3rr
0oGRamyeNT8/zjpe3kMaP3e2c4Lstae5svHAOFKQm5og4iEa59L7ju7pyeD5
iHrE1uPEOi0eUfXQ6p1H24/X9DSIZrsgTXR0XL1rXX42VdJ0jupzbNReHehl
eoLsJ2CzTHP0MPV8bVd8asY9iT7byeUD/T07uhBvig40SbrULBOvjDN2aj/H
hk8Kcm+/x4bPC7IdG/WZoMkdMR7g2HzUimSkuSPGgjzZyYMecMY7Ytkdw3UU
8r7zqFR9dibVOzhrPOKKSQ8vrwvfpCD3Oif26pE/v7ntP1rrD4d6B/qzzP60
cnPb+ARxsp+ukkv/+cQ0Qyxeo2P56KSi2bg7fM6buj2NWiY3YnXNCDlR7UQj
NeUy34GrKYtlF8Vtd0/I1q96v5xWe95LWkc1T4Tqc91Z/mhqnGbvzqfnuJs7
dOBzM0Ie2FnKXMfY8Pj48NI/kGr/iNjw5qP6tZOd5NLkjkgOJ7bl4bjVHVGn
yh+wswY9EBnsiOTAtvN8esRblw6MXlsc+dC7kVSHROkYHCS9zvlCP8kLAAAA
AAAAAAAAAAAAAAAAAAAAAAAAV8j/A1g4SE4=
    "], {{0, 187.8162774107089}, {285.0247021408522, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{119.98960000000002`, 119.98960000000002`},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{285.0247021408522, 187.8162774107089},
  PlotRange->{{0, 285.0247021408522}, {0, 187.8162774107089}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.871967386971876*^9, 3.8719675124091234`*^9}},
 CellLabel->"Out[14]=",
 CellID->493157459,ExpressionUUID->"795a89df-6562-4bed-bc74-272ffc33890d"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Possible Issues", "Subsection",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->84863745,ExpressionUUID->"6dc47651-19ee-48eb-8499-97c2f00cfdf2"],

Cell["\<\
Directories with many items to display will take a while to format in the \
front end so a placeholder will be shown while it's opening:\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.871533842379051*^9, 3.8715338739515877`*^9}, {
  3.871533916374817*^9, 3.8715339186226687`*^9}, {3.871533971002742*^9, 
  3.871534020468876*^9}, {3.8719676204357357`*^9, 3.8719676462755766`*^9}, {
  3.871967693540434*^9, 3.87196771429276*^9}, {3.872005122789876*^9, 
  3.8720051435205193`*^9}},
 CellID->63524258,ExpressionUUID->"8b8e8dce-01e4-49c0-a5e5-34e864494003"],

Cell[BoxData[
 RowBox[{"FileTreePicker", "[", 
  RowBox[{
   RowBox[{"Dynamic", "[", "files", "]"}], ",", "$InstallationDirectory"}], 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.871533888891526*^9, 3.871533910861754*^9}, {
  3.871533950570885*^9, 3.871533961649748*^9}, {3.8719676077718163`*^9, 
  3.8719676085801973`*^9}},
 CellLabel->"In[16]:=",
 CellID->814558875,ExpressionUUID->"1db62a7c-0129-46e0-9c73-bb0f238d356e"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3QdYU1f/B3D+fft22VY7bPtqa2uH1daN4kBxK6ggKgiiLBUUFETFiYoL
xImyNKI4EARFEESGDBHZhr1H2DsQRnZCuP8khC2KrUUp38/D20fvOfeck/g+
+Xpufvc6csP2VfrvSUlJ7fpI+J9Vunvn7dypu3/1EOFvVI13GWw21tukYGyq
t1lv5/QN/xEe1BD2nS78n+jXBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAACICTgNDeXZCQnFlY0cbg9dCIJenZ1BoZSU
NfL6dnUAADDQ0fOCgk4s+PQjo/OhuUUv7sIiiHCHBZNVVu85GFzZt6sDAIB/
n+L0R3aHpaVlpKX33kmIf1Ww/I2cKs0OJh2Vlp4p3WLDpt0+yQTBf1OvAwAA
3kmW1xP1LcJv+ma3HXENyBUeOeoY39TU/Orzq8J8HA5NHaO0bv5/ph9ycU6g
vbz7X8yp+tSnt08cNdTbvZfk4EASstimo6+kqrnfN57OYfTulQIAQH8ko+Ul
JU2S3eDtEZIvaG72elIwV/+h8Mh49Xs8vuCVp9fH2l88tuWndfbB5yaNVz1x
xCP95UH1+jklXENjsZ/FPl2VFXonfSkEt0nUiZri5npg5cJxasYBWZl1nNd/
3QAA0D9oHX4ydOFNYTCNWukWm1Y1ds094a+/WnBTfX8wv+mVOcVMvmmwd/PS
2WefsGKOKU3cuM3K7zm7cxcBh9tQnpMQn0gWCX9g72A44+MPu+YUszqbkiHu
QY4kkx33yYxWaMmpZi7BSXHTm75cY+tG97wOZ9SXRDnZrRz52SZ3nzRqE8Fh
1ZUXJ6UU1/FpFbn5meKRhHNmVlIZLcnWitdALc5NI7dLyS0uaUDBBgDAu8vg
5DNhNnX80T0a1rtT4z23rzJZpHkylsEThNnMHmey1do5vXMXel7R4+MLB304
WKrNF1JShl1yKtF+vtoUqY5+askpXiORf8tE9g+1TSevp3YamFEQ9tR6yZcL
bJ1iSmgEJcXzmMk3I0w8q9wsFdZPEw/x4RdSMueuRhV32uKVB14zUhzTYaIf
FI12B5b/lTcOAAD6RFEF/dCl520htdcmpqC8sVdnZl4zUzdUUncIZgiaiMbw
ozPXbt9peD+/vUPxE39bfdnZMzfaRvg8eeF+ismoivPdOnupooHJ+TuB3fdT
7Foi5pji1AWrd1zzK+k0uSinTs//8lvTc0HZJeKc0n//gxG/TFiw66zNg1Dy
s4dBTjtnD/9d6chdz6wG8RnCTVOS19ZVm1S2bLYLwH4KAKAfySqoE0bVe1Ov
7LONTaO8ohaiTZG7ltYmIxWr8CqCaCaIXFf1dWt0lPb554u/VSKIunyvo4d1
Fo1YbxVM4TSIb5fq+v1UI6Uk5LTCL3+o7ne7n1zLEnXp/P0Uq4YIP7BIWmGV
qXNwRafZeeVxaY6aX31ufMo/s1CcU5sHDRYOZOWbkl3DIfg19Tn3j8p8Ka1v
fe5pmegEAYuo8T6xaPIa9f1nY5hv7L0DAIA+UVLJ2HLyWX5p73ZSonrw8kfb
p67S37nNi9JyqC76pKmysvyqk55VBF9UKpgbarHeYKmi4o18Jk/yVVeXnOKV
RideWf/5T7qWDzMokuj46zll+OWwuedjo4tbBmIwqiJuK349Tvfk0cAC0QEB
l6iJvaI3c62youZhkuP1W57JlRV0FLYDAPwbCRqIRu8j08fMX7xpC+mx5Aqa
v7WpoozcHDXTIAZHVNOe8GCHiskCDcsYgtNaytAlp+iU4JBzCp/Ns3cml9VJ
unTOqZ6v+zXmBQcfm/7Ft7varvu9IqfEcry2m+tITxr3+9jR30/Ydf2abwQ5
syCXyvrn3zIAAOhDjAoibLfs2GFS3Y1eOPpkjLjI7k3kVM91FNXJ9+8YfjV4
jnVbHUVvckqy/KKIqDNTvxnygWjB07WWXUn+J98sAADoa6yqrPgTIybM37TJ
yv1xhxrv4OumO9SW/yRrF84UBowop3RnKG94UMHiS24Zrk66e2fz8E8+2Nqe
UycXfvb17otheaUtPfiNRJnb3ll/zn1FXXpphu+pPb/+T8b8SVh+Y9Nr5pSA
S2dUZiYlxgfYaakrqM1a55JEED08bxAAAPoddn1RuMeaDxdss7/8rKzjJTN2
qvOVHUu//VnpVCKrlEmNu6S/fd60qevvJrJ4TFFI3btzeP68UV+8/56kLp1X
nZjmajhh0KT1FwJDSpgEh1qX4X1Rd7HMt0P+7Hifr/tOvbXy0zvd53vz5uGV
M2dst40tK2HwidfMqTY5dzT1VyvLbfJIE5cDAgDAvwGvsjLh5v4/Plh7+uHD
nM7f7FSFPTy9fuL/fp1/OTe5kluVeOvmnpWL/1Q2sbW3JpEunt19aLuC2rxp
/31/m6Tej1NNS/W8oCojt9Zo4yFrko2d7ZHjO7esWzb221laHZ6bVBLmeX7z
OnVlpb0k25bnJu0zMDQ0MLwcl8/iifdBvcipJi5R8dz/gSupg8PGa/V2Hjnu
kV4jqVEEAID+j1lUGnll84xpx90Suz14tjjDz+7wvGXTTkXGlzQSRF1JtMvV
ddIzpooeHau4144UGFn06Jyc7Lnbz4sl5XucOiLBdovGUvHTZVfKr7j8tDHf
7+wGyzMXHeJq2gcufRZM2i7dZrnpNvvY8vZwKc0NdbSat0T/dlpKZcsTMVgs
WpKfyQK1I9cdo8V16Tw6kXR5u46SdEcqp888yKT+w28YAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAD0heYmgltTkpWWQm6RSCYXVTSwuR26sKi5+ZnkpIycvFouX9D8
1pb6RjWxaLTSdHJ8PLmgpobJe9vLAQCAHvAbiYJbO2b/+b1Ui8+lpDaf8s8s
7NAlmaSwfprUlxMXrXQtrGU1vbWlvlH1qe5ue8ZJvf+hlNb1W88r3vZyAAD6
j7qUKOdjGtLSU6Vb6Bke9EslCME/MhmtvvSR/ayxK/WtTro+6Wk/1a9yisNn
5wQdUNQ67GAdVvySfsgpAIC/oC7Z5bql9gZdbb19pEuXSWJX7W09nK7Gl/Oa
3vzFqcac0hDLWUMUTK4+ja7h9NSrJsMv1It0w8M3MJfO4b/j1/1YPGbyXfWR
MpoHdz3IfUk/bi0lL+YeyfEqKTQ7p5rZZ+sDAHjrvJ4UkO5nhMWXtx2JSKoQ
HrkXnC94yZc7Ag7RkPXQXHHlsnmKe+z984kmSd+qwvSkh1fjK/6BnOKVxaZc
0fzyM+PTgVmFr+7eL/Q2pwAABiwZLS8padKKnYHp+bTmZiKzoE51b5DwyHj1
ezx+j1fvmtlUTvJZrYmTFm08bUuufdkEPCa7piAhIV5S+JCUmZJPYwmaJUML
ONzGypzE7PLaempFYWGapBc5r7KikdtlJEb+k7CT84d8uu2FOcVn1dEKyYkJ
kgFSs/LK6W3p2QGLWlaQSe4iMT0pt5bOFwgIVkN5QUF6dm57DUYTl0GtzE5M
KqLVsfjiNXObmFWU5Jyy6kYaraIyr3WQtKKiakbHdOY2dmgVyqBkt22FeI21
pZR0cmRMxB2rJcP+XLZx/Tmvto45pbV1LfvFZgGXlp+XmSRpiE/IKG9o4HS/
mMnl0quKhe+upF9yakYhlUO07iab+GwaNSs+t6K+hlpanp/aOk9+CZXBftkf
HgDA29eSU8KfCWs9+E2CadqS3748p4QfnhSnedK/btp24WnGyyeoJGfd1P70
4/9KCh+GyoxUv5vE5LFaWumUkpBziz+bd8zZx9FCb/Pvkl5Sq85aBRd1Genl
OVWd4um2UWrIJ5IBfpFVPhJJdMs6gki+Yq49XaqLL8YPVbodWc1gECmBx3R1
x81VvF1QxRCnEkErjr52fs6QLw3dPFOqRQeYJXXPbVcPX3LQPszD3fL0ytZB
Rm/ZfCmurMNURcFWZ1d1mGWK2nz7xNa3JcR1n+rYruuQkDe77SXeXTXz2cX3
NFZMH9py/L0PPpp0NMA/p7HbqyopiLQ1kpL6WjLA/36epH+NQtRKXn59VbrH
lVn/UTz10Mlx/9F1v4j7/J+U1LpdjtFZL//jAwB424QbKJU9og3Ux7LXJq+7
P2jWNeGvlXYEpFNE26ueMCszog59PX7urv0uSWU99iLqUt1cDqvLyWrsc48K
iBT+BT7kAemQycwJE6VPOj8vFlUDiHLq5OLPvh418tcVRsfsvcnkyGCyo67M
jCnL9l55mCfcJjGIskfnNqoqSEtPGjtq1PDP/vPeN9//9uc4cdHGjPnyWi7p
qVWiPUH7firA9uCaWQu65xSPTiRd3q42Y7H2zoNuwsXEkskP7bSmyk2Qm6J7
zT+3tl60n+plTl1YPfyH0SNG/bx8o8opVzI5hky+br5sicZas5OR1JbZauIu
PfKytfNr3bsEXjphoDJLTm2rb1mlcOTX3k898r5qqv7BR3O751RtfPBl0/UL
Fykc9vYNjRaeHnbX+oLhjJETpu33zEkVLUeUUyTZ/xv1668/rdlt7OhLJj99
Hndp++8TZqqeOBz0b7mGCgD/Xs8SK7QOP2nZRgl/1h4ICSOXv/wURkVa2O6P
xi7Ze+huWlWPvYpi7Ix2KCyeY3ovoZrHFF2sYjfkhQRbrBn30QTTm3Gi64Wi
nLJY/NnH81R2nH6QlE0TV55XuOye/cdSjUOnoxoIAY9ozInyvnubRLKx2Llr
5e+ffDhv9fajli1FGzdve6VUtwZKq/KAK1uXLe+WUwJWbY237qLJS5R33QoW
XaoUxnBjmpPuhsWrZq13Fe5zxH17mVPWq4d/9eecteusfR5l1BCE8LVlPNi2
UEVZe42zZIPCKn1OyU9Pr2mdnpX5xMZAc9aU36zi82vbLrb1/vupYkr4ReMP
PlrYLafKwywttyyTWW7ulNVA44i2wFxaepLX/vWj3pc56O2VVt+aU+/9MF9T
yzbgGUV4hNcsKPHePFZu2WbtS2TaSycGAHgXRCRVrN79+L0pV5R3BT4hv2SH
JNGrnGI8u711nebcDQfCatltdXecssrnVwx/+WT9KV/fXG5bTm04FxIiuc7H
IohwhwWTVVbvORhc2Wm8l173a/e6ObVy7dytD0RbN1Gv18gphZ1OzimMlrGF
u5rMBxcvXb5qHVbSOiGtNCn8ManNmUMblyyaNmnwvvCcalZrn7+fU/T4y2u3
aykusYiiSl6CaNi6vCBv3eEj19vZhxWxW3Jq1n9+0He8GiP5G0hzsyDuzKRl
ylprz0SUdJ0LAOBdlF1UL6PllZr30qKIVr267lf20GaDvqbSkbtFBK/9my56
fXHQjUWfrj5+2zW5ri9ziuA2EHEWKjN/lV6u337db/MylU27DT1zWju9Rk5p
H73vS3nhCoQJyKih+Dnv0lH65tex0tKTRRcpx/8x8rtvR73ZnBJOVBx2YtXO
TVqbfUo79mZXpWWSZo9eftrKN5uKnAKAgadXdRTvWk7xGUSBy+5543/oWLIw
ZpvR1Q5F+W8mp4QnRt9QnTNruPzM7Y/yCUJcBFiZ7LJ3lwJyCgCgL/SqLp0X
e9dYXXOWusGjivbrfsyismfW6t9+rHM2MDC/qS9zitdYkXRxysLNpttsfdpr
xdOKi6kdn5f3JnJKwCUqPE8sl1mx3Oh4cD1HHCf/TE4JcVOc1huvk5+9J7hU
EohC9Jqshy4rBo/QvUyKKOUjpwBgABLf5+uybbLC3Mk93+dLjbukv33e2Mnq
F4KKufWiz1B6dbLnXeMFI0evO+2bkUsn+jKnOPWlEYe/m66xd4+bqLagB/mR
toYGc2THnk0saxCe3FAc5XzNYM6MH4d8qN/rnGrmEfTHNsqya1YYHQ6rF8dU
bab3aUvViePHd8kpPp9VGrzrV7nZmrpnnr7swUk911HUPTt1XG/e93J65pHU
SnG2ssqjI65tmTP8dzX78KdFTAI5BQADVVHI6Uumi9dqqKzcR3J40XOTqhLv
3juutlZBQfOo/Wk7Yeu5E0dMtNZq6VmGxBTVi255fWM5xWksT0/yJDk5kkin
jTXnjhv360TFPaSLDiTS3cioLCpTVLhek+etqbNMfa222WlSRy73HsbkNrbc
FVtfFGp/caviL8v2nLG2J5HO2Fjs3rdeYfHkIR9v6f11vyaCoERZ6W9VUZ1v
JJxK+NacPGq6eYPCxOlyXXKKEPBZ+X47TJcuVV1leLB1QX5xuQUNotZmAb8q
0d3XXXjMymK32vz//HeMkrHx8Yskksc979TylsKJ8tjQm2br1yrN1rY4JVoz
6cKRA/u0NZUMzt5Pqa4UlRYipwBgACsOfWS3Tbpd1+fQMkuiY66uk53R+pza
VVtWOqUyuK1PVGCWVsVd2zp75rHbcXGSp6tyCCLhnsG6PbsvOsTVdJyKVUaO
v75l7qxTN6MLu9XN15fH37upKS03Tbor1TNnfbJqCIGAT6vNu2mhLL/4t3Ed
mseP+Wm87NzNVuG1VI5AtOyGrOQHZ7SkpaeLm7UPOTgFRoaem7voXGBorriC
m11FT3fZrTDf/ErIs9Ku62iX9/DGiY1t06yyuGNz3eb2OY05tgnFdR0fTihM
x4rnpB17FdvXZGTv/0S8uRLw2KnXVQxXd3tR0hprNtyJF4e6CJ2SG2SrKy0t
K2ldq6rjSm5rJeg0Ssj9jVOXWng9SJXc3iXMqXRnje27DpvdSur5zgIAAOgz
DEZ1pIvS0PE6lkcCCjocr4h32m4k2/Y8CgAAgLeitqHMy+KXr35d1SWnMoIt
N6qOkvnWNDS/jv3P/HMkAAAAr8TmNmY+v2CosmTloqVr9duprNuwRf/gTefn
Fe1XIwEAAPqegEvUxHqcO7ZPv5N9dm4e6T0XAAIAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvL4mFo1Wmk6O
jycX1NQweW97OQAAAJ3Up7q77Rkn9f6HUlrXbz2veNvLAQB41/EaSkt9Nq9X
lpPuSO2iw+O82re9tj7BJ4hkn92b9hmfPBdJ/RvjcPjsnKADilqHHazDil/S
DzkFAPBauLR8itM86Tmqy/TNz5IkzAxVNupuOWzvG19LNDW/7SX+s3gEEeW0
arbaUoMdfuV/YxwWj5l8V32kjObBXQ9yX9KPW0vJi7lHcrxKCs3OqWb+jRkB
APoZrycFpPsZYfHtH7YRSRXCI/eC8wWCHsNGklMrLQ7dTatqPVgUeuSYuqzC
kk2m9yhUvqDpH175W9XXOQUAMGDJaHlJSZNW7AxMz6c1NxOZBXWqe4OER8ar
3+PxBT2d9cKcIojqhKuG2xZMH7nCMaqOR285m8dk1xQkJMSTWyRlpuTTWILm
rkPz6qsLc9LIrfIqKxq5HRqLi3IpWZQaBkFIspNTX1dekJRMqWI0cQXC35WV
F2clFdPqihMzU8jkzIK8ilourTA5MYGcVlzcqfKA1VBWkEdun6mgrIHVsbW8
oDgzt7SBV1+akpUq7pKYnpRbS+cJRGvmNjRUCM+OIZOdzOdPWiSromET0DpU
Wm5RdX2HmbiNFZUdZiJnULLbtkK8xtpSSjo5MibijtWSYX8u27j+nFdbx5zS
2jqOuFuzQPhW52UmSRriEzLKGxo43f8KwOXSq4qF766kX3JqRiGVQ/Alb1YT
n02jZsXnVtTXUEvL81Nb58kvoTLYPf0ZAwC8G1pySvgzYa0Hv0kwTVvy27+U
UwQ1+uK5jbL/+0XDLpVd0fLpX0nOuqn96cf/lWoxVGak+t0kJo/VZcSyR/Z6
S36XarXqrFVwUXujn8kWBTU5letR4p2MCMX3/lHtr4avto6rK2ESlEdmx0xm
fWPi5mkyROYnKakZG5StXEvcN337xSdSfxibXE/o8I1Osr+5tlLbRFJKWub+
ye2tKYHHdE2mLd3rX/lo//eyv4i7fDH2q+XO4ZV0YUoShY8DTq2UerHRCpsv
+ZW1j1UUbHV2VYf2KWrz7RMlbZUhrvtUx/YwkLzZbS/x7qqZzy6+p7Fi+tCW
4+998NGkowH+OY3d/kBKCiJtjaSkvpYM8L+fJ+lfoxC1kqivr0r3uDLrP4qn
Hjo57j+6ruVV/Z+U1LpdjtFZPf0ZAwC8G4QbKJU9og3Ux7LXJq+7P2jWNeGv
lXYEpFNE26ue9JRT/Ez367sXffXj5F3BzPwGoi7VzeWwupysxj73qIBI4V/g
Qx6QDpnMnDBR+qTz82JJdnDqiATbLaqy09SMtl0KlPxN38/ubmjEwzzJsL3K
KZVPP/lNRsnq9l2HnRuN1X5cumWr9gV3t8Oqs2auM7p4T/ix38Qmyv0vbl5h
oL//rJtkngA7463qBmrbPZOEL0o0riin1gwa/P1EOSXLW3cePyOHulw/qis9
bOKaq+Tn5aze76dq4i498rK182ttDLx0wkBllpzaVt+ySgb/9fdTj7yvmqp/
8NHc7jlVGx982XT9wkUKh719Q6OFp4fdtb5gOGPkhGn7PXNSRVUeopwiyf7f
qF9//WnNbmNHXzL56fO4S9t/nzBT9cThoMK/+X8hAIB/2rPECq3DT1q2UcKf
tQdCwsiv+M6lp5wicr2cD8h/OWL0Vj9GXl1RjJ3RDoXFc0zvJVTzmKKLVeyG
vJBgizXjPppgejOOLCoNbKSXhXmumTZ2kY62rf/zstZtVk16YVlpNk3yu17l
1PKhQ/6ndjiymBJpf9Bgwfeyq7faJpWk3zCZO26NztGrKQSfQc1zUV6puXG7
fWBma1Uis+S+47Z1GnO3Xskj6HyiJac0ho+auOX8zdiyCuEhTlGW3xmjP7/4
eY/Po8zWBfXi+ylW6XNKfnp6TdvvM5/YGGjOmvKbVXx+bdvFtt5/P1VMCb9o
/MFHC7vlVHmYpeWWZTLLzZ2yGmgc8bVJWnqS1/71o96XOejtlVbfmlPv/TBf
U8s24BlFeITXLCjx3jxWbtlm7UtkWg9TAgC8OyKSKlbvfvzelCvKuwKfkMte
2f+lOaU89KdZB58yCyue3d66TnPuhgNhtezWb0oITlnl8yuGv3yy/pSvby6X
4JVWJl7a9PknMwxvOJF7LGnv3X5qzLeTLwRSGfXJpIPrF4yeo2NNZjBybptK
corPpmUFbP12ylJlRWNLUrvDxoozlk5ZYujfSGM3t+SU7ri5ircLqhh88Uy0
4uhr5+cM+dLQzTOlunVFvamjoJUmhT9un+jMoY1LFk2bNHhfeE5121XPv59T
9PjLa7drKS6xiKKKy+Vbhq3LC/LWHT5yvZ19WBG7Jadm/ecHfcerMZLVNjcL
4s5MWqastfZMRMlLJwYAeEdkF9XLaHml9u7+p5de99MY9utGx2x2Zf5Dmw36
mkpH7hYRvPZvuuj1xUE3Fn26+vht1+Q6gk4pCbFY/NnHG86FhBR1n0eiVzml
PWnYqjuxNDZTlFOqExftc81jsPLacorBqI50URo6fuTwYb+Nk+5snvrmHf7l
NHbTG8opYd4xaih+zrt0lL75day09GTRJOP/GPndt6PebE4JJyoOO7Fq5yat
zT6lHXuzq9IySbNHLz9t5ZtNRU4BwMDz0joKpRGjT/oxuHVl72RO6VgeCSjo
+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
5dSaLz/6cb6S5oYN+i1MjHfYBuQ21HS7AaowyPK07l/MKWZp6GPHrdLj9M4E
5+Y1iFOHW8POu7tn3gSdo9fvZIjGa+Zzav23qcxWUzR0fvYGvi0DAOgHbgTk
nPfJuhJedCep8n4a9bcJ5sJgGv7L3rU73D1zazX33P/h9wPCIz+NMfNKp3pl
1NyOK7MLyL36KPuFd/vSKcGPbx7U1xd+oivO/G6c/FK943dCE6uIlr70fK87
h1Wmj1iwI7CCUt9EsCmJ7ieNpk6ZZ5+QUN6SNRwWNTFq33TpFTqrd54k3fR0
Ccqj8pr43Wd6eU5VhAeeN/hj8CT1/dZWtpIivUs2Zy03jB81ZZuhbWR+a04t
3evillZSFHHlzOwvhihddo4rSwt4OzlVHefoaDL5wz90TKwutBYW2jnYHdaX
+Xq6nqVFqOhrv2YBtzbecsfi1csWGJiRrjtefRhf0oidFAD8uwXFl13wybLy
zbkcXepELp+lZPvzuMPqJsKQoj3Ir3tAqdPa5/nL+MMzl128mVB5I77COijP
xjcrIK5U8LKnUgh3QvFum1at+OGrKfNVd/nQGvjN4qtxxSn3j+8a/ZP0scio
IjqnLMTHes/8qcZuWSxq22c+p45IsN2isVR6wuhR4+R+XnTSNTw6kpxXWNHY
eXv10pyiPPI8pvz+f4d8P3riuEldbn7adcQxOrc1p3QsHwYU1Ipyau5XQ7be
80mjFnTPqV7X+/2dnCoKPXNe7aP3Pv/pt3ETuy7ZyP78k2JxL+G7mOp3yFBP
euL4P8b9/OVUI3sfr3ByRl5x1T9Y8wgA8DaVVDOu+meb300jxZTdSKhwTaty
z6q5n0d7UFDnU9jgU9DgXVjvmU+7m117J516K7HCwiuD5JddXE3vxXP+SqMv
6m6Unf6Lxr1UNr8lZSrJLje3fPexnJ1LQnlejK31WYNRFjEN7KYXnF0TG2Kz
WVpK6n1RqcAqPavgtE7Nr8wp7S+HrTofSyt+4Qf4u5lTG38ftOhGUHH9i8/t
pL4iyc1+htSwT0TvzqRVxhfjX30OAEB/xOULnqVUOvjlXAiiuGfUeOXW+RbW
B5Q2BlUyQqtZT6iskCpmYDn9UXGDN6XePqzwUkBuWFKF8KxejP2CnOJRk9Pu
7p4xVPm0Z6jbxZOkfWbWiQzOC2+v4jMaqwozYp7G+xxdO2GSxjbbu50+2F+a
U9XRITZbpn87eufD6mzai5b27uVUTcLNGybzP/nfkTu51OoXnttJE49Fq858
npzwiGQwV3mV+vJrma8+CQCgf6qoZT6IKjp0O9kxotiXUh9ayXxWy45u4D6n
854zeLGNvIg6zuNS+s24MvM7KfcjCstquuYCn0mlRp4LSC3N6RgKRQ9tty2c
O09R+yqlmieQbJl4VdXJbmbjflq+TF5Ofss2M5fn9JfeBcyhEfGnVKfOUt1O
8i7s2FCe7X/W7M9vf9J0e5BG7bogTnXOY1vzhUOmLjt8OYTygi3Vu5dT3Nq4
yJs7F344ddnu+w8zqnuxpSJaLgN6bVu6VkFjjUtur84AAOiH+E2CjMK6G4G5
Vx7nOceUBuTR4mpY6Sx+Lk+QyeYn1HOCC+vvkMuvhVCEfVLzafxu97C25NTt
O/b2V0ntzAz1N+rqWV7zzyc6bL84rKr4qD0yE78f9L/ZW7ffyqoV39nbisWu
z4m9fs2lbRC7CyRT7TXahyxcYzIbOs7JoGb5PTioNP3P9dv2W1mLut68eftx
SjWXIa66oJcmxDhqqU8bo75170Hr9kXdjczMonLeZE5x6tgF4S63nISDW5oo
r5457JOxurtOX7QhkTxDYtNrCPHro5c+93vsSiLZnrI5qDbly8+mL9PbeoJE
uu7u9Ci7lMEVl0LUVmU9ct6gOGechr7JiXOS9V4hke4/TSlpeYRhs4Bfleju
6972ai6TSPt2am/Yvu+Si+TuMwCAfydh9FTXsYPJZVceZbtHFD7Joj4vqU+q
pMeV1IdlU+9GFpF8sx4/L62qY/N73vxk3tm4W6Pj1/9q+x0ek7s/s5ZZRTzd
O2fCuMUmDh6ULm21dcWPbOfMWto+yExpae3zvhk5jd3GIWj1ZQH28+WWS3rO
ny+/2yWd3vZUWm5jRaLDQm3FTiUJqmceiO6fYpXTkm7tWDjniNOzqLKGiiRP
Z/35c62Cn+bVlUVdcTqivnCHfxJNdP+U6Dm0R9QWmPgl0lgvrpOvL6h7Yrl8
sVzXh9VKS2ua2d7LJsS7noq4S8a7l3frMWf17K2+cZWM1g1fI5fxzGnl0lXt
PaZKS6877iK5f0rAY6deVzFc3WmMlcecXVMQUgAwUBRW0n2jis+6p5peijU4
Hyn87xm3FJ/IooKK3hRO9I4kp0wMzj5Jf0NDAgDAAMHlCeoZ3Eoaq6SaUVRJ
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
z944tZzqycTcQgv/tGaPGbMB1Zh+X+3YARnUpVjyiFYtx7vaU+1hJur7Bb9b
vholJInSeB5T2TYm5iaXU4wdkel9TP7I8E5e88f3c+aJTT2npt+eKnx6TU3k
23lLfluL4l8/WCH+tStX/rzks3knbcNxtayc0p6/aKNFfHwVhZlTKmu+F3OK
a+4sHcopeje13t9UfD3vwqW/8oyYIr92xYof//h64SG71Kaa7hnMqW5Ckv1j
Ld55y9as5VuP0n90O6521PIROVVHTg6/jdbaulc3kEwg9zNzSlV8g2EYnnWs
I62Z0U9MFIZrvHrlL4t++Rg51VkeEWW5bfZnS35etXbtiF3I/fPcBfzKB24k
NbIOQUYCYZ2Pn9r97Y+rmMeN/N3wyPJxl1ozmVP9/b0trWUuZrt2iC79ce0O
yV22SWVttMFueWZOaS/+ZuOJJ4npRNZxsmDxRsuEhKpSyKkZMUM5VUujD3RW
J8bGp0Rk1lP6yQPkYLMtPMd17RjnGxqpoTRAz0BywyEVrdO2g33RNno7BHmk
ZzinetoYDyU2buETUze0HXPTp7erB7ayu7eHlVOSW6VNk/tINFZOHVaTcsij
kgjJwzlF6SFlBBkrHdisoKBy8Qbz5Y8xmOuGEtx8e2Y6p/p6kDeWCjukxDUf
vL05RcJn+LgbHBD5ebeOhS37nd2xNDLYOXuh0NRyCmlPCryuIr4CdcC3qbIy
9qm2+CEZVd3giW5xeWtOsbAHGu6amZ+UX7FUWOqQijr61j3X9Cr2OWRSOUUi
EeL8dWX3ohRV0aasQYpHGIylrsgybump59T0x6dynlxUlviZZ4/mdcyDxyOP
nKcYTEJ2TRuZlVM6CxaL3HyTXNPFzCl13kXSnilERrN8RE5Ve50T49u+WVL5
8pgj0OWpS1hOQzez43bGcgqhtZaVvfHDPH6IOb9/0649vOIK6JOX9exSClu7
mafFETnVgLTV5yWl+AWm1iNdfUjNq7PGJ+RRJ4IqBvppbZmvbhsqyhzcKH+R
U9trRoqiOz5GTpFLXr26KjTrs50K565bj9mFXtHM0wtnzY6qlPRQzCO765Zq
q9aLS+48qI6+YncltJLaN3zNNZPz/eidSMvLazvWreTi+pxbBHUnp2XoRkhm
Tuks/kbEwDElq23kcVIOOTUjppdTZdFmimcPyRuEt9HoI7uIGd+9uHvb1hoy
c6qXTMgI1vhq9eaDeo9icZyD9oP0+9E6kCxbxS3CB/Qevqh6y3uYTE71NbaX
Ouv9sFBQyupGaDXrNPvB+v3oVCTv/nFxsX1qVs/K3/bimoynZw14/lwm7hxR
3c7ehX+t34+RFjneV84L8fxpHB8fYm4guWe/orn3xLP835lTbD2NTbmBtieO
GyiJb/5jxz6Fm4HNg+2y9+dUb21d2j31L2ZvPvTwSTyBNS10Gv1+08+pEk8r
DVkhUe3HhUjXxAN+k8ip/h5qS9B1iQ2HDhvfePP2+S0zl1OD+vuQylDH21fQ
R/ZJiQp/ufaiR25TUy9CKw8Ns9X84rfrPqXEltGvaIozv3xak5VTdBruqZG0
6DpRHe2goX7Sj9bv11P1Ot5WbvZnStZRpRWTuL2c3tVCTL59/fJJ1f1bt4hI
/K7+vLS7b+h1M5dTPdSOgvTbJ2R3yYrv3CUlK7PmsHlYMaWdHT6QUx/Y9H6H
NjNAX9ZQXNU6Dekd1W00Mqe6OmpjvaS+Wql640YU8wYdxteC2lKa8ERRZvOB
MTlFzPV7ZvDzHNQ1TFJ107g+5/fnFL0LIbyy3M8vf8TQOhTP+Hr1jx9fnUxO
9dS1Zt1XXPKNsql/YGkf6xZ+cmt5uLOmgIjMmJyqK4m6dWbRgs0XQsNw7e+a
z/DW8alepCHqjoqQvKzGlZe1LVSEHfj0bnJXWxPnYUniff3jazZsfoyrbGMe
7TRyU0WC4z2F2UtFxudUD6WptgKLzczMrCR2d447uTWlP3U2WPMp38VLBtsE
hdUPGocUjV1l8K29P6eGVPlaKu6U3KdzN3twn7en3b+lKffbmmvBZHp7P7On
sCXnhc+Vg7M/4+RUV0X1a6t9n89SvRkTXc34sOl0WktLSfBjBR6BAx8jp4gp
3hcOyW8X03Evr+ygT/QjRZPIKaSXiuT6ae5WklI+9vQNgYLQJxzhn3xO4bxu
a8uv2aRpl0dto751tsAQelVk1A3Vz7+StomrrexCOvKfeVvIfbnTOaKqfcwP
cwznVH8fLevO8T2Su5Ss/arYCztbqyJ9jBUOfJTxKWIuzsd4xTf8x20j4yoo
k7ztgqExwfaGxp5f+G9FddKGxj/7SHV4b5kt3IfULELSJ5ppwkHtaiNUMb41
b+ku7uuurHpjjf72tw1aTx5HRGd4XlRa+8eR228SKjq76JBTH9z0/tdjMjmF
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
BBnfRvtHgZwCAIDxpplTFUFnb5ls3KR7WeEH08C0mkYEacmJirGQMX1ssuOP
M6YfN6doZCT7kebevXJatq5pRAqCDEylMn8/yCkAABhvmjlVGqB/+6rEvps+
juLr77/KyqqtyAjyuqx1MTbDXmm9xgXzoFQyZ9WaGF+MBXrYE89IXD1zAaOV
Uxp7y9wSjVaR27mD58vPlm7dIaeszlpJ98x5q9e11e3MlhAzp2x3zV9j8SQk
xM/j3hXmch002sonpap2cDBqZE6VdTUnvVQS3Ktw6apPdl0XMhqlux0baHTK
ZLAyJqeMgjI7uimcxX09pPIgYxufV4FpWRVJz66ztsRg5fQyoW5wHVLRC19v
T1uPxNrq6IfGp06xVjhveedlGdLZO7ylgb6e1gzMPcvT7C2d0DOwCMUVE6nj
d++M5FR9mrP3zeG9fCcgObNxsCJIW1boE5uLaDNTq+gSBKEObjQ764UZ+vhx
88Dc3Iah4buB6kiL+9eGy3GMry4ff+kAAAAf3kzklOxhTEz+nfVoh0ivYM8X
zjcVjAPxxY5aG+ROXfSJbUKQfhpCLkkKdrUyPc8652mi0YoSqyWU9B4+xRIo
CG1gCjklMn+NkrrOlQtnz+mh0cfUVKX5VynoYTyS8KwZgEM5pafvFpTiarB/
s4zRk9cptaNTikpsKAr3vXvK+MBxbVXmVjSOHFPajT55Jyqhuo2dqzRSQ7Lp
j1tlZSSPnbE5Z6ihiNbSRCvv5ZOW1ztlX9TAnrERdeH0UckVwjpmZlandXS0
0egjkhv3imySuZSe00rtZm+qA18Z9/CuqfZxXU3WptS0tPYfUL105zm2sGns
nI7p5RR9oL+tMubZY2ttfT151s7TQh/ZpXbinLV7Uh4RGcypO6eOoERWr0af
fUMgMNK0u74o5NbVw7xLtyue9c1i5RStp72q+CXm+mUlXR1lZjHHVNEKwir6
Vg5hRRBVAIC/3/RyqrfIW8fmgqyyO5aWZi511t3ERN/e/rxuYDG19KnOUE71
kRF8kLVbUgSWfWXfhyD4GJMd+7YdljwfXs6a8cY2iX6/TfPnLP1phf5l5zTG
C6ntNdk2qzb/vl/dLDSL2YQZzClpERmJ46fPiKFQ16MTK8dOnaDWRofe0djC
vc0isrmCtbCnAZv99PDqbxWv+WQWsZoZgzm1fMHCpULS6Duh9Ug3HWmJvWp0
4NCG3Xdf05CeAVZO7eeeM08AtfNRWD2pjdGWSbhzX2XN19+ecsERGxjvis5I
nhcORxbzK2HcUvGsTZF6SLGPhP+U0rx1M5bQO7pi08opOrmvJf7e/g3iOtbm
MTXMZwb6kcbXD4+Jysujr8RxkrotK+bBSSn+9f9TxoQX1Tfm+j89r7hVQFrz
ZV1NB6s6vY34dLdLfIsFTLx9clmz42ntSN2L8yK/K5y665D1z5svCQD4/256
OYVPsVM9pyar7F9Mo8feFTQz3C539bG5X3l7X7nzcE5NhBCid0xcQVTRLZXV
NmGb8vhUTyuSeFF8w17ZM26seRODObWJi4trIf8Pct5pbT1jO/wQpDL0ioXh
1h9NkxtIQxMriCSC35UfFhpaBoVVMh9zckpa5XJo7tAr85zMNQ6v2X7GvQqh
9LFz6uDG3U8SWRtmqo6KuHF0zoI9VnH1lRQEac9Jd70mOl/idiyhktOl2E+j
1PgcllQ20XqYRhhdsWnlVEdlT7jh6mWG51zSS0c8XeSlbmC4f/Md7PBT+MTU
hwqf/u9/Sg7BNwwOKclKb7o9YikhOeOx4SefnMJk1o2sXsatDVKGp7R8cFOt
FwAATNMM5VQ1jU4qsDc4pqJ7xCq4mNLeX8HIKV5Vgwc+JYOr4p5pnVNCDeH9
Y9F383Z+oJx6Z3uKmONqaCgwd9bSlbx86znVWcfHu3zprM8ETjm75ZCQoZza
qaX9MLV26KXdxPqqisKSulYa0j8wiZyqi3ttp/T1/+b99CfvGn7Optbzr13+
zfxvDx65FJo/umbTySlaU0G5k9jKn35ZsmzVmuHdjFr928JFPGLrT4bhGU0l
9qq9lDZc9POL61Cb1v60SEJW88nzxuEw7ywJCbkmxMW1+FfutbwjyuH+6av5
qKNH7N40TrFiAAAwTTOUU7U0+kBndWJsfEpEZj2lnzxADjbbwnNc1869kHnO
Lw3QM5DccEhF67Qths1Gb4cgj/QHyinm+JSDf4KdEmqTlN7Y8al6rIOervDv
C/YZ37j7EDOaT1IRjjXDYTCnJHX1HLD1b9kb78+p6uhIW6XZX66WPW1jeW/M
psKiU6tbRhc4nZzqacwrfCS44gdRCfUL5mM25R7sn1BNGrGfO/GZb0wX/7nk
My4ufnH1J1EjbsYmFb14cXHbJ5+IKV+0vjGmHO+Y6JyGzilWDAAApml6OVUW
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
2qR6J/plSQ+RyqpapFQGWIjzbVosdlTbO7JrgHUwaD0lAcbnZLlXH1DQjWrt
YGUnndLTWpH81OXchgN7t7G2w7tJSFxC1+PNm5bBAZhSAgA+a7PPKeVdMsqh
zbQhzrRhhk+K096tRnoOT8oQWm9jnfcB/vWCpywDX7Gih3lirY/WFxD/YZ+I
gl8282zO2cdMOYXPfeWsjeLi+oJrGitlTCwTOkYbsnKKn/nYkm9XyNrn9DQP
IASs+yO9o8t+vBqGI7HnLPUl6VFW0v7F+IEB9ku6SyNDtBYsWaB1M7K0fjSn
tLiWfsO1Uc/VIzQgxlX9S0FRPkHH4GAPe2Ppw/yHLqUjPYPvc8B6W3N9HYUW
LtN5FlzQyd67tv4390/9vEz1SmBkLbvJMA1pCrI+umMV6pSwyxtkmI40BV+V
5BcU19CPbhvfDq4k0NJUgnuBWWo5jj1kYklhoNnef32t7V2W1/E+IwEAgL+q
2eVUQ+pt5fNyYznVlWZrbWNv4oHF0Ykjrc/O8x8xvvgU04bH14TZbVwqqnXf
NbWJxPrwz0w0KhHrYXNC9MjBs04lyKSSvTmZT/Fz8wpf9yuqbSUP0YYRRnV4
yBWlb5crOhf0tLLyhUrpJ7bVEiiM4dFZEaMjv9pT/vtvJYy9swr7RnNq3tJv
pI2fZBWVxcTcPf718lWKzsW5udGPPyinOjLTH1luWKF5O7O+boA9kxum03pq
ww1XiZvcuhbfwm7EmkC1Ye6ZqYisFT1l/7oqWH+PmKKBtkd6E3F8plQX8djs
/J791o9b+3tHJ65DlM7iKG+lf3FbBAcX4qfvHQAAPguzyylysa/2RZ0jQo8K
qIzOzFuHpHYKi2h6pOJ6h+q8dfl0L9vGYXsaW167yM/fqO+cnNZK43hpUdRV
ubOysrqxBAqdYy426/UpVk5JHBTReVE2cTkVqbkhP9nnCaaokzq6AkUj1NRi
bpkY6qBHqZ5UFuWeP2+3vntGPoGdUzoLl26xckys6WjAxNgqfrNEwBLTUV0Z
7/MhOTVQERZidfDLf20TkVdVGesJrXlGTXrHohWiRvq+Rb0TTXuqswIuGShs
4z4kJ7hSXO1OaERj38STfdn211X3f7tcUBKNPjO+HTX5Y4e4v1p4+DeX5Mb+
/z4WAAD4q5plvV9TnJW1ifRG85hOeoGfjpr23j1KBpftMhrpBfby280sHVLK
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
wwIxn4RmYj+CKw6wMJXg+cY8tbJzYDSnTLdycX05j0vV50ke87g016Xd1//i
X9+qevvlje44kTH48vbmVVLqdx0yu1kPDDOQnDtqElLCKvYRrVPGNfucasmw
U1SVPsxrlzs0zI6Trowo29Niv/AYJjAa+9hNSFW1MdZCX/5zoZyLc1oLQqqu
i726/6svBC8Gh5QS2S1Y65iROqgDCnoqT8vHNtwadV9d9Jiokm02QvvTamQA
AJ+Q2ecUWvbQDoc3g4zhYlfRk4Lb9io6xLYQh1qenec/YcrKKTy+Jsxu41JR
rfuuqU0k1gd79qdorIfNCdEjB886lSCTSvbmZD7Fz80rfN2vqLaVPEQbRhjV
4SFXlL5druhc0NPK+hKMSuknttUSKIzh0S8CGR351Z7y338rYeydVdg3mlPz
ln4jbfwkq6gsJubu8a+Xr1J0Ls7NjX48Nac2Lljwn00864/fTUmsIg1MqRkh
VRWF/ia/Zo+5f3FBJ5X95BBjsP2N/eEjqtaGPoXshBjPqY1ifJZhb6rxfbSh
YYTeEH/nruqvC475pzT3DYzmlMi6eacfh+S3ElgTKBq+EhOo8NVPh2wdE+p6
2f+uCzm1S8z0yrPcqrGZ2ghCLgyzkNU5o22aMKXqctY5Ve5tqah/TO1BCI48
Nulh9NcmON5VX7fcOhvbwv6eb2iQ2lFU5a7Ci9ouc8XZ3dfdWYnv34oPgnKb
eyhDY+91/t3juzQ1boYnEca/naQTsd7axtqHBF1KBmif+DIfAOB/YXY5RS72
1TbUEN98O22QXhFkYWlyiP/0OU2rhDpajZcun+5l2zhsT2PLaxf5+Rv1nZPT
WmkcLy2Kuip3VlZWN5ZAoXN8vzPr9SlWTkkcFNF5UTZxORWpuSE/2ecJpqiT
OroCRSPU1GJumRjqoEepnlQW5Z4/b7e+e0Y+gZ1TOguXbrFyTKzpaMDE2Cp+
s0TAEtNRXRnvMzWnhFatOnDO8NAOmWtOcVWN5MlDac9IddFa8dVPu44qK6iP
daWloa4ouubndSoq1xMqWY3GckpS6LRSYO3ES/vbiopTAz2jq1r6afTRnJLg
XmCWWo4bW48i1qXFGXy1UvTavbhq5vSpvzkn48ryNZsEBA7JqaInKEruWM0t
evKIZ/nkkc02p3oSLqiJCf786wGZt32hlaWF9qFW/kPaP64KP7b4RB9A2rO8
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

    "], {{0, 361.23130671324844`}, {340.8295385600085, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{119.98960000000002`, 119.98960000000002`},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{340.8295385600085, 361.23130671324844`},
  PlotRange->{{0, 340.8295385600085}, {
    0, 361.23130671324844`}}]], "ExampleImage",
 TaggingRules->{},
 CellChangeTimes->{3.8719677356328354`*^9},
 CellID->448950089,ExpressionUUID->"b7239837-e93d-4fdc-b371-1cccea5cf91f"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->{"Source & Additional Information", "TemplateSection"},
 CellID->611501116,ExpressionUUID->"ccc845df-5aa0-48cd-9f8d-75d892e1cccb"],

Cell[CellGroupData[{

Cell[TextData[{
 "Contributed By",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Contributed By", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter the name of the person, people or organization that should be \
publicly credited with contributing this function.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoContributedBy"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "058ec368-f5fa-4bc2-9648-0b1849daf157"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Contributed By"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Contributed By", "ContributorInformation", "TemplateCellGroup"},
 CellID->86203256,ExpressionUUID->"e429e93f-0c3f-48a1-a225-fc532ded2289"],

Cell["Sjoerd Smit", "Text",
 CellID->323553069,ExpressionUUID->"a42faa2a-412c-4e7c-8e63-e5ca4e1f2558"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the function in search results.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "8fc1456f-9e59-4641-88c2-61a428dad197"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->696375425,ExpressionUUID->"f9e694df-db89-4d08-9a6a-95bf97da8027"],

Cell["file tree", "Item",
 CellID->594925526,ExpressionUUID->"8d007641-d42f-483d-ae63-fa667f029c31"],

Cell["file selection", "Item",
 CellID->491901454,ExpressionUUID->"43c1995f-4196-4134-a7f5-167f6bcf24b5"],

Cell["pick files", "Item",
 CellID->861561442,ExpressionUUID->"6f5e6c86-3976-4dce-85cd-2a22508c11a0"],

Cell["directory tree", "Item",
 CellID->469692019,ExpressionUUID->"2c294f78-9966-4022-a098-e5bc3fbf0ab4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Categories", "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Categories", "TemplateCellGroup"},
 CellID->362094786,ExpressionUUID->"abcf0c55-b752-4dde-b25c-4d9c9e14617a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Cloud & Deployment"}], "\" \"", 
            "\"Cloud & Deployment\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Data Manipulation & Analysis"}], 
            "\" \"", "\"Data Manipulation & Analysis\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "External Interfaces & Connections"}], 
            "\" \"", "\"External Interfaces & Connections\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Geographic Data & Computation"}], 
            "\" \"", "\"Geographic Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Graphs & Networks"}], "\" \"", 
            "\"Graphs & Networks\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Images"}], "\" \"", "\"Images\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            False, {False, "Knowledge Representation & Natural Language"}], 
            "\" \"", "\"Knowledge Representation & Natural Language\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Notebook Documents & Presentation"}], 
            "\" \"", "\"Notebook Documents & Presentation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Repository Tools"}], "\" \"", 
            "\"Repository Tools\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Social, Cultural & Linguistic Data"}],
             "\" \"", "\"Social, Cultural & Linguistic Data\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Strings & Text"}], "\" \"", 
            "\"Strings & Text\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "System Operation & Setup"}], "\" \"", 
            "\"System Operation & Setup\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            "User Interface Construction", {
             False, "User Interface Construction"}], "\" \"", 
            "\"User Interface Construction\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Wolfram Physics Project"}], "\" \"", 
            "\"Wolfram Physics Project\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Core Language & Structure"}], "\" \"",
             "\"Core Language & Structure\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Engineering Data & Computation"}], 
            "\" \"", "\"Engineering Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Financial Data & Computation"}], 
            "\" \"", "\"Financial Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Geometry"}], "\" \"", "\"Geometry\""},
           
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Higher Mathematical Computation"}], 
            "\" \"", "\"Higher Mathematical Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Just For Fun"}], "\" \"", 
            "\"Just For Fun\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Machine Learning"}], "\" \"", 
            "\"Machine Learning\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            "Programming Utilities", {False, "Programming Utilities"}], 
            "\" \"", "\"Programming Utilities\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            False, {False, "Scientific and Medical Data & Computation"}], 
            "\" \"", "\"Scientific and Medical Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Sound & Video"}], "\" \"", 
            "\"Sound & Video\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Symbolic & Numeric Computation"}], 
            "\" \"", "\"Symbolic & Numeric Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Time-Related Computation"}], "\" \"", 
            "\"Time-Related Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Visualization & Graphics"}], "\" \"", 
            "\"Visualization & Graphics\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxVj81KxEAQhEFcNxHx5slLXiAPEaILC8LKtvsAs7O1cXD+\
6O455O2dBBQ9dUMVVV8NTU8b0tmD7g5Fc9GetuMn7Bcu1xu5fXOi9HwScLePCr4ai25MUZSLVZciPb\
1zmtiE4OLUndR5pw5SU/eKINIORVMw6mxPTbVmsM50PxrFlHh1bg95SZKfvuUei4c0rxen5ly/\
zc54wa/QvsDjr7JAJ19C/F/4uDJnrt6VtR3iTOUsqCsfjpBU2OJjzqBmV+K65xvXLWBU"},
 CellTags->{"Categories", "Categories-Checkboxes", "CheckboxCell"},
 CellID->28476666,ExpressionUUID->"c5a78719-a052-4f53-8c1f-dd56b6dc5cc9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Symbols",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Symbols", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List up to twenty documented, system-level Wolfram Language symbols \
related to the function.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedSymbols"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "ee49515c-68f1-4c3f-af87-675c44ab09f1"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Related Symbols"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Symbols", "TemplateCellGroup"},
 CellID->659846169,ExpressionUUID->"3981bc07-a25e-4bac-9687-c7cf0e4a8619"],

Cell["FileNameSetter", "Item",
 CellID->616558519,ExpressionUUID->"f0c2b490-95b4-4b39-90c6-74c8f78ee035"],

Cell["FileSystemMap", "Item",
 CellID->197967984,ExpressionUUID->"b3ae51f0-9396-47fe-ad59-69127dc584d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Resource Objects",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Resource Objects", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List the names of published resource objects from any Wolfram \
repository that are related to this function.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedResourceObjects"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "0bada1a3-c077-403e-8eac-7dcfc3051802"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Related Resource Objects"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Resource Objects", "TemplateCellGroup"},
 CellID->465534472,ExpressionUUID->"adc12180-10fe-4e2d-99d7-48aa4b527a4f"],

Cell["Resource Name (resources from any Wolfram repository)", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->873143661,ExpressionUUID->"63be4ee9-2487-462a-8d72-579c95e6bed3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Source/Reference Citation",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Source/Reference Citation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a bibliographic-style citation for the original source of the \
function and/or its components (e.g. a published paper, algorithm, or code \
repository).", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceReferenceCitation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e5c0dfe1-755c-43ad-9359-cb9b98e17964"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source/Reference Citation"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Source/Reference Citation", "TemplateCellGroup"},
 CellID->515669552,ExpressionUUID->"9c5b262d-8ca7-4289-8f58-5d41de0ea0cf"],

Cell["Source, reference or citation information", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->436399423,ExpressionUUID->"7fad657b-2619-47d8-bb82-c20b10f885df"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Links", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List additional URLs or hyperlinks for external information related \
to the function.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "123e55c6-a947-4f3e-aa3d-694a8c6026fb"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Links"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Links", "TemplateCellGroup"},
 CellID->571756773,ExpressionUUID->"ac0de1e7-e418-4a53-8f8c-20b2d774577f"],

Cell["Link to other related material", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->132505746,ExpressionUUID->"e17b2f15-1c26-40ec-a7f3-ef28a5a0cdc7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Tests",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"VerificationTests", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Specify an optional list of tests for verifying that the function \
is working properly in any environment. Tests can be specified as \
Input/Output cell pairs or as symbolic ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "VerificationTest", "SymbolsRefLink", ShowStringCharacters -> 
                 True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> "paclet:ref/VerificationTest", 
                ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " expressions for including additional options."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoVerificationTests"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d5f7b99e-b557-4b56-aa41-9220ad8f7c16"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "VerificationTests"},
 DefaultNewCellStyle->"Input",
 CellTags->{"TemplateCellGroup", "Tests", "VerificationTests"},
 CellID->561308448,ExpressionUUID->"bbb021ef-d791-4a50-9bd4-0239d4c5613b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MyFunction", "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "Input",
 CellTags->"DefaultContent",
 CellLabel->"In[3]:=",
 CellID->946203791,ExpressionUUID->"30b96c7b-1960-418a-a5b2-46c73e6f0199"],

Cell[BoxData[
 RowBox[{"x", " ", "y"}]], "Output",
 CellTags->"DefaultContent",
 CellLabel->"Out[3]=",
 CellID->168370258,ExpressionUUID->"b479e49a-25a1-4d0b-8d74-c18284364be6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your function to ensure it is \
discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "654a62f1-6580-4a47-97ea-28ff8d6c0f3a"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->695575686,ExpressionUUID->"223e82b8-6549-4c43-aa09-48d5360dc6ab"],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "35b0b105-230d-499c-bb34-5f8647f73d60"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{
  "CompatibilityWolframLanguageVersionRequired", "TemplateCellGroup", 
   "Wolfram Language Version"},
 CellID->901090016,ExpressionUUID->"618e3b12-a279-4b22-aff1-0da5f458c8a7"],

Cell["13.0+", "Text",
 CellTags->{"DefaultContent", "ScrapeDefault"},
 CellID->788185540,ExpressionUUID->"f2d3792c-1c0f-4a8c-acd2-586d4cf57ab1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Operating System",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityOperatingSystem", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Select all operating systems where your function is expected to \
function properly.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityOperatingSystem"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "0e4a6989-5369-4a40-b20b-5cdca92a5e49"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityOperatingSystem"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityOperatingSystem", "Operating System", "TemplateCellGroup"},
 CellID->172929666,ExpressionUUID->"53aa62b6-d9e9-4c2d-83d6-6d85272323da"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Windows", {False, "Windows"}], "\" \"", 
            "\"Windows\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["MacOSX", {False, "MacOSX"}], "\" \"", "\"Mac\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Unix", {False, "Unix"}], "\" \"", "\"Unix\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxNkNuKwkAMhsEerLDsE/gKfQipCoJLF7PL7m0PUQenM8Mkg87bmwot3iX5/\
3w5bIoSMuCoEfI6sAtcwrK6YnfD/pxQelTEsPxTprd3gvyr6Wr4h/\
TXqIc0HhgHmmznBaWnIKDZPgWzkkj/\
BJmLL9iELL69deg5wrqyg2tYtUorjrUUJTEXiCRDZcnasbLmxX6fTsWuV9y0EmX7RhPOwmqLGt+\
V8VKrw2CoSkr4PBhG77xYRjCsNiZCaAnlIx8nJBt8hz/RIRT7YLrR8wRtF2wJ"},
 CellTags->{
  "CheckboxCell", "CompatibilityOperatingSystem", 
   "CompatibilityOperatingSystem-Checkboxes"},
 CellID->589765368,ExpressionUUID->"d6993b5e-a42a-43b3-abff-f399fd74c15b"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Required Features",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityFeatures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Choose any other features that are ", 
           Cell[
            BoxData[
             StyleBox[
              StyleBox["required", "TI"], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " in order to use your function."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityFeatures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "c4c38930-0dd5-43ec-b637-2996160cec46"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityFeatures"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{"CompatibilityFeatures", "Required Features", "TemplateCellGroup"},
 CellID->304592644,ExpressionUUID->"ec047e30-563b-4842-a6ac-18fd6d0ecde8"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Notebooks"}], "\" \"", 
            "\"Notebooks\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Parallel Kernels"}], "\" \"", 
            "\"Parallel Kernels\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Cloud Access"}], "\" \"", 
            "\"Cloud Access\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxlUM1qwzAMHmuzJlDKLrv3BfIQIVugrKyl2gs4jsJMFdtY8sFvP2eDkLHb96cPSU1ZQw\
GSCOHpEsVHqWHXfqG+4zA+8PZsOCvFSXDicfPLx0fe3mKeqD6cYO/cnVdwcZ+vKigipOM7BovE/\
5Ulu2/JxeHYaI3Mf1kN5TU4j0ESvLRu8kpMb8hI6lBJDJgTu4sX4+\
xP33pDLt8GI6rPqOgUMS5G9YqEa2c+21GcLLebGg4nKxh8yJG5GKrGJog9Y37G/\
obsYtD4mTxC2UWr58w3NfBx2Q=="},
 CellTags->{
  "CheckboxCell", "CompatibilityFeatures", "CompatibilityFeatures-Checkboxes"},
 CellID->851691753,ExpressionUUID->"42d3d558-025a-4223-a3c6-d79285438cd4"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Environments",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityEvaluationEnvironment", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Select all evaluation environments where your function is expected \
to be compatible. See ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "$EvaluationEnvironment", "SymbolsRefLink", 
                 ShowStringCharacters -> True, FontFamily -> 
                 "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> 
                "paclet:ref/$EvaluationEnvironment", ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " for more details."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityEvaluationEnvironment"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "1248fdb0-e7a8-4145-b70e-7cb9762843fe"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityEvaluationEnvironment"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityEvaluationEnvironment", "Environments", "TemplateCellGroup"},
 CellID->684661901,ExpressionUUID->"d0a93c60-d746-4294-aeb4-2c9f15b080ec"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Session", {False, "Session"}], "\" \"", 
            
            TemplateBox[{
             "\"Session\"", "\"Local or cloud interactive session\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["WebEvaluation", {False, "WebEvaluation"}], "\" \"", 
            
            TemplateBox[{
             "\"WebEvaluation\"", 
              "\"Cloud evaluation initiated by an HTTP request\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["BatchJob", {False, "BatchJob"}], "\" \"", 
            
            TemplateBox[{"\"BatchJob\"", "\"Remote batch job\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Script", {False, "Script"}], "\" \"", 
            
            TemplateBox[{"\"Script\"", "\"Script run in batch mode\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["WebAPI", {False, "WebAPI"}], "\" \"", 
            
            TemplateBox[{
             "\"WebAPI\"", "\"API called through an HTTP request\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Subkernel", {False, "Subkernel"}], "\" \"", 
            
            TemplateBox[{"\"Subkernel\"", "\"Parallel or grid subkernel\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Scheduled", {False, "Scheduled"}], "\" \"", 
            
            TemplateBox[{"\"Scheduled\"", "\"Scheduled task\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdUdtqwzAMha3NBbZ9xN7zEV2WQsagpRrsOReVmDq2seRC/\
n721jjpnnykI845kndZAVvgSSIkB8fGcQFpOWB3wf6c0uZTEEMKSCS0gudvbKtrI13DoczeGu6GD91\
CAp0VhiHxA7tjDTm49oJWofSwG7B3EnvvVDOONOueH2hz8sSiP4PIRN2/N/bv9GcY2X8x78tF+\
5b19q6058ArGNll54gKyI5WG7Q8wWupR+N9WiEFT4trpa7CajWiCgc+mNCjILo+\
BGVVL7hpPdruG0kYifwdJa6Z8EtaulFR+VjAS60YrbF+5HfjfKcmfxZCb/Z0QtLOdvg1GR9/\
71QXZn4A3oyuQA=="},
 CellTags->{
  "CheckboxCell", "CompatibilityEvaluationEnvironment", 
   "CompatibilityEvaluationEnvironment-Checkboxes"},
 CellID->171952027,ExpressionUUID->"c3c79366-b603-49e7-a7b0-7860150f5c51"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your function is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "1bf0095a-5356-44f5-b8c7-c01d93d9f051"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{"Cloud Support", "CompatibilityCloudSupport", "TemplateCellGroup"},
 CellID->104285080,ExpressionUUID->"609decd4-ff32-4dfe-ae75-73efe502da14"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[True, {False, True}], "\" \"", 
            "\"Supported in cloud\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxNjkEKwkAMRVGqVhAX7tx5gR5Cq0JBqBgvUNsUB6eTYZIsentnQMVdyH/vJ/\
u8gBnIaBHmtYpXKWBRPrF9YddPOLsYFs7uQTFyleDA320/\
5eym0duAek9BsNsZt2stafc18msgj0FG2JY0+EbMw1gjY5mgjxbv1V4MOU6N/\
82cnzojzSNOs3NjGX/B8ogW/5P0NFkdHJeTAtaVEww+RCQVw+\
JAZLFxBaxuyKShxfvoEfKzujYRb6FXWpA="},
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->131115484,ExpressionUUID->"ecb6a990-8702-4d91-bb6d-92fd8dcfcb75"]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Author Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Author Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "This section, when used, will appear near the bottom of the \
published resource. Content displayed in this section can include background, \
possible improvements, additional information and/or implementation details \
that are otherwise beyond the scope of the function documentation.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "90d225f5-0560-4a70-94f8-21aaac3397b1"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Author Notes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Author Notes", "TemplateCellGroup"},
 CellID->681870591,ExpressionUUID->"1c789a6a-96b1-4028-ad0a-638fd54d01a6"],

Cell["Additional information about limitations, issues, etc.", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->958952487,ExpressionUUID->"66a1f5da-caed-4eac-8078-8a741705686d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Submission Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Submission Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter any additional information that you would like to communicate \
to the reviewer here. This section will not be included in the published \
resource.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSubmissionNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "eb832c1a-d440-4aa0-a293-e7ceec040d4f"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Submission Notes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Submission Notes", "TemplateCellGroup"},
 CellID->916799765,ExpressionUUID->"37a5b2bf-da48-4449-bbf7-7c45a10a4ba1"],

Cell["Additional information for the reviewer.", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->604291542,ExpressionUUID->"6d993c96-3fa5-4c9f-9ab9-90c2c89219b2"]
}, Open  ]]
}, Open  ]]
},
WindowSize->Automatic,
WindowMargins->{{279, Automatic}, {Automatic, 40.199999999999996`}},
WindowTitle->"FileTreePicker | Definition Notebook",
TaggingRules->{"CompatibilityTest" -> HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWVtT20YUrjEQBhxaMulMkyc98EAyadJpO9NL2iauDcQdIMCa9JW1dGQ0rHeV3RWg\
X9a/17MrydhGciTbTFNPJsja1XfOnut3LH9JPWqJQSgi7u3ehBKUCgT3a2rlJApA+/nLS2qp4+P/\
9Sb38M/K7seIMrW5/QGkWT+KBj2Q0refnbdmB6EDOMGLRiuSErj+QFkE/\
hfq0e4VXlFtnhIaekJc4q7lg0Bp1ejSfj/g/dOIgSKNU1Aiki504xDIcptqimouv+\
cuFGq58icT7qXZlgButwTXcKOPqb7w60UnPwLwFNnJ5JFYaRi0WIBqn7fBD3gwqu757SOOUSp7LG+\
rWj6KGEPFXt5dTAWcQh9VBYma+kE/ktY0w+O+KavUKYRCBVrIOAFMcFQKVLf+\
q6m1PRqwSKJnaurhMXUZ6A5XmjJGvinS0F+\
dxdgzmbXRFWOeWSdaYjz8JQIjr35IQ3uGiLvmSX8lkUyeFBrXKkeVCeuNBIuELNDmNmFCt2qkdk6Wf\
v195MbS63WrPMavIs/KKv/\
cXy6wUp2AkbfeFtfcJoFSv5RFzS7eRxrdCJ5JqHX0NKMuNDGuFgi7YZKuDYzG4CHuxjvBPHQkBiZXf\
5QFPpbBFQKeXyVlYV8CfpPqwRlXaTnIsUa7KjoNQ+DeGb+\
g3GPgtYAxNdUwi5IwxUb4tbKVXITFipcikK0uDPAAGoy4fSmicH5QzN1Gk5krLAdXGNBft3BTX8gA1\
LetC3Ave+IGb2/e3jbSSSNbs982UR6NmLb5zXWOpuTL7BaBJDdzXV26mg0doS674iz08Dqt+\
8VeXgD4mIPreONBlgJr+0z0KDu/MC1t1KLqp7Ji90G/\
CzwPeFKIyqfrHuVu3LoQgQvtgDLRH1WskSomNXZJ7K9YlCm/\
zFOd4uqWXTU9icDHCPDU5FFqAeZlAk+\
wXQzPOy5gBCxrKStdGdnUnrNKVGl22UUWdCkNUd9XVYH3quRYSmUmpY5ZKLPnEVwP7Zlr4yRB1GFVl\
bcjBQfQp27c6XMhk+qU+VotG2/kJ9/rspJycCcSb1oazilmWo1dUqsH+\
KQtjHtV7dYHnZWxcYkLSyVMiQ3UHLAuUgXqPtQtzEak0JY1r5rdnbbJS6ufetDBmt3HSF3rcCss/\
oSR60OtCw6eApeue9mJ1LAz3IHt3Vp7KH5EZk3tVm6DlAseuJQdSxECWsvyuVl1HlE0f4hYSotho6m\
UcAPLvU9Us3Juh6m2JEb144GJobWmJSNdsRg4GyZkk1igQ9DUM/\
NBOoGRtVagkwHkSbLj1Sn4IE10O9nSbXVZjFdGhE6olUxPwxkqGUGXD9Dmd0bPL+zn+\
VucCeYZVqZMEhX4/fNClGqEvhrONAb/YyESDoGXtA/ERYdU4+1nhZhJt8uLg0TYzET+3kROZ/\
YlrVeGz88E9Zmx+OP5vVCB1t+HtFl4/k6hHpPEvjht/ydMfqZqgQDffbJeTVLn1tzOtQz+\
VSHMfVD2YqXHzDMzUX9RiD8fM6+KW5aK/1bOHv8tAZ9Lyc+Idv9ceA7iShpi/ZnMkHl49+\
uS7SqXbc+s6ox0uzPlN/bsx3HMtiicFDuddi8UdpH0ex7nlCTdtbHf2yfeAuUz8R/sZ+etcc9oqyP/\
1LoXgXJ4qqpjqBiVytHC6YHj2i7iOb4UA4c6HK5BOmmHeeEogf8G4Pi4KcIocAY0NkjOtZCIpBy4CT\
F2wHvptIUTi8i5DtSFgdYydmikxQAPizZgseMKjrgaw8/RYwrhboqrgxC39hhk0t/cTg/\
1dHpYy6aH8TlCbaLrk2YjJJVx4TBiHTj5bmz4CqLgfdhDgg6L1CGioG9x+\
xY6tG9AO9zDs2EcDuvRetMalxpasHaEJNB0BOvNVRIPeoKRp8nbn0PKEUyeJ9+Snkce5811pZ/+\
KouXDOV2vNqeXMp9D7QyIujZnSeKiMG4/\
WyabbVsUI30dbWyR5mC4Y6npzAQV7A7CHW8e0ORJGTUV01ufdzMGR2GbTwVmCj3d8A9cd0NNHoiRcl\
98fkvn3IKDA=="]]], "CreationTimestamp" -> 
  3.872005247166492`16.34051092633296*^9, "DefinitionNotebookFramework" -> 
  "DefinitionNotebookClient", "ResourceCreateNotebook" -> True, 
  "ResourceType" -> "Function", 
  "RuntimeConfiguration" -> {
   "LoadingMethod" -> "Paclet", "PacletName" -> "FunctionResource", 
    "Contexts" -> {
     "FunctionResource`", "FunctionResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Legacy"}, "ToolsOpen" -> False, 
  "UpdatedTimestamp" -> 3.872005247218531`16.340510926338794*^9, 
  "VersionInformation" -> {"ResourceVersion" -> "1.0.0"}, "TemplateVersion" -> 
  "1.6.4", "StatusMessage" -> "", 
  "SubmissionReviewData" -> {"Review" -> False}},
CreateCellID->True,
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (May 18, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], WindowToolbars -> {}, DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.92157, 0.34118, 0.10588], CellTags -> {"MainDockedCell"}, 
       CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    PrivateNotebookOptions -> {
     "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
    CellLabelAutoDelete -> False, 
    CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
    AutoQuoteCharacters -> {}], 
   Cell["Hint Styles", "Section"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell["Template Boxes", "Section"], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.62744, 0.62744, 0.62744, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.62744, 0.62744, 0.62744, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.99998, 0.99998, 0.99998, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.98824, 0.41961, 0.20392], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.66667], 0], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], 
        Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2790153672590285854; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2790153672590285854]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchjw5tvzu19maOx1UPSQgCsoEiQHGiDHl4/3Zz
6mVTBlwIKAtUg8eQR8f3XQtUAaq8as/zYkrFxwPrf718DEFANlAEKA6UBaoB
qsRuyMP7EBPuZTj8fHYfa+gBxYGyEHPg7kE2BOILoBqCEQExB+QvVEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEuR9D0mIIUBAuSFUccl/6oUJVWKHKumEKimW
WnmHOrmYSuUJwkkUlmykA4IR8Z+40h4AAyMnLQ==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchNw/sODmxYXeazzp7OQgCsoEiQHFiDHny4P7h
2ozl2my4EFAWqAaPIbeP7t/ooQlUuVqP87yn9MMwtU8p+hAEZANFgOJAWaAa
oEqshgDNh5iwx1rwY7Len2wTTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwB
hhjEF7jcgOYeiL8g4Qw3BBjyQEGgrwmaAEFAlUD1QF3IhgBjECgIDD0iDQGq
BKoH6gLqhaRGIAOYEoCCwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8gQOKCzZyADEFOPElPYAYDEc1A==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CRv9++vFrQ/rAk4Ia3DAQB2UARoDhQFqgGqBKr
IUDzISZ8ObP/pp/CZVMGTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwBhhjE
F7jcgOYeiL8g4Qw3BBjyQAbQ1wRNgCCgSqB6oC5kQ4AxCGQAQ49IQ4AqgeqB
uoB6IakRyACmBCADGAtEGgJUCVQP1AUxBAgoN4QqLqFimFAldqiSTqiSYqmV
d6iSi6lVnsABhSUbGQCPs+GAmNIeAMvulj0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4138174468017918531; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4138174468017918531]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchjw5tvzu19maOx1UPSQgCsoEiQHGiDHl4/3Zz
6mVTBlwIKAtUg8eQR8f3XQtUAaq8as/zYkrFxwPrf718DEFANlAEKA6UBaoB
qsRuyMP7EBPuZTj8fHYfa+gBxYGyEHPg7kE2BOILoBqCEQExB+QvVEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEuR9D0mIIUBAuSFUccl/6oUJVWKHKumEKimW
WnmHOrmYSuUJwkkUlmykA4IR8Z+40h4AAyMnLQ==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchNw/sODmxYXeazzp7OQgCsoEiQHFiDHny4P7h
2ozl2my4EFAWqAaPIbeP7t/ooQlUuVqP87yn9MMwtU8p+hAEZANFgOJAWaAa
oEqshgDNh5iwx1rwY7Len2wTTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwB
hhjEF7jcgOYeiL8g4Qw3BBjyQEGgrwmaAEFAlUD1QF3IhgBjECgIDD0iDQGq
BKoH6gLqhaRGIAOYEoCCwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8gQOKCzZyADEFOPElPYAYDEc1A==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CRv9++vFrQ/rAk4Ia3DAQB2UARoDhQFqgGqBKr
IUDzISZ8ObP/pp/CZVMGTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwBhhjE
F7jcgOYeiL8g4Qw3BBjyQAbQ1wRNgCCgSqB6oC5kQ4AxCGQAQ49IQ4AqgeqB
uoB6IakRyACmBCADGAtEGgJUCVQP1AUxBAgoN4QqLqFimFAldqiSTqiSYqmV
d6iSi6lVnsABhSUbGQCPs+GAmNIeAMvulj0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Insert Delimiter\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert example delimiter\""}, "PrettyTooltipTemplate"], 
              ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1887802176716758884; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Insert Delimiter"; 
                    DefinitionNotebookClient`DelimiterInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1887802176716758884]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchjw5tvzu19maOx1UPSQgCsoEiQHGiDHl4/3Zz
6mVTBlwIKAtUg8eQR8f3XQtUAaq8as/zYkrFxwPrf718DEFANlAEKA6UBaoB
qsRuyMP7EBPuZTj8fHYfa+gBxYGyEHPg7kE2BOILoBqCEQExB+QvVEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEuR9D0mIIUBAuSFUccl/6oUJVWKHKumEKimW
WnmHOrmYSuUJwkkUlmykA4IR8Z+40h4AAyMnLQ==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchNw/sODmxYXeazzp7OQgCsoEiQHFiDHny4P7h
2ozl2my4EFAWqAaPIbeP7t/ooQlUuVqP87yn9MMwtU8p+hAEZANFgOJAWaAa
oEqshgDNh5iwx1rwY7Len2wTTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwB
hhjEF7jcgOYeiL8g4Qw3BBjyQEGgrwmaAEFAlUD1QF3IhgBjECgIDD0iDQGq
BKoH6gLqhaRGIAOYEoCCwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8gQOKCzZyADEFOPElPYAYDEc1A==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CRv9++vFrQ/rAk4Ia3DAQB2UARoDhQFqgGqBKr
IUDzISZ8ObP/pp/CZVMGTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwBhhjE
F7jcgOYeiL8g4Qw3BBjyQAbQ1wRNgCCgSqB6oC5kQ4AxCGQAQ49IQ4AqgeqB
uoB6IakRyACmBCADGAtEGgJUCVQP1AUxBAgoN4QqLqFimFAldqiSTqiSYqmV
d6iSi6lVnsABhSUbGQCPs+GAmNIeAMvulj0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Subscripted Variable\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert subscripted variable placeholder\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3787878858871814623; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Subscripted Variable"; 
                    DefinitionNotebookClient`SubscriptInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3787878858871814623]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchjw5tvzu19maOx1UPSQgCsoEiQHGiDHl4/3Zz
6mVTBlwIKAtUg8eQR8f3XQtUAaq8as/zYkrFxwPrf718DEFANlAEKA6UBaoB
qsRuyMP7EBPuZTj8fHYfa+gBxYGyEHPg7kE2BOILoBqCEQExB+QvVEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEuR9D0mIIUBAuSFUccl/6oUJVWKHKumEKimW
WnmHOrmYSuUJwkkUlmykA4IR8Z+40h4AAyMnLQ==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchNw/sODmxYXeazzp7OQgCsoEiQHFiDHny4P7h
2ozl2my4EFAWqAaPIbeP7t/ooQlUuVqP87yn9MMwtU8p+hAEZANFgOJAWaAa
oEqshgDNh5iwx1rwY7Len2wTTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwB
hhjEF7jcgOYeiL8g4Qw3BBjyQEGgrwmaAEFAlUD1QF3IhgBjECgIDD0iDQGq
BKoH6gLqhaRGIAOYEoCCwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8gQOKCzZyADEFOPElPYAYDEc1A==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CRv9++vFrQ/rAk4Ia3DAQB2UARoDhQFqgGqBKr
IUDzISZ8ObP/pp/CZVMGTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwBhhjE
F7jcgOYeiL8g4Qw3BBjyQAbQ1wRNgCCgSqB6oC5kQ4AxCGQAQ49IQ4AqgeqB
uoB6IakRyACmBCADGAtEGgJUCVQP1AUxBAgoN4QqLqFimFAldqiSTqiSYqmV
d6iSi6lVnsABhSUbGQCPs+GAmNIeAMvulj0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               TemplateBox[{
                 StyleBox[
                  
                  TemplateBox[{
                   "\"Tables\"", 
                    "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\
\[FilledDownTriangle]\""}, "RowDefault"], "Text", FontFamily -> 
                  "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                 "\"Table functions\""}, "PrettyTooltipTemplate"], 
               ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[3216557251994556740]
                    ], DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
               BaseStyle -> Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> GrayLevel[1], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchjw5tvzu19maOx1UPSQgCsoEiQHGiDHl4/3Zz
6mVTBlwIKAtUg8eQR8f3XQtUAaq8as/zYkrFxwPrf718DEFANlAEKA6UBaoB
qsRuyMP7EBPuZTj8fHYfa+gBxYGyEHPg7kE2BOILoBqCEQExB+QvVEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEuR9D0mIIUBAuSFUccl/6oUJVWKHKumEKimW
WnmHOrmYSuUJwkkUlmykA4IR8Z+40h4AAyMnLQ==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchNw/sODmxYXeazzp7OQgCsoEiQHFiDHny4P7h
2ozl2my4EFAWqAaPIbeP7t/ooQlUuVqP87yn9MMwtU8p+hAEZANFgOJAWaAa
oEqshgDNh5iwx1rwY7Len2wTTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwB
hhjEF7jcgOYeiL8g4Qw3BBjyQEGgrwmaAEFAlUD1QF3IhgBjECgIDD0iDQGq
BKoH6gLqhaRGIAOYEoCCwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8gQOKCzZyADEFOPElPYAYDEc1A==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CRv9++vFrQ/rAk4Ia3DAQB2UARoDhQFqgGqBKr
IUDzISZ8ObP/pp/CZVMGTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwBhhjE
F7jcgOYeiL8g4Qw3BBjyQAbQ1wRNgCCgSqB6oC5kQ4AxCGQAQ49IQ4AqgeqB
uoB6IakRyACmBCADGAtEGgJUCVQP1AUxBAgoN4QqLqFimFAldqiSTqiSYqmV
d6iSi6lVnsABhSUbGQCPs+GAmNIeAMvulj0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> GrayLevel[0.9], 
               Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
               Automatic], FrameStyle -> Directive[
                GrayLevel[0.9], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert table with two columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5800166344906378520; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with two columns"; 
                    DefinitionNotebookClient`TableInsert[2]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5800166344906378520]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert table with three columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    533841403879783297; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with three columns"; 
                    DefinitionNotebookClient`TableInsert[3]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    533841403879783297]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Add a row to the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4413051590217973467; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Add a row to the selected table"; 
                    DefinitionNotebookClient`TableRowInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4413051590217973467]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Sort the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    9150037060110806081; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Sort the selected table"; 
                    DefinitionNotebookClient`TableSort[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    9150037060110806081]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Merge selected tables\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2347719643166780208; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Merge selected tables"; 
                    DefinitionNotebookClient`TableMerge[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2347719643166780208]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> GrayLevel[1], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchjw5tvzu19maOx1UPSQgCsoEiQHGiDHl4/3Zz
6mVTBlwIKAtUg8eQR8f3XQtUAaq8as/zYkrFxwPrf718DEFANlAEKA6UBaoB
qsRuyMP7EBPuZTj8fHYfa+gBxYGyEHPg7kE2BOILoBqCEQExB+QvVEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEuR9D0mIIUBAuSFUccl/6oUJVWKHKumEKimW
WnmHOrmYSuUJwkkUlmykA4IR8Z+40h4AAyMnLQ==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchNw/sODmxYXeazzp7OQgCsoEiQHFiDHny4P7h
2ozl2my4EFAWqAaPIbeP7t/ooQlUuVqP87yn9MMwtU8p+hAEZANFgOJAWaAa
oEqshgDNh5iwx1rwY7Len2wTTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwB
hhjEF7jcgOYeiL8g4Qw3BBjyQEGgrwmaAEFAlUD1QF3IhgBjECgIDD0iDQGq
BKoH6gLqhaRGIAOYEoCCwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8gQOKCzZyADEFOPElPYAYDEc1A==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CRv9++vFrQ/rAk4Ia3DAQB2UARoDhQFqgGqBKr
IUDzISZ8ObP/pp/CZVMGTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwBhhjE
F7jcgOYeiL8g4Qw3BBjyQAbQ1wRNgCCgSqB6oC5kQ4AxCGQAQ49IQ4AqgeqB
uoB6IakRyACmBCADGAtEGgJUCVQP1AUxBAgoN4QqLqFimFAldqiSTqiSYqmV
d6iSi6lVnsABhSUbGQCPs+GAmNIeAMvulj0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> GrayLevel[0.9], 
               Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
               Automatic], FrameStyle -> Directive[
                GrayLevel[0.9], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert comment for reviewer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2572781756330727330; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment for reviewer"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2572781756330727330]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3646530685697756512; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3646530685697756512]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1866935765212102190; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1866935765212102190]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              GrayLevel[0.9]}}, 
          GridBoxFrame -> {
           "Columns" -> False, "RowsIndexed" -> {1 -> GrayLevel[0.9]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{
                  Thickness[0.022222], {
                   FaceForm[{
                    RGBColor[0.87451, 0.27843, 0.031373], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{45., 22.5}, {45., 10.074}, {34.926, 0.}, {22.5, 
                    0.}, {10.074, 0.}, {0., 10.074}, {0., 22.5}, {0., 
                    34.926}, {10.074, 45.}, {22.5, 45.}, {34.926, 45.}, {45., 
                    34.926}, {45., 22.5}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwAWIQLckSxqe7SdlhmnN3zvPblg4w/smyffOl/K0cEp5e
ULq9U9lhT8lkCZZrVg6VL9UMOd4oO1SLrHN/GGXtcLUCKOCh4sDDpN0udtPa
4fnvlR8v8ao6ZIE12ELMrVZzAHLC+HjtHICGz32fruGQC1Zo57BASv+uCpsW
RP9Me4g9YjoQe3gcHICqlx/z1nNgAAEFB4j6Y/oOQMvOfVd2gLhjlgGEz+zg
oBnTf+irhiFEfw/UvDJDiP2+9g7qhhxrZGYZQtS9sHP48vdKxcs2Q4i72u0c
pEHOSTSEuxfsTiFDiPhCWwcXoHd+rzRwWOS67fPfEFuHx0tnH1EoMHDYUJQx
8a2MrUPQDrnW14IGUPfaOnzTAFq0VR8aXrYOoFA6V64HcccvWwfTuF2ePEy6
UPPtHIC+CH68VBvOP70QaNFeLTg/X6j5wKlELYdPl3yTBCLsIP7U0YK49y3U
PR80HQJ6p+cJHbaB88HqZ1jD1QNdUyWSZwWJH2stiHtuWcLdC+ND4lvfwbzT
MeHpBEt4+IPld1lA4p9DH+LuVgu4eeh8sH18hnA+2J6velB3aUHSyxE9iP8U
9aDpBMH3A/rWskQHYt8JBQw+TD0kPpTh5sHSMzgd/0TwYe6B8WHulY1Ksb7f
rwDng+PHSQES31csIPF7UREePgCOg02w
                    "], {{19.051, 14.242}, {19.051, 27.594}, {23.828, 
                    27.594}, {23.828, 26.543}, {21.426, 26.309}, {21.375, 
                    26.258}, {21.375, 24.219}, {21.375, 17.535}, {21.375, 
                    15.602}, {21.426, 15.547}, {23.828, 15.316}, {23.828, 
                    14.242}}, {{24.578, 18.75}, {24.578, 23.078}, {24.578, 
                    23.539}, {24.953, 23.914}, {25.418, 23.91}, {29.746, 
                    23.91}, {30.203, 23.91}, {30.578, 23.539}, {30.578, 
                    23.078}, {30.578, 18.75}, {30.582, 18.289}, {30.207, 
                    17.91}, {29.746, 17.91}, {25.418, 17.91}, {24.953, 
                    17.906}, {24.574, 18.285}, {24.578, 18.75}}, {{31.328, 
                    14.242}, {31.328, 15.316}, {33.684, 15.539}, {33.789, 
                    15.602}, {33.789, 17.641}, {33.789, 24.188}, {33.789, 
                    26.227}, {33.684, 26.281}, {31.328, 26.512}, {31.328, 
                    27.586}, {36.113, 27.586}, {36.113, 14.234}}}]}}, {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], AspectRatio -> Automatic, Background -> 
                  RGBColor[0.98824, 0.41961, 0.20392], 
                  ImageSize -> {45., 45.}, 
                  PlotRange -> {{0., 45.}, {0., 45.}}}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Function Resource\"", FontFamily -> "Source Sans Pro", 
                    FontWeight -> "SemiBold", StripOnInput -> False], 
                    StyleBox[
                    "\"DEFINITION NOTEBOOK\"", FontFamily -> 
                    "Source Sans Pro", FontTracking -> "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {2 -> RGBColor[1., 1., 1.]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> RGBColor[1., 1., 1.], 
                 StripOnInput -> False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Function Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> RGBColor[1., 1., 1.], 
               StripOnInput -> False], 
              "https://resources.wolframcloud.com/FunctionRepository"}, 
             "HyperlinkURL"]}, {
            TemplateBox[{
              
              TemplateBox[{
               "\"Open Sample\"", 
                "\"View a completed sample definition notebook\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 4393071033038384034; (
                DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                DefinitionNotebookClient`ViewExampleNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[4393071033038384034]]& , 
              "\"View a completed sample definition notebook\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Style Guidelines\"", 
                "\"View general guidelines for authoring resource \
functions\""}, "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5906117565281445171; (
                DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
                DefinitionNotebookClient`ViewStyleGuidelines[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5906117565281445171]]& , 
              "\"View general guidelines for authoring resource functions\"", 
              False}, "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 9, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 9, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5074018684552945401; (
                DefinitionNotebookClient`$ClickedButton = "Tools"; 
                DefinitionNotebookClient`ToggleToolbar[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5074018684552945401]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[0.99412, 0.7098, 0.60196]], "Grid"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Check\"", "\"Check notebook for potential errors\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 7891204313296928191; (
                DefinitionNotebookClient`$ClickedButton = "Check"; 
                DefinitionNotebookClient`CheckDefinitionNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[7891204313296928191]]& , 
              "\"Check notebook for potential errors\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              
              TemplateBox[{"\"Preview\"", "\"Generate a preview notebook\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 4299709568580201021; (
                DefinitionNotebookClient`$ClickedButton = "Preview"; 
                DefinitionNotebookClient`PreviewResource[
                  ButtonNotebook[], "Notebook"]), 
               DefinitionNotebookClient`ButtonCodeID[4299709568580201021]]& , 
              "\"Generate a preview notebook\"", True}, 
             "OrangeButtonTemplate"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Locally on this computer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8714502586816766511; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Locally on this computer"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "Local"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8714502586816766511]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"For my cloud account\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1389539917011878958; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "For my cloud account"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPrivate"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1389539917011878958]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5593410685219912767; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPublic"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5593410685219912767]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], 
              "\"In this session only (without documentation)\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8586347731213964380; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "In this session only (without documentation)"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "KernelSession"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8586347731213964380]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your function submission\""}, 
                   "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3196298050911436087; (
                    DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3196298050911436087]]& , 
                  "\"Submit changes to update your function submission\"", 
                  True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your function to the Wolfram Function \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3704832848557640569; (
                    DefinitionNotebookClient`$ClickedButton = "Submit"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3704832848557640569]]& , 
                  "\"Submit your function to the Wolfram Function \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.98824, 0.41961, 0.20392], 
              RGBColor[0.92157, 0.34118, 0.10588]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[0.98824, 0.41961, 0.20392], 2 -> 
              RGBColor[0.92157, 0.34118, 0.10588]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[0.98824, 0.41961, 0.20392]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{
               Thickness[0.022222], {
                FaceForm[{
                  RGBColor[0.87451, 0.27843, 0.031373], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, {{{45., 22.5}, {45., 10.074}, {34.926, 0.}, {22.5, 
                 0.}, {10.074, 0.}, {0., 10.074}, {0., 22.5}, {0., 34.926}, {
                 10.074, 45.}, {22.5, 45.}, {34.926, 45.}, {45., 34.926}, {
                 45., 22.5}}}]}, {
                FaceForm[{
                  RGBColor[1., 1., 1.], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                  2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                  0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwAWIQLckSxqe7SdlhmnN3zvPblg4w/smyffOl/K0cEp5e
ULq9U9lhT8lkCZZrVg6VL9UMOd4oO1SLrHN/GGXtcLUCKOCh4sDDpN0udtPa
4fnvlR8v8ao6ZIE12ELMrVZzAHLC+HjtHICGz32fruGQC1Zo57BASv+uCpsW
RP9Me4g9YjoQe3gcHICqlx/z1nNgAAEFB4j6Y/oOQMvOfVd2gLhjlgGEz+zg
oBnTf+irhiFEfw/UvDJDiP2+9g7qhhxrZGYZQtS9sHP48vdKxcs2Q4i72u0c
pEHOSTSEuxfsTiFDiPhCWwcXoHd+rzRwWOS67fPfEFuHx0tnH1EoMHDYUJQx
8a2MrUPQDrnW14IGUPfaOnzTAFq0VR8aXrYOoFA6V64HcccvWwfTuF2ePEy6
UPPtHIC+CH68VBvOP70QaNFeLTg/X6j5wKlELYdPl3yTBCLsIP7U0YK49y3U
PR80HQJ6p+cJHbaB88HqZ1jD1QNdUyWSZwWJH2stiHtuWcLdC+ND4lvfwbzT
MeHpBEt4+IPld1lA4p9DH+LuVgu4eeh8sH18hnA+2J6velB3aUHSyxE9iP8U
9aDpBMH3A/rWskQHYt8JBQw+TD0kPpTh5sHSMzgd/0TwYe6B8WHulY1Ksb7f
rwDng+PHSQES31csIPF7UREePgCOg02w
                  "], {{19.051, 14.242}, {19.051, 27.594}, {23.828, 27.594}, {
                  23.828, 26.543}, {21.426, 26.309}, {21.375, 26.258}, {
                  21.375, 24.219}, {21.375, 17.535}, {21.375, 15.602}, {
                  21.426, 15.547}, {23.828, 15.316}, {23.828, 14.242}}, {{
                  24.578, 18.75}, {24.578, 23.078}, {24.578, 23.539}, {24.953,
                   23.914}, {25.418, 23.91}, {29.746, 23.91}, {30.203, 
                  23.91}, {30.578, 23.539}, {30.578, 23.078}, {30.578, 
                  18.75}, {30.582, 18.289}, {30.207, 17.91}, {29.746, 
                  17.91}, {25.418, 17.91}, {24.953, 17.906}, {24.574, 
                  18.285}, {24.578, 18.75}}, {{31.328, 14.242}, {31.328, 
                  15.316}, {33.684, 15.539}, {33.789, 15.602}, {33.789, 
                  17.641}, {33.789, 24.188}, {33.789, 26.227}, {33.684, 
                  26.281}, {31.328, 26.512}, {31.328, 27.586}, {36.113, 
                  27.586}, {36.113, 14.234}}}]}}, {
              ImageSize -> 12, AspectRatio -> Automatic, Background -> None, 
               ImageSize -> {45., 45.}, PlotRange -> {{0., 45.}, {0., 45.}}}],
              "Wolfram Function Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11]}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.95686, 0.80196, 0.75]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 3145484069433207908; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[3145484069433207908]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4HW4NCUIlyHPAkQfuPPftue4ZskMQUA2UAQoTpQhYVJ3
XXgumzLgQkBZoBo8hjwLFLtuzQJSbIbDELA4UA1QJXZDwqSgJhCBgCrh7kE2
BL8vsPsL1RBgiOHzBQ5/QcIZbggw5ElyBgQBdSEbAoxBMgwB6gLqhaRGIAOY
EsgwBKgLYggQUG4IVVxCxTChSuxQJZ1QJcVSK+9QJxdTqTyhWslGbhmLHxBT
2gMAMUz3Hw==
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4HW4NCUIlyF3/cTOOAvtteRZb8ABQUA2UAQoTowhL0Ol
jtrxL9dmw4WAskA1eAy57y++yYgTjwkQBFQDVInVEKD5xJgANwfuHmRD8PsC
q7/QDAGGGEkmQBAknOGGAEOeDEOAupANAcYgGYYAdQH1QlIjkAFMCWQYAtQF
MQQIKDeEKi6hYphQJXaokk6okmKplXeokoupVZ5Qq2Qju4zFD4gp7QFpR8IT

             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4HW4NCUIlyHvKz2/LG7+eWr737fPIAjIBooAxYkx5E2M
0rets/E4GygLVIPHkHclTn+e3gaK/P76+drsrsN5IRudFCEIyAaKAMWBskA1
QJVYDQGaDzHh5amDm9xUl2uzYSKgOFAWYg7cPciGQHwBVINVOzKCmANUj2YI
MMQgvsDlBjT3QPwFCWe4IcCQBzKAviZoAgQBVQLVA3UhGwKMQSADGHpEGgJU
CVQP1AXUC0mNQAYwJQAZwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8oRaJRvZZSx+QExpDwAxBaHa
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True]}, Background -> 
         RGBColor[0.92157, 0.34118, 0.10588], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.92157, 0.34118, 0.10588], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.055556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.308}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.308}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa
m8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5
N5G6
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
N3kqZvY=
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, PlotRange -> {{0, 50.}, {0, 50.}}],
              True -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
DcvuuIyle//vxt/PCE6d
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, 
               PlotRange -> {{0, 50.}, {0, 50.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell["Documentation", "Section"], 
   Cell["Usage", "Subsection"], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell["Details & Options", "Subsection"], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    StyleMenuListing -> None], 
   Cell["Examples", "Subsection"], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell["Links", "Section"], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell["Annotation", "Section"], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.88072, 0.61104, 0.14205], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.36842, 0.50678, 0.7098], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.56018, 0.69157, 0.19488], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", FontColor -> 
    GrayLevel[0.5]], 
   Cell["Special Input", "Section"], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 1053094956087266899; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog[
                    "Function", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "FileOpen"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[1053094956087266899]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 4898876371082581810; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog[
                    "Function", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "Directory"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[4898876371082581810]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell["Misc", "Section"], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[0.9]]}, Visible -> False, FrontEndVersion -> 
  "13.3 for Microsoft Windows (64-bit) (May 18, 2023)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"b6d8de36-17fb-4f16-a201-d0ec5200f22f"
]
